{
	"id": "f56d2a95622aaf02db3faade636bd8bf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"TolcoinStakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TolcoinStaking is Ownable {\r\n    IERC20 public immutable tolcoin;\r\n\r\n    struct StakeInfo {\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n        uint256 rewardDebt;\r\n    }\r\n\r\n    mapping(address => StakeInfo) public stakes;\r\n    uint256 public rewardRatePerSecond = 115740740740; // ~10% APR with 1e18 precision\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 reward);\r\n\r\n    constructor() Ownable(0xcD1710e8A72c95BDd127CC71e1227D8C98e05Aec) {\r\n        tolcoin = IERC20(0xEBd92716d4aAc1ABe6A73a42B5A83a42C145447d);\r\n    }\r\n\r\n    function stake(uint256 amount) external {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _updateReward(msg.sender);\r\n\r\n        tolcoin.transferFrom(msg.sender, address(this), amount);\r\n        stakes[msg.sender].amount += amount;\r\n        stakes[msg.sender].timestamp = block.timestamp;\r\n\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        require(stakes[msg.sender].amount >= amount, \"Insufficient stake\");\r\n\r\n        _updateReward(msg.sender);\r\n        stakes[msg.sender].amount -= amount;\r\n        tolcoin.transfer(msg.sender, amount);\r\n\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function claimReward() external {\r\n        _updateReward(msg.sender);\r\n\r\n        uint256 reward = stakes[msg.sender].rewardDebt;\r\n        require(reward > 0, \"No reward\");\r\n\r\n        stakes[msg.sender].rewardDebt = 0;\r\n        tolcoin.transfer(msg.sender, reward);\r\n\r\n        emit RewardClaimed(msg.sender, reward);\r\n    }\r\n\r\n    function _updateReward(address account) internal {\r\n        StakeInfo storage stakeInfo = stakes[account];\r\n        if (stakeInfo.amount > 0) {\r\n            uint256 duration = block.timestamp - stakeInfo.timestamp;\r\n            uint256 reward = (stakeInfo.amount * duration * rewardRatePerSecond) / 1e18;\r\n            stakeInfo.rewardDebt += reward;\r\n        }\r\n        stakeInfo.timestamp = block.timestamp;\r\n    }\r\n\r\n    function setRewardRate(uint256 newRate) external onlyOwner {\r\n        rewardRatePerSecond = newRate;\r\n    }\r\n\r\n    function emergencyWithdraw() external onlyOwner {\r\n        uint256 balance = tolcoin.balanceOf(address(this));\r\n        tolcoin.transfer(owner(), balance);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TolcoinStakingContract.sol": {
				"TolcoinStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRatePerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tolcoin",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TolcoinStakingContract.sol\":175:2601  contract TolcoinStaking is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"TolcoinStakingContract.sol\":459:471  115740740740 */\n  0x1af2af8c84\n    /* \"TolcoinStakingContract.sol\":422:471  uint256 public rewardRatePerSecond = 115740740740 */\n  0x02\n  sstore\n    /* \"TolcoinStakingContract.sol\":695:840  constructor() Ownable(0xcD1710e8A72c95BDd127CC71e1227D8C98e05Aec) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TolcoinStakingContract.sol\":717:759  0xcD1710e8A72c95BDd127CC71e1227D8C98e05Aec */\n  0xcd1710e8a72c95bdd127cc71e1227d8c98e05aec\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"TolcoinStakingContract.sol\":789:831  0xEBd92716d4aAc1ABe6A73a42B5A83a42C145447d */\n  0xebd92716d4aac1abe6a73a42b5a83a42c145447d\n    /* \"TolcoinStakingContract.sol\":772:832  tolcoin = IERC20(0xEBd92716d4aAc1ABe6A73a42B5A83a42C145447d) */\n  0x80\n  mstore\n    /* \"TolcoinStakingContract.sol\":175:2601  contract TolcoinStaking is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:217   */\ntag_13:\n    /* \"TolcoinStakingContract.sol\":175:2601  contract TolcoinStaking is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"TolcoinStakingContract.sol\":175:2601  contract TolcoinStaking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1859ea47\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5d773b2c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TolcoinStakingContract.sol\":372:415  mapping(address => StakeInfo) public stakes */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      dup4\n      jump\n    tag_15:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":507:532   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":563:565   */\n      0x20\n        /* \"#utility.yul\":548:566   */\n      dup5\n      add\n        /* \"#utility.yul\":541:575   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":591:609   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":584:618   */\n      mstore\n        /* \"#utility.yul\":495:497   */\n      0x60\n        /* \"#utility.yul\":480:498   */\n      add\n        /* \"TolcoinStakingContract.sol\":372:415  mapping(address => StakeInfo) public stakes */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TolcoinStakingContract.sol\":217:248  IERC20 public immutable tolcoin */\n    tag_4:\n      tag_21\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":807:839   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":789:840   */\n      dup2\n      mstore\n        /* \"#utility.yul\":777:779   */\n      0x20\n        /* \"#utility.yul\":762:780   */\n      add\n        /* \"TolcoinStakingContract.sol\":217:248  IERC20 public immutable tolcoin */\n      tag_19\n        /* \"#utility.yul\":629:846   */\n      jump\n        /* \"TolcoinStakingContract.sol\":1203:1560  function withdraw(uint256 amount) external {... */\n    tag_5:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"TolcoinStakingContract.sol\":422:471  uint256 public rewardRatePerSecond = 115740740740 */\n    tag_6:\n      tag_29\n      sload(0x02)\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1182:1207   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1170:1172   */\n      0x20\n        /* \"#utility.yul\":1155:1173   */\n      add\n        /* \"TolcoinStakingContract.sol\":422:471  uint256 public rewardRatePerSecond = 115740740740 */\n      tag_19\n        /* \"#utility.yul\":1036:1213   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_25\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_21)\n        /* \"TolcoinStakingContract.sol\":2321:2428  function setRewardRate(uint256 newRate) external onlyOwner {... */\n    tag_9:\n      tag_25\n      tag_40\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"TolcoinStakingContract.sol\":848:1195  function stake(uint256 amount) external {... */\n    tag_10:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"TolcoinStakingContract.sol\":1568:1890  function claimReward() external {... */\n    tag_11:\n      tag_25\n      tag_46\n      jump\t// in\n        /* \"TolcoinStakingContract.sol\":2436:2598  function emergencyWithdraw() external onlyOwner {... */\n    tag_12:\n      tag_25\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_25\n      tag_50\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"TolcoinStakingContract.sol\":1203:1560  function withdraw(uint256 amount) external {... */\n    tag_28:\n        /* \"TolcoinStakingContract.sol\":1274:1275  0 */\n      0x00\n        /* \"TolcoinStakingContract.sol\":1265:1271  amount */\n      dup2\n        /* \"TolcoinStakingContract.sol\":1265:1275  amount > 0 */\n      gt\n        /* \"TolcoinStakingContract.sol\":1257:1297  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1628:1630   */\n      0x20\n        /* \"TolcoinStakingContract.sol\":1257:1297  require(amount > 0, \"Cannot withdraw 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1610:1631   */\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x11\n        /* \"#utility.yul\":1647:1665   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1640:1670   */\n      mstore\n      shl(0x7c, 0x043616e6e6f74207769746864726177203)\n        /* \"#utility.yul\":1686:1704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1679:1726   */\n      mstore\n        /* \"#utility.yul\":1743:1761   */\n      0x64\n      add\n        /* \"TolcoinStakingContract.sol\":1257:1297  require(amount > 0, \"Cannot withdraw 0\") */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"TolcoinStakingContract.sol\":1323:1333  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1316:1334  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1316:1322  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1316:1334  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TolcoinStakingContract.sol\":1316:1341  stakes[msg.sender].amount */\n      sload\n        /* \"TolcoinStakingContract.sol\":1316:1351  stakes[msg.sender].amount >= amount */\n      dup2\n      gt\n      iszero\n        /* \"TolcoinStakingContract.sol\":1308:1374  require(stakes[msg.sender].amount >= amount, \"Insufficient stake\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"TolcoinStakingContract.sol\":1308:1374  require(stakes[msg.sender].amount >= amount, \"Insufficient stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1956:1977   */\n      mstore\n        /* \"#utility.yul\":2013:2015   */\n      0x12\n        /* \"#utility.yul\":1993:2011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1986:2016   */\n      mstore\n      shl(0x70, 0x496e73756666696369656e74207374616b65)\n        /* \"#utility.yul\":2032:2050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2025:2073   */\n      mstore\n        /* \"#utility.yul\":2090:2108   */\n      0x64\n      add\n        /* \"TolcoinStakingContract.sol\":1308:1374  require(stakes[msg.sender].amount >= amount, \"Insufficient stake\") */\n      tag_54\n        /* \"#utility.yul\":1772:2114   */\n      jump\n        /* \"TolcoinStakingContract.sol\":1308:1374  require(stakes[msg.sender].amount >= amount, \"Insufficient stake\") */\n    tag_56:\n        /* \"TolcoinStakingContract.sol\":1387:1412  _updateReward(msg.sender) */\n      tag_59\n        /* \"TolcoinStakingContract.sol\":1401:1411  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1387:1400  _updateReward */\n      tag_60\n        /* \"TolcoinStakingContract.sol\":1387:1412  _updateReward(msg.sender) */\n      jump\t// in\n    tag_59:\n        /* \"TolcoinStakingContract.sol\":1430:1440  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1423:1441  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1423:1429  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1423:1441  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"TolcoinStakingContract.sol\":1423:1458  stakes[msg.sender].amount -= amount */\n      dup1\n      sload\n        /* \"TolcoinStakingContract.sol\":1452:1458  amount */\n      dup4\n      swap3\n        /* \"TolcoinStakingContract.sol\":1423:1441  stakes[msg.sender] */\n      swap1\n        /* \"TolcoinStakingContract.sol\":1423:1458  stakes[msg.sender].amount -= amount */\n      tag_61\n      swap1\n        /* \"TolcoinStakingContract.sol\":1452:1458  amount */\n      dup5\n      swap1\n        /* \"TolcoinStakingContract.sol\":1423:1458  stakes[msg.sender].amount -= amount */\n      tag_62\n      jump\t// in\n    tag_61:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"TolcoinStakingContract.sol\":1469:1505  tolcoin.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1486:1496  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1469:1505  tolcoin.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2558:2609   */\n      mstore\n        /* \"#utility.yul\":2625:2643   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2618:2652   */\n      dup3\n      swap1\n      mstore\n        /* \"TolcoinStakingContract.sol\":1469:1476  tolcoin */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TolcoinStakingContract.sol\":1469:1485  tolcoin.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2531:2549   */\n      0x44\n      add\n        /* \"TolcoinStakingContract.sol\":1469:1505  tolcoin.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      pop\n        /* \"TolcoinStakingContract.sol\":1523:1552  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1182:1207   */\n      dup2\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1533:1543  msg.sender */\n      caller\n      swap1\n        /* \"TolcoinStakingContract.sol\":1523:1552  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":1170:1172   */\n      0x20\n        /* \"#utility.yul\":1155:1173   */\n      add\n        /* \"TolcoinStakingContract.sol\":1523:1552  Withdrawn(msg.sender, amount) */\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TolcoinStakingContract.sol\":1203:1560  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"TolcoinStakingContract.sol\":2321:2428  function setRewardRate(uint256 newRate) external onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"TolcoinStakingContract.sol\":2391:2410  rewardRatePerSecond */\n      0x02\n        /* \"TolcoinStakingContract.sol\":2391:2420  rewardRatePerSecond = newRate */\n      sstore\n        /* \"TolcoinStakingContract.sol\":2321:2428  function setRewardRate(uint256 newRate) external onlyOwner {... */\n      jump\t// out\n        /* \"TolcoinStakingContract.sol\":848:1195  function stake(uint256 amount) external {... */\n    tag_44:\n        /* \"TolcoinStakingContract.sol\":916:917  0 */\n      0x00\n        /* \"TolcoinStakingContract.sol\":907:913  amount */\n      dup2\n        /* \"TolcoinStakingContract.sol\":907:917  amount > 0 */\n      gt\n        /* \"TolcoinStakingContract.sol\":899:936  require(amount > 0, \"Cannot stake 0\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3147:3149   */\n      0x20\n        /* \"TolcoinStakingContract.sol\":899:936  require(amount > 0, \"Cannot stake 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3129:3150   */\n      mstore\n        /* \"#utility.yul\":3186:3188   */\n      0x0e\n        /* \"#utility.yul\":3166:3184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3159:3189   */\n      mstore\n      shl(0x94, 0x043616e6e6f74207374616b65203)\n        /* \"#utility.yul\":3205:3223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3198:3242   */\n      mstore\n        /* \"#utility.yul\":3259:3277   */\n      0x64\n      add\n        /* \"TolcoinStakingContract.sol\":899:936  require(amount > 0, \"Cannot stake 0\") */\n      tag_54\n        /* \"#utility.yul\":2945:3283   */\n      jump\n        /* \"TolcoinStakingContract.sol\":899:936  require(amount > 0, \"Cannot stake 0\") */\n    tag_81:\n        /* \"TolcoinStakingContract.sol\":947:972  _updateReward(msg.sender) */\n      tag_84\n        /* \"TolcoinStakingContract.sol\":961:971  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":947:960  _updateReward */\n      tag_60\n        /* \"TolcoinStakingContract.sol\":947:972  _updateReward(msg.sender) */\n      jump\t// in\n    tag_84:\n        /* \"TolcoinStakingContract.sol\":985:1040  tolcoin.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1006:1016  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":985:1040  tolcoin.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3528:3562   */\n      mstore\n        /* \"TolcoinStakingContract.sol\":1026:1030  this */\n      address\n        /* \"#utility.yul\":3578:3596   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3571:3614   */\n      mstore\n        /* \"#utility.yul\":3630:3648   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3623:3657   */\n      dup3\n      swap1\n      mstore\n        /* \"TolcoinStakingContract.sol\":985:992  tolcoin */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TolcoinStakingContract.sol\":985:1005  tolcoin.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3463:3481   */\n      0x64\n      add\n        /* \"TolcoinStakingContract.sol\":985:1040  tolcoin.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_89:\n      pop\n        /* \"TolcoinStakingContract.sol\":1058:1068  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1051:1069  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1051:1057  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1051:1069  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"TolcoinStakingContract.sol\":1051:1086  stakes[msg.sender].amount += amount */\n      dup1\n      sload\n        /* \"TolcoinStakingContract.sol\":1080:1086  amount */\n      dup4\n      swap3\n        /* \"TolcoinStakingContract.sol\":1051:1069  stakes[msg.sender] */\n      swap1\n        /* \"TolcoinStakingContract.sol\":1051:1086  stakes[msg.sender].amount += amount */\n      tag_90\n      swap1\n        /* \"TolcoinStakingContract.sol\":1080:1086  amount */\n      dup5\n      swap1\n        /* \"TolcoinStakingContract.sol\":1051:1086  stakes[msg.sender].amount += amount */\n      tag_91\n      jump\t// in\n    tag_90:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"TolcoinStakingContract.sol\":1104:1114  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1097:1115  stakes[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1097:1103  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1097:1115  stakes[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"TolcoinStakingContract.sol\":1128:1143  block.timestamp */\n      timestamp\n        /* \"TolcoinStakingContract.sol\":1097:1125  stakes[msg.sender].timestamp */\n      swap2\n      add\n        /* \"TolcoinStakingContract.sol\":1097:1143  stakes[msg.sender].timestamp = block.timestamp */\n      sstore\n        /* \"TolcoinStakingContract.sol\":1161:1187  Staked(msg.sender, amount) */\n      mload\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n      tag_69\n      swap1\n        /* \"TolcoinStakingContract.sol\":1180:1186  amount */\n      dup5\n        /* \"#utility.yul\":1182:1207   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1170:1172   */\n      0x20\n        /* \"#utility.yul\":1155:1173   */\n      add\n      swap1\n        /* \"#utility.yul\":1036:1213   */\n      jump\n        /* \"TolcoinStakingContract.sol\":1568:1890  function claimReward() external {... */\n    tag_46:\n        /* \"TolcoinStakingContract.sol\":1611:1636  _updateReward(msg.sender) */\n      tag_94\n        /* \"TolcoinStakingContract.sol\":1625:1635  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1611:1624  _updateReward */\n      tag_60\n        /* \"TolcoinStakingContract.sol\":1611:1636  _updateReward(msg.sender) */\n      jump\t// in\n    tag_94:\n        /* \"TolcoinStakingContract.sol\":1673:1683  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1649:1663  uint256 reward */\n      0x00\n        /* \"TolcoinStakingContract.sol\":1666:1684  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1666:1672  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1666:1684  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TolcoinStakingContract.sol\":1666:1695  stakes[msg.sender].rewardDebt */\n      0x02\n      add\n      sload\n        /* \"TolcoinStakingContract.sol\":1714:1724  reward > 0 */\n      dup1\n        /* \"TolcoinStakingContract.sol\":1706:1738  require(reward > 0, \"No reward\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4000:4002   */\n      0x20\n        /* \"TolcoinStakingContract.sol\":1706:1738  require(reward > 0, \"No reward\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3982:4003   */\n      mstore\n        /* \"#utility.yul\":4039:4040   */\n      0x09\n        /* \"#utility.yul\":4019:4037   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4012:4041   */\n      mstore\n      shl(0xba, 0x139bc81c995dd85c99)\n        /* \"#utility.yul\":4057:4075   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4050:4089   */\n      mstore\n        /* \"#utility.yul\":4106:4124   */\n      0x64\n      add\n        /* \"TolcoinStakingContract.sol\":1706:1738  require(reward > 0, \"No reward\") */\n      tag_54\n        /* \"#utility.yul\":3798:4130   */\n      jump\n        /* \"TolcoinStakingContract.sol\":1706:1738  require(reward > 0, \"No reward\") */\n    tag_95:\n        /* \"TolcoinStakingContract.sol\":1758:1768  msg.sender */\n      caller\n        /* \"TolcoinStakingContract.sol\":1783:1784  0 */\n      0x00\n        /* \"TolcoinStakingContract.sol\":1751:1769  stakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1751:1757  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1751:1769  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"TolcoinStakingContract.sol\":1751:1780  stakes[msg.sender].rewardDebt */\n      0x02\n      add\n        /* \"TolcoinStakingContract.sol\":1751:1784  stakes[msg.sender].rewardDebt = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"TolcoinStakingContract.sol\":1795:1831  tolcoin.transfer(msg.sender, reward) */\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2558:2609   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2625:2643   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2618:2652   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TolcoinStakingContract.sol\":1795:1802  tolcoin */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n        /* \"TolcoinStakingContract.sol\":1795:1811  tolcoin.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2531:2549   */\n      0x44\n      add\n        /* \"TolcoinStakingContract.sol\":1795:1831  tolcoin.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_101:\n      pop\n        /* \"TolcoinStakingContract.sol\":1849:1882  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":1182:1207   */\n      dup2\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1863:1873  msg.sender */\n      caller\n      swap1\n        /* \"TolcoinStakingContract.sol\":1849:1882  RewardClaimed(msg.sender, reward) */\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n      swap1\n        /* \"#utility.yul\":1170:1172   */\n      0x20\n        /* \"#utility.yul\":1155:1173   */\n      add\n        /* \"TolcoinStakingContract.sol\":1849:1882  RewardClaimed(msg.sender, reward) */\n      tag_69\n        /* \"#utility.yul\":1036:1213   */\n      jump\n        /* \"TolcoinStakingContract.sol\":2436:2598  function emergencyWithdraw() external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"TolcoinStakingContract.sol\":2513:2545  tolcoin.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":2539:2543  this */\n      address\n        /* \"TolcoinStakingContract.sol\":2513:2545  tolcoin.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:840   */\n      mstore\n        /* \"TolcoinStakingContract.sol\":2495:2510  uint256 balance */\n      0x00\n      swap1\n        /* \"TolcoinStakingContract.sol\":2513:2520  tolcoin */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TolcoinStakingContract.sol\":2513:2530  tolcoin.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":762:780   */\n      0x24\n      add\n        /* \"TolcoinStakingContract.sol\":2513:2545  tolcoin.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"TolcoinStakingContract.sol\":2495:2545  uint256 balance = tolcoin.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"TolcoinStakingContract.sol\":2556:2563  tolcoin */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TolcoinStakingContract.sol\":2556:2572  tolcoin.transfer */\n      and\n      0xa9059cbb\n        /* \"TolcoinStakingContract.sol\":2573:2580  owner() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"TolcoinStakingContract.sol\":2573:2580  owner() */\n    tag_111:\n        /* \"TolcoinStakingContract.sol\":2556:2590  tolcoin.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2576:2608   */\n      swap1\n      swap2\n      and\n        /* \"TolcoinStakingContract.sol\":2556:2590  tolcoin.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2558:2609   */\n      mstore\n        /* \"#utility.yul\":2625:2643   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2618:2652   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2531:2549   */\n      0x44\n      add\n        /* \"TolcoinStakingContract.sol\":2556:2590  tolcoin.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_115:\n      pop\n        /* \"TolcoinStakingContract.sol\":2484:2598  {... */\n      pop\n        /* \"TolcoinStakingContract.sol\":2436:2598  function emergencyWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:840   */\n      mstore\n        /* \"#utility.yul\":762:780   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_54\n        /* \"#utility.yul\":629:846   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TolcoinStakingContract.sol\":1898:2313  function _updateReward(address account) internal {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TolcoinStakingContract.sol\":1988:2003  stakes[account] */\n      dup2\n      and\n        /* \"TolcoinStakingContract.sol\":1958:1985  StakeInfo storage stakeInfo */\n      0x00\n        /* \"TolcoinStakingContract.sol\":1988:2003  stakes[account] */\n      swap1\n      dup2\n      mstore\n        /* \"TolcoinStakingContract.sol\":1988:1994  stakes */\n      0x01\n        /* \"TolcoinStakingContract.sol\":1988:2003  stakes[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TolcoinStakingContract.sol\":2018:2034  stakeInfo.amount */\n      dup1\n      sload\n        /* \"TolcoinStakingContract.sol\":2018:2038  stakeInfo.amount > 0 */\n      iszero\n        /* \"TolcoinStakingContract.sol\":2014:2258  if (stakeInfo.amount > 0) {... */\n      tag_123\n      jumpi\n        /* \"TolcoinStakingContract.sol\":2055:2071  uint256 duration */\n      0x00\n        /* \"TolcoinStakingContract.sol\":2092:2101  stakeInfo */\n      dup2\n        /* \"TolcoinStakingContract.sol\":2092:2111  stakeInfo.timestamp */\n      0x01\n      add\n      sload\n        /* \"TolcoinStakingContract.sol\":2074:2089  block.timestamp */\n      timestamp\n        /* \"TolcoinStakingContract.sol\":2074:2111  block.timestamp - stakeInfo.timestamp */\n      tag_124\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_124:\n        /* \"TolcoinStakingContract.sol\":2055:2111  uint256 duration = block.timestamp - stakeInfo.timestamp */\n      swap1\n      pop\n        /* \"TolcoinStakingContract.sol\":2126:2140  uint256 reward */\n      0x00\n        /* \"TolcoinStakingContract.sol\":2197:2201  1e18 */\n      0x0de0b6b3a7640000\n        /* \"TolcoinStakingContract.sol\":2174:2193  rewardRatePerSecond */\n      sload(0x02)\n        /* \"TolcoinStakingContract.sol\":2163:2171  duration */\n      dup4\n        /* \"TolcoinStakingContract.sol\":2144:2153  stakeInfo */\n      dup6\n        /* \"TolcoinStakingContract.sol\":2144:2160  stakeInfo.amount */\n      0x00\n      add\n      sload\n        /* \"TolcoinStakingContract.sol\":2144:2171  stakeInfo.amount * duration */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"TolcoinStakingContract.sol\":2144:2193  stakeInfo.amount * duration * rewardRatePerSecond */\n      tag_127\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_127:\n        /* \"TolcoinStakingContract.sol\":2143:2201  (stakeInfo.amount * duration * rewardRatePerSecond) / 1e18 */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"TolcoinStakingContract.sol\":2126:2201  uint256 reward = (stakeInfo.amount * duration * rewardRatePerSecond) / 1e18 */\n      swap1\n      pop\n        /* \"TolcoinStakingContract.sol\":2240:2246  reward */\n      dup1\n        /* \"TolcoinStakingContract.sol\":2216:2225  stakeInfo */\n      dup4\n        /* \"TolcoinStakingContract.sol\":2216:2236  stakeInfo.rewardDebt */\n      0x02\n      add\n      0x00\n        /* \"TolcoinStakingContract.sol\":2216:2246  stakeInfo.rewardDebt += reward */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_130:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"TolcoinStakingContract.sol\":2014:2258  if (stakeInfo.amount > 0) {... */\n    tag_123:\n        /* \"TolcoinStakingContract.sol\":2290:2305  block.timestamp */\n      timestamp\n        /* \"TolcoinStakingContract.sol\":2268:2287  stakeInfo.timestamp */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"TolcoinStakingContract.sol\":2268:2305  stakeInfo.timestamp = block.timestamp */\n      sstore\n      pop\n        /* \"TolcoinStakingContract.sol\":1898:2313  function _updateReward(address account) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:840   */\n      mstore\n        /* \"#utility.yul\":762:780   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_54\n        /* \"#utility.yul\":629:846   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_17:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_143:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_144:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":851:1031   */\n    tag_27:\n        /* \"#utility.yul\":910:916   */\n      0x00\n        /* \"#utility.yul\":963:965   */\n      0x20\n        /* \"#utility.yul\":951:960   */\n      dup3\n        /* \"#utility.yul\":942:949   */\n      dup5\n        /* \"#utility.yul\":938:961   */\n      sub\n        /* \"#utility.yul\":934:966   */\n      slt\n        /* \"#utility.yul\":931:983   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":979:980   */\n      0x00\n        /* \"#utility.yul\":976:977   */\n      dup1\n        /* \"#utility.yul\":969:981   */\n      revert\n        /* \"#utility.yul\":931:983   */\n    tag_148:\n      pop\n        /* \"#utility.yul\":1002:1025   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":851:1031   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2119:2246   */\n    tag_140:\n        /* \"#utility.yul\":2180:2190   */\n      0x4e487b71\n        /* \"#utility.yul\":2175:2178   */\n      0xe0\n        /* \"#utility.yul\":2171:2191   */\n      shl\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2161:2192   */\n      mstore\n        /* \"#utility.yul\":2211:2215   */\n      0x11\n        /* \"#utility.yul\":2208:2209   */\n      0x04\n        /* \"#utility.yul\":2201:2216   */\n      mstore\n        /* \"#utility.yul\":2235:2239   */\n      0x24\n        /* \"#utility.yul\":2232:2233   */\n      0x00\n        /* \"#utility.yul\":2225:2240   */\n      revert\n        /* \"#utility.yul\":2251:2379   */\n    tag_62:\n        /* \"#utility.yul\":2318:2327   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2339:2350   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2336:2373   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2353:2371   */\n      tag_156\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2251:2379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2940   */\n    tag_68:\n        /* \"#utility.yul\":2730:2736   */\n      0x00\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"#utility.yul\":2771:2780   */\n      dup3\n        /* \"#utility.yul\":2762:2769   */\n      dup5\n        /* \"#utility.yul\":2758:2781   */\n      sub\n        /* \"#utility.yul\":2754:2786   */\n      slt\n        /* \"#utility.yul\":2751:2803   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2796:2797   */\n      dup1\n        /* \"#utility.yul\":2789:2801   */\n      revert\n        /* \"#utility.yul\":2751:2803   */\n    tag_159:\n        /* \"#utility.yul\":2831:2840   */\n      dup2\n        /* \"#utility.yul\":2825:2841   */\n      mload\n        /* \"#utility.yul\":2884:2889   */\n      dup1\n        /* \"#utility.yul\":2877:2890   */\n      iszero\n        /* \"#utility.yul\":2870:2891   */\n      iszero\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2860:2892   */\n      eq\n        /* \"#utility.yul\":2850:2910   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2906:2907   */\n      0x00\n        /* \"#utility.yul\":2903:2904   */\n      dup1\n        /* \"#utility.yul\":2896:2908   */\n      revert\n        /* \"#utility.yul\":3668:3793   */\n    tag_91:\n        /* \"#utility.yul\":3733:3742   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3754:3764   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3751:3787   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3767:3785   */\n      tag_156\n      tag_140\n      jump\t// in\n        /* \"#utility.yul\":4135:4319   */\n    tag_110:\n        /* \"#utility.yul\":4205:4211   */\n      0x00\n        /* \"#utility.yul\":4258:4260   */\n      0x20\n        /* \"#utility.yul\":4246:4255   */\n      dup3\n        /* \"#utility.yul\":4237:4244   */\n      dup5\n        /* \"#utility.yul\":4233:4256   */\n      sub\n        /* \"#utility.yul\":4229:4261   */\n      slt\n        /* \"#utility.yul\":4226:4278   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":4274:4275   */\n      0x00\n        /* \"#utility.yul\":4271:4272   */\n      dup1\n        /* \"#utility.yul\":4264:4276   */\n      revert\n        /* \"#utility.yul\":4226:4278   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":4297:4313   */\n      mload\n      swap2\n        /* \"#utility.yul\":4135:4319   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4324:4492   */\n    tag_126:\n        /* \"#utility.yul\":4397:4406   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4428:4437   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4445:4460   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4439:4461   */\n      dup5\n      eq\n        /* \"#utility.yul\":4425:4462   */\n      or\n        /* \"#utility.yul\":4415:4486   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4466:4484   */\n      tag_156\n      tag_140\n      jump\t// in\n        /* \"#utility.yul\":4497:4714   */\n    tag_129:\n        /* \"#utility.yul\":4537:4538   */\n      0x00\n        /* \"#utility.yul\":4563:4564   */\n      dup3\n        /* \"#utility.yul\":4553:4685   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":4607:4617   */\n      0x4e487b71\n        /* \"#utility.yul\":4602:4605   */\n      0xe0\n        /* \"#utility.yul\":4598:4618   */\n      shl\n        /* \"#utility.yul\":4595:4596   */\n      0x00\n        /* \"#utility.yul\":4588:4619   */\n      mstore\n        /* \"#utility.yul\":4642:4646   */\n      0x12\n        /* \"#utility.yul\":4639:4640   */\n      0x04\n        /* \"#utility.yul\":4632:4647   */\n      mstore\n        /* \"#utility.yul\":4670:4674   */\n      0x24\n        /* \"#utility.yul\":4667:4668   */\n      0x00\n        /* \"#utility.yul\":4660:4675   */\n      revert\n        /* \"#utility.yul\":4553:4685   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":4699:4708   */\n      div\n      swap1\n        /* \"#utility.yul\":4497:4714   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be16ab7b79c93582a064747840f3e332605e7763d4ff863ebfae93f79363001764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_310": {
									"entryPoint": null,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 85,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:219:4",
										"nodeType": "YulBlock",
										"src": "0:219:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:4",
													"nodeType": "YulBlock",
													"src": "115:102:4",
													"statements": [
														{
															"nativeSrc": "125:26:4",
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nativeSrc": "133:18:4",
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:4",
																								"nodeType": "YulLiteral",
																								"src": "198:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:4",
																								"nodeType": "YulLiteral",
																								"src": "203:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:4"
																						},
																						"nativeSrc": "194:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:4",
																						"nodeType": "YulLiteral",
																						"src": "207:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:4"
																				},
																				"nativeSrc": "190:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nativeSrc": "178:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nativeSrc": "160:51:4",
																"nodeType": "YulFunctionCall",
																"src": "160:51:4"
															},
															"nativeSrc": "160:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:4",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:4",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:4",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:203:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052641af2af8c84600255348015610018575f80fd5b5073cd1710e8a72c95bdd127cc71e1227d8c98e05aec61003781610055565b5073ebd92716d4aac1abe6a73a42b5a83a42c145447d6080526100a4565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60805161098e6100de5f395f818160fc015281816102a6015281816103dd01528181610547015281816106030152610678015261098e5ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80638da5cb5b1161006e5780638da5cb5b1461016a5780639e447fc61461017a578063a694fc3a1461018d578063b88a802f146101a0578063db2e21bc146101a8578063f2fde38b146101b0575f80fd5b806316934fc4146100aa5780631859ea47146100f75780632e1a7d4d146101365780635d773b2c1461014b578063715018a614610162575b5f80fd5b6100d76100b8366004610868565b600160208190525f918252604090912080549181015460029091015483565b604080519384526020840192909252908201526060015b60405180910390f35b61011e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ee565b610149610144366004610895565b6101c3565b005b61015460025481565b6040519081526020016100ee565b610149610352565b5f546001600160a01b031661011e565b610149610188366004610895565b610365565b61014961019b366004610895565b610372565b6101496104b9565b6101496105e4565b6101496101be366004610868565b610728565b5f811161020b5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064015b60405180910390fd5b335f9081526001602052604090205481111561025e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b6044820152606401610202565b61026733610765565b335f90815260016020526040812080548392906102859084906108c0565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156102f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031891906108d9565b5060405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250565b61035a6107ed565b6103635f610819565b565b61036d6107ed565b600255565b5f81116103b25760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610202565b6103bb33610765565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af115801561042b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044f91906108d9565b50335f908152600160205260408120805483929061046e9084906108f8565b9091555050335f8181526001602081905260409182902042910155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906103479084815260200190565b6104c233610765565b335f908152600160205260409020600201548061050d5760405162461bcd60e51b8152602060048201526009602482015268139bc81c995dd85c9960ba1b6044820152606401610202565b335f81815260016020526040808220600201919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af115801561058d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b191906108d9565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190602001610347565b6105ec6107ed565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610650573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610674919061090b565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6106b65f546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af1158015610700573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072491906108d9565b5050565b6107306107ed565b6001600160a01b03811661075957604051631e4fbdf760e01b81525f6004820152602401610202565b61076281610819565b50565b6001600160a01b0381165f9081526001602052604090208054156107e3575f81600101544261079491906108c0565b90505f670de0b6b3a764000060025483855f01546107b29190610922565b6107bc9190610922565b6107c69190610939565b905080836002015f8282546107db91906108f8565b909155505050505b4260019091015550565b5f546001600160a01b031633146103635760405163118cdaa760e01b8152336004820152602401610202565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610878575f80fd5b81356001600160a01b038116811461088e575f80fd5b9392505050565b5f602082840312156108a5575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156108d3576108d36108ac565b92915050565b5f602082840312156108e9575f80fd5b8151801515811461088e575f80fd5b808201808211156108d3576108d36108ac565b5f6020828403121561091b575f80fd5b5051919050565b80820281158282048414176108d3576108d36108ac565b5f8261095357634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220be16ab7b79c93582a064747840f3e332605e7763d4ff863ebfae93f79363001764736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH5 0x1AF2AF8C84 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH20 0xCD1710E8A72C95BDD127CC71E1227D8C98E05AEC PUSH2 0x37 DUP2 PUSH2 0x55 JUMP JUMPDEST POP PUSH20 0xEBD92716D4AAC1ABE6A73A42B5A83A42C145447D PUSH1 0x80 MSTORE PUSH2 0xA4 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x98E PUSH2 0xDE PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xFC ADD MSTORE DUP2 DUP2 PUSH2 0x2A6 ADD MSTORE DUP2 DUP2 PUSH2 0x3DD ADD MSTORE DUP2 DUP2 PUSH2 0x547 ADD MSTORE DUP2 DUP2 PUSH2 0x603 ADD MSTORE PUSH2 0x678 ADD MSTORE PUSH2 0x98E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x1859EA47 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x5D773B2C EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x154 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x149 PUSH2 0x352 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11E JUMP JUMPDEST PUSH2 0x149 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E74207374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x267 CALLER PUSH2 0x765 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x285 SWAP1 DUP5 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x35A PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x363 PUSH0 PUSH2 0x819 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x36D PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x3BB CALLER PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x46E SWAP1 DUP5 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x347 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4C2 CALLER PUSH2 0x765 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x139BC81C995DD85C99 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP1 PUSH1 0x20 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x5EC PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x6B6 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x730 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x762 DUP2 PUSH2 0x819 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x7E3 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 DUP6 PUSH0 ADD SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x88E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x8AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x88E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x8AC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x8AC JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x953 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE AND 0xAB PUSH28 0x79C93582A064747840F3E332605E7763D4FF863EBFAE93F793630017 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "175:2426:3:-:0;;;459:12;422:49;;695:145;;;;;;;;;-1:-1:-1;717:42:3;1373:32:0;1392:12;1373:18;:32::i;:::-;-1:-1:-1;789:42:3::1;772:60;::::0;175:2426;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:4:-;175:2426:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2029,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2073,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateReward_512": {
									"entryPoint": 1893,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_460": {
									"entryPoint": 1209,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdraw_548": {
									"entryPoint": 1508,
									"id": 548,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 850,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRatePerSecond_279": {
									"entryPoint": null,
									"id": 279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardRate_524": {
									"entryPoint": 869,
									"id": 524,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_363": {
									"entryPoint": 882,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tolcoin_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1832,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_414": {
									"entryPoint": 451,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4716:4",
										"nodeType": "YulBlock",
										"src": "0:4716:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:4",
													"nodeType": "YulBlock",
													"src": "84:216:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:4",
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:4",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:4",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nativeSrc": "132:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nativeSrc": "132:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nativeSrc": "101:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:4",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nativeSrc": "97:32:4",
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nativeSrc": "94:52:4",
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nativeSrc": "155:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:4"
																},
																"nativeSrc": "168:23:4",
																"nodeType": "YulFunctionCall",
																"src": "168:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:4",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:4",
																"nodeType": "YulBlock",
																"src": "254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:4",
																					"nodeType": "YulLiteral",
																					"src": "263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:4",
																					"nodeType": "YulLiteral",
																					"src": "266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			"nativeSrc": "256:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:4"
																		},
																		"nativeSrc": "256:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:4",
																										"nodeType": "YulLiteral",
																										"src": "239:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:4",
																										"nodeType": "YulLiteral",
																										"src": "244:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:4"
																								},
																								"nativeSrc": "235:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:4",
																								"nodeType": "YulLiteral",
																								"src": "248:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:4"
																						},
																						"nativeSrc": "231:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:4"
																				},
																				"nativeSrc": "220:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:4"
																		},
																		"nativeSrc": "210:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:4"
																},
																"nativeSrc": "203:50:4",
																"nodeType": "YulFunctionCall",
																"src": "203:50:4"
															},
															"nativeSrc": "200:70:4",
															"nodeType": "YulIf",
															"src": "200:70:4"
														},
														{
															"nativeSrc": "279:15:4",
															"nodeType": "YulAssignment",
															"src": "279:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:4",
																"nodeType": "YulIdentifier",
																"src": "289:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:4",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:4",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:4",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:286:4"
											},
											{
												"body": {
													"nativeSrc": "462:162:4",
													"nodeType": "YulBlock",
													"src": "462:162:4",
													"statements": [
														{
															"nativeSrc": "472:26:4",
															"nodeType": "YulAssignment",
															"src": "472:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "484:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "484:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "495:2:4",
																		"nodeType": "YulLiteral",
																		"src": "495:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "480:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "480:3:4"
																},
																"nativeSrc": "480:18:4",
																"nodeType": "YulFunctionCall",
																"src": "480:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "472:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "472:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "514:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "525:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "525:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "507:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "507:6:4"
																},
																"nativeSrc": "507:25:4",
																"nodeType": "YulFunctionCall",
																"src": "507:25:4"
															},
															"nativeSrc": "507:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "507:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "552:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "552:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "563:2:4",
																				"nodeType": "YulLiteral",
																				"src": "563:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "548:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:4"
																		},
																		"nativeSrc": "548:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "548:18:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "568:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "568:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "541:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:4"
																},
																"nativeSrc": "541:34:4",
																"nodeType": "YulFunctionCall",
																"src": "541:34:4"
															},
															"nativeSrc": "541:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "541:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "595:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "595:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "606:2:4",
																				"nodeType": "YulLiteral",
																				"src": "606:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "591:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "591:3:4"
																		},
																		"nativeSrc": "591:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "591:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "611:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "611:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "584:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:4"
																},
																"nativeSrc": "584:34:4",
																"nodeType": "YulFunctionCall",
																"src": "584:34:4"
															},
															"nativeSrc": "584:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "584:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "305:319:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "415:9:4",
														"nodeType": "YulTypedName",
														"src": "415:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "426:6:4",
														"nodeType": "YulTypedName",
														"src": "426:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "434:6:4",
														"nodeType": "YulTypedName",
														"src": "434:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "442:6:4",
														"nodeType": "YulTypedName",
														"src": "442:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "453:4:4",
														"nodeType": "YulTypedName",
														"src": "453:4:4",
														"type": ""
													}
												],
												"src": "305:319:4"
											},
											{
												"body": {
													"nativeSrc": "744:102:4",
													"nodeType": "YulBlock",
													"src": "744:102:4",
													"statements": [
														{
															"nativeSrc": "754:26:4",
															"nodeType": "YulAssignment",
															"src": "754:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "766:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "766:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "777:2:4",
																		"nodeType": "YulLiteral",
																		"src": "777:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "762:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:4"
																},
																"nativeSrc": "762:18:4",
																"nodeType": "YulFunctionCall",
																"src": "762:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "754:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "754:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "796:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "811:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "827:3:4",
																								"nodeType": "YulLiteral",
																								"src": "827:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "832:1:4",
																								"nodeType": "YulLiteral",
																								"src": "832:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "823:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "823:3:4"
																						},
																						"nativeSrc": "823:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "823:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "836:1:4",
																						"nodeType": "YulLiteral",
																						"src": "836:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "819:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "819:3:4"
																				},
																				"nativeSrc": "819:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "819:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "807:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:4"
																		},
																		"nativeSrc": "807:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "807:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "789:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:4"
																},
																"nativeSrc": "789:51:4",
																"nodeType": "YulFunctionCall",
																"src": "789:51:4"
															},
															"nativeSrc": "789:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "789:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "629:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "713:9:4",
														"nodeType": "YulTypedName",
														"src": "713:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "724:6:4",
														"nodeType": "YulTypedName",
														"src": "724:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "735:4:4",
														"nodeType": "YulTypedName",
														"src": "735:4:4",
														"type": ""
													}
												],
												"src": "629:217:4"
											},
											{
												"body": {
													"nativeSrc": "921:110:4",
													"nodeType": "YulBlock",
													"src": "921:110:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "967:16:4",
																"nodeType": "YulBlock",
																"src": "967:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "976:1:4",
																					"nodeType": "YulLiteral",
																					"src": "976:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "979:1:4",
																					"nodeType": "YulLiteral",
																					"src": "979:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "969:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "969:6:4"
																			},
																			"nativeSrc": "969:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "969:12:4"
																		},
																		"nativeSrc": "969:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "969:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "942:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "942:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "951:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "951:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "938:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "938:3:4"
																		},
																		"nativeSrc": "938:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "938:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "963:2:4",
																		"nodeType": "YulLiteral",
																		"src": "963:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "934:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "934:3:4"
																},
																"nativeSrc": "934:32:4",
																"nodeType": "YulFunctionCall",
																"src": "934:32:4"
															},
															"nativeSrc": "931:52:4",
															"nodeType": "YulIf",
															"src": "931:52:4"
														},
														{
															"nativeSrc": "992:33:4",
															"nodeType": "YulAssignment",
															"src": "992:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1015:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1015:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1002:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1002:12:4"
																},
																"nativeSrc": "1002:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1002:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "992:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "992:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "851:180:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "887:9:4",
														"nodeType": "YulTypedName",
														"src": "887:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "898:7:4",
														"nodeType": "YulTypedName",
														"src": "898:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "910:6:4",
														"nodeType": "YulTypedName",
														"src": "910:6:4",
														"type": ""
													}
												],
												"src": "851:180:4"
											},
											{
												"body": {
													"nativeSrc": "1137:76:4",
													"nodeType": "YulBlock",
													"src": "1137:76:4",
													"statements": [
														{
															"nativeSrc": "1147:26:4",
															"nodeType": "YulAssignment",
															"src": "1147:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1159:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1159:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1170:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1155:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:4"
																},
																"nativeSrc": "1155:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1155:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1147:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1147:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1189:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1200:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1200:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1182:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:4"
																},
																"nativeSrc": "1182:25:4",
																"nodeType": "YulFunctionCall",
																"src": "1182:25:4"
															},
															"nativeSrc": "1182:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "1182:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1036:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1106:9:4",
														"nodeType": "YulTypedName",
														"src": "1106:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1117:6:4",
														"nodeType": "YulTypedName",
														"src": "1117:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1128:4:4",
														"nodeType": "YulTypedName",
														"src": "1128:4:4",
														"type": ""
													}
												],
												"src": "1036:177:4"
											},
											{
												"body": {
													"nativeSrc": "1319:102:4",
													"nodeType": "YulBlock",
													"src": "1319:102:4",
													"statements": [
														{
															"nativeSrc": "1329:26:4",
															"nodeType": "YulAssignment",
															"src": "1329:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1341:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1341:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1352:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1337:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1337:3:4"
																},
																"nativeSrc": "1337:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1337:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1329:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1329:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1371:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1371:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1386:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1402:3:4",
																								"nodeType": "YulLiteral",
																								"src": "1402:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1407:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1407:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1398:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1398:3:4"
																						},
																						"nativeSrc": "1398:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1398:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1411:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1411:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1394:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1394:3:4"
																				},
																				"nativeSrc": "1394:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1394:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1382:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:4"
																		},
																		"nativeSrc": "1382:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1382:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1364:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:4"
																},
																"nativeSrc": "1364:51:4",
																"nodeType": "YulFunctionCall",
																"src": "1364:51:4"
															},
															"nativeSrc": "1364:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "1364:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1218:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:4",
														"nodeType": "YulTypedName",
														"src": "1288:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1299:6:4",
														"nodeType": "YulTypedName",
														"src": "1299:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1310:4:4",
														"nodeType": "YulTypedName",
														"src": "1310:4:4",
														"type": ""
													}
												],
												"src": "1218:203:4"
											},
											{
												"body": {
													"nativeSrc": "1600:167:4",
													"nodeType": "YulBlock",
													"src": "1600:167:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1617:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1617:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1628:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1628:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1610:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:4"
																},
																"nativeSrc": "1610:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1610:21:4"
															},
															"nativeSrc": "1610:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1610:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1651:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1662:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1662:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1647:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:4"
																		},
																		"nativeSrc": "1647:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1647:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1640:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:4"
																},
																"nativeSrc": "1640:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1640:30:4"
															},
															"nativeSrc": "1640:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1640:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1690:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1690:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1701:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1701:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1686:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1686:3:4"
																		},
																		"nativeSrc": "1686:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1686:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nativeSrc": "1706:19:4",
																		"nodeType": "YulLiteral",
																		"src": "1706:19:4",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:4"
																},
																"nativeSrc": "1679:47:4",
																"nodeType": "YulFunctionCall",
																"src": "1679:47:4"
															},
															"nativeSrc": "1679:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "1679:47:4"
														},
														{
															"nativeSrc": "1735:26:4",
															"nodeType": "YulAssignment",
															"src": "1735:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1747:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1747:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1758:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1758:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1743:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1743:3:4"
																},
																"nativeSrc": "1743:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1743:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1735:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1735:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1426:341:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1577:9:4",
														"nodeType": "YulTypedName",
														"src": "1577:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1591:4:4",
														"nodeType": "YulTypedName",
														"src": "1591:4:4",
														"type": ""
													}
												],
												"src": "1426:341:4"
											},
											{
												"body": {
													"nativeSrc": "1946:168:4",
													"nodeType": "YulBlock",
													"src": "1946:168:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1963:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1963:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1956:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:4"
																},
																"nativeSrc": "1956:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1956:21:4"
															},
															"nativeSrc": "1956:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1956:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2008:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2008:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1993:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:4"
																		},
																		"nativeSrc": "1993:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1993:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:4",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1986:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:4"
																},
																"nativeSrc": "1986:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1986:30:4"
															},
															"nativeSrc": "1986:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1986:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2047:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2047:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2032:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:4"
																		},
																		"nativeSrc": "2032:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2032:18:4"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65",
																		"kind": "string",
																		"nativeSrc": "2052:20:4",
																		"nodeType": "YulLiteral",
																		"src": "2052:20:4",
																		"type": "",
																		"value": "Insufficient stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2025:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:4"
																},
																"nativeSrc": "2025:48:4",
																"nodeType": "YulFunctionCall",
																"src": "2025:48:4"
															},
															"nativeSrc": "2025:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "2025:48:4"
														},
														{
															"nativeSrc": "2082:26:4",
															"nodeType": "YulAssignment",
															"src": "2082:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2094:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2094:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2105:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2090:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2090:3:4"
																},
																"nativeSrc": "2090:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2090:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2082:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2082:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1772:342:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1923:9:4",
														"nodeType": "YulTypedName",
														"src": "1923:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1937:4:4",
														"nodeType": "YulTypedName",
														"src": "1937:4:4",
														"type": ""
													}
												],
												"src": "1772:342:4"
											},
											{
												"body": {
													"nativeSrc": "2151:95:4",
													"nodeType": "YulBlock",
													"src": "2151:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2168:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2168:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2175:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2175:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2180:10:4",
																				"nodeType": "YulLiteral",
																				"src": "2180:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2171:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:4"
																		},
																		"nativeSrc": "2171:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2161:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:4"
																},
																"nativeSrc": "2161:31:4",
																"nodeType": "YulFunctionCall",
																"src": "2161:31:4"
															},
															"nativeSrc": "2161:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "2161:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2208:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2211:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2211:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2201:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:4"
																},
																"nativeSrc": "2201:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2201:15:4"
															},
															"nativeSrc": "2201:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2201:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2232:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2232:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2235:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2235:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2225:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:4"
																},
																"nativeSrc": "2225:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2225:15:4"
															},
															"nativeSrc": "2225:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2225:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2119:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2119:127:4"
											},
											{
												"body": {
													"nativeSrc": "2300:79:4",
													"nodeType": "YulBlock",
													"src": "2300:79:4",
													"statements": [
														{
															"nativeSrc": "2310:17:4",
															"nodeType": "YulAssignment",
															"src": "2310:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2322:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2322:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2325:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2325:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2318:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2318:3:4"
																},
																"nativeSrc": "2318:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2318:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2310:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2310:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2351:22:4",
																"nodeType": "YulBlock",
																"src": "2351:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2353:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2353:16:4"
																			},
																			"nativeSrc": "2353:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2353:18:4"
																		},
																		"nativeSrc": "2353:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2353:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2342:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2342:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2348:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2348:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2339:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2339:2:4"
																},
																"nativeSrc": "2339:11:4",
																"nodeType": "YulFunctionCall",
																"src": "2339:11:4"
															},
															"nativeSrc": "2336:37:4",
															"nodeType": "YulIf",
															"src": "2336:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2251:128:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2282:1:4",
														"nodeType": "YulTypedName",
														"src": "2282:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2285:1:4",
														"nodeType": "YulTypedName",
														"src": "2285:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2291:4:4",
														"nodeType": "YulTypedName",
														"src": "2291:4:4",
														"type": ""
													}
												],
												"src": "2251:128:4"
											},
											{
												"body": {
													"nativeSrc": "2513:145:4",
													"nodeType": "YulBlock",
													"src": "2513:145:4",
													"statements": [
														{
															"nativeSrc": "2523:26:4",
															"nodeType": "YulAssignment",
															"src": "2523:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2535:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2535:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2546:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2546:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2531:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:4"
																},
																"nativeSrc": "2531:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2531:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2523:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2523:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2565:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2565:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2580:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2596:3:4",
																								"nodeType": "YulLiteral",
																								"src": "2596:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2601:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2601:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2592:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2592:3:4"
																						},
																						"nativeSrc": "2592:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2592:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2605:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2605:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2588:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2588:3:4"
																				},
																				"nativeSrc": "2588:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2588:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2576:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:4"
																		},
																		"nativeSrc": "2576:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2558:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:4"
																},
																"nativeSrc": "2558:51:4",
																"nodeType": "YulFunctionCall",
																"src": "2558:51:4"
															},
															"nativeSrc": "2558:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "2558:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2629:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2629:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2640:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2640:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2625:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2625:3:4"
																		},
																		"nativeSrc": "2625:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2625:18:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2645:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2645:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2618:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2618:6:4"
																},
																"nativeSrc": "2618:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2618:34:4"
															},
															"nativeSrc": "2618:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "2618:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2384:274:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2474:9:4",
														"nodeType": "YulTypedName",
														"src": "2474:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2485:6:4",
														"nodeType": "YulTypedName",
														"src": "2485:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2493:6:4",
														"nodeType": "YulTypedName",
														"src": "2493:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2504:4:4",
														"nodeType": "YulTypedName",
														"src": "2504:4:4",
														"type": ""
													}
												],
												"src": "2384:274:4"
											},
											{
												"body": {
													"nativeSrc": "2741:199:4",
													"nodeType": "YulBlock",
													"src": "2741:199:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2787:16:4",
																"nodeType": "YulBlock",
																"src": "2787:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2796:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2799:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2799:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2789:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:4"
																			},
																			"nativeSrc": "2789:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2789:12:4"
																		},
																		"nativeSrc": "2789:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2789:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2762:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2762:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2771:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2771:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2758:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:4"
																		},
																		"nativeSrc": "2758:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2758:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2783:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2783:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2754:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2754:3:4"
																},
																"nativeSrc": "2754:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2754:32:4"
															},
															"nativeSrc": "2751:52:4",
															"nodeType": "YulIf",
															"src": "2751:52:4"
														},
														{
															"nativeSrc": "2812:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2812:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2831:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2831:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2825:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2825:5:4"
																},
																"nativeSrc": "2825:16:4",
																"nodeType": "YulFunctionCall",
																"src": "2825:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2816:5:4",
																	"nodeType": "YulTypedName",
																	"src": "2816:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2894:16:4",
																"nodeType": "YulBlock",
																"src": "2894:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2903:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2903:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2906:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2906:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2896:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2896:6:4"
																			},
																			"nativeSrc": "2896:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2896:12:4"
																		},
																		"nativeSrc": "2896:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2896:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2884:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "2884:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2877:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "2877:6:4"
																						},
																						"nativeSrc": "2877:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2877:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2870:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "2870:6:4"
																				},
																				"nativeSrc": "2870:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2870:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2860:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2860:2:4"
																		},
																		"nativeSrc": "2860:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2853:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2853:6:4"
																},
																"nativeSrc": "2853:40:4",
																"nodeType": "YulFunctionCall",
																"src": "2853:40:4"
															},
															"nativeSrc": "2850:60:4",
															"nodeType": "YulIf",
															"src": "2850:60:4"
														},
														{
															"nativeSrc": "2919:15:4",
															"nodeType": "YulAssignment",
															"src": "2919:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "2929:5:4",
																"nodeType": "YulIdentifier",
																"src": "2929:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2919:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2663:277:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2707:9:4",
														"nodeType": "YulTypedName",
														"src": "2707:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2718:7:4",
														"nodeType": "YulTypedName",
														"src": "2718:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2730:6:4",
														"nodeType": "YulTypedName",
														"src": "2730:6:4",
														"type": ""
													}
												],
												"src": "2663:277:4"
											},
											{
												"body": {
													"nativeSrc": "3119:164:4",
													"nodeType": "YulBlock",
													"src": "3119:164:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3136:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3136:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3147:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3147:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3129:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:4"
																},
																"nativeSrc": "3129:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3129:21:4"
															},
															"nativeSrc": "3129:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3129:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3170:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3170:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3181:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3181:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3166:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3166:3:4"
																		},
																		"nativeSrc": "3166:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3166:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3186:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:4",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3159:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3159:6:4"
																},
																"nativeSrc": "3159:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3159:30:4"
															},
															"nativeSrc": "3159:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3159:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3209:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3209:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3220:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3220:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3205:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:4"
																		},
																		"nativeSrc": "3205:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3205:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "3225:16:4",
																		"nodeType": "YulLiteral",
																		"src": "3225:16:4",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3198:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:4"
																},
																"nativeSrc": "3198:44:4",
																"nodeType": "YulFunctionCall",
																"src": "3198:44:4"
															},
															"nativeSrc": "3198:44:4",
															"nodeType": "YulExpressionStatement",
															"src": "3198:44:4"
														},
														{
															"nativeSrc": "3251:26:4",
															"nodeType": "YulAssignment",
															"src": "3251:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3263:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3263:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3274:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3259:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:4"
																},
																"nativeSrc": "3259:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3259:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3251:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3251:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2945:338:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3096:9:4",
														"nodeType": "YulTypedName",
														"src": "3096:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3110:4:4",
														"nodeType": "YulTypedName",
														"src": "3110:4:4",
														"type": ""
													}
												],
												"src": "2945:338:4"
											},
											{
												"body": {
													"nativeSrc": "3445:218:4",
													"nodeType": "YulBlock",
													"src": "3445:218:4",
													"statements": [
														{
															"nativeSrc": "3455:26:4",
															"nodeType": "YulAssignment",
															"src": "3455:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3467:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3478:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3478:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3463:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3463:3:4"
																},
																"nativeSrc": "3463:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3463:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3455:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3455:4:4"
																}
															]
														},
														{
															"nativeSrc": "3490:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3490:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3508:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3508:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3513:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3513:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3504:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:4"
																		},
																		"nativeSrc": "3504:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3504:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3517:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3517:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3500:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3500:3:4"
																},
																"nativeSrc": "3500:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3500:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3494:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3494:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3535:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3535:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3550:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3558:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "3558:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3546:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:4"
																		},
																		"nativeSrc": "3546:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3546:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3528:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:4"
																},
																"nativeSrc": "3528:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3528:34:4"
															},
															"nativeSrc": "3528:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3528:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3582:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3582:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3593:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3593:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3578:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3578:3:4"
																		},
																		"nativeSrc": "3578:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3578:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3602:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3602:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3610:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "3610:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3598:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3598:3:4"
																		},
																		"nativeSrc": "3598:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3571:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3571:6:4"
																},
																"nativeSrc": "3571:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3571:43:4"
															},
															"nativeSrc": "3571:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "3571:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3634:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3634:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3645:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3645:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3630:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:4"
																		},
																		"nativeSrc": "3630:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3630:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3650:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3650:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3623:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:4"
																},
																"nativeSrc": "3623:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3623:34:4"
															},
															"nativeSrc": "3623:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3623:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3288:375:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3398:9:4",
														"nodeType": "YulTypedName",
														"src": "3398:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3409:6:4",
														"nodeType": "YulTypedName",
														"src": "3409:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3417:6:4",
														"nodeType": "YulTypedName",
														"src": "3417:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3425:6:4",
														"nodeType": "YulTypedName",
														"src": "3425:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3436:4:4",
														"nodeType": "YulTypedName",
														"src": "3436:4:4",
														"type": ""
													}
												],
												"src": "3288:375:4"
											},
											{
												"body": {
													"nativeSrc": "3716:77:4",
													"nodeType": "YulBlock",
													"src": "3716:77:4",
													"statements": [
														{
															"nativeSrc": "3726:16:4",
															"nodeType": "YulAssignment",
															"src": "3726:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3737:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3737:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3740:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3740:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3733:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3733:3:4"
																},
																"nativeSrc": "3733:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3733:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3726:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3765:22:4",
																"nodeType": "YulBlock",
																"src": "3765:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3767:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3767:16:4"
																			},
																			"nativeSrc": "3767:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3767:18:4"
																		},
																		"nativeSrc": "3767:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3767:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3757:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3757:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3760:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3754:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3754:2:4"
																},
																"nativeSrc": "3754:10:4",
																"nodeType": "YulFunctionCall",
																"src": "3754:10:4"
															},
															"nativeSrc": "3751:36:4",
															"nodeType": "YulIf",
															"src": "3751:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3668:125:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3699:1:4",
														"nodeType": "YulTypedName",
														"src": "3699:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3702:1:4",
														"nodeType": "YulTypedName",
														"src": "3702:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3708:3:4",
														"nodeType": "YulTypedName",
														"src": "3708:3:4",
														"type": ""
													}
												],
												"src": "3668:125:4"
											},
											{
												"body": {
													"nativeSrc": "3972:158:4",
													"nodeType": "YulBlock",
													"src": "3972:158:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3989:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3989:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4000:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4000:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3982:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:4"
																},
																"nativeSrc": "3982:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3982:21:4"
															},
															"nativeSrc": "3982:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3982:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4023:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4034:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4034:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4019:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:4"
																		},
																		"nativeSrc": "4019:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4019:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4039:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4039:1:4",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4012:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:4"
																},
																"nativeSrc": "4012:29:4",
																"nodeType": "YulFunctionCall",
																"src": "4012:29:4"
															},
															"nativeSrc": "4012:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "4012:29:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4061:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4061:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4072:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4072:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4057:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4057:3:4"
																		},
																		"nativeSrc": "4057:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4057:18:4"
																	},
																	{
																		"hexValue": "4e6f20726577617264",
																		"kind": "string",
																		"nativeSrc": "4077:11:4",
																		"nodeType": "YulLiteral",
																		"src": "4077:11:4",
																		"type": "",
																		"value": "No reward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4050:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:4"
																},
																"nativeSrc": "4050:39:4",
																"nodeType": "YulFunctionCall",
																"src": "4050:39:4"
															},
															"nativeSrc": "4050:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "4050:39:4"
														},
														{
															"nativeSrc": "4098:26:4",
															"nodeType": "YulAssignment",
															"src": "4098:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4110:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4110:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4121:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4121:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4106:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:4"
																},
																"nativeSrc": "4106:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4106:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4098:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4098:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3798:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3949:9:4",
														"nodeType": "YulTypedName",
														"src": "3949:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3963:4:4",
														"nodeType": "YulTypedName",
														"src": "3963:4:4",
														"type": ""
													}
												],
												"src": "3798:332:4"
											},
											{
												"body": {
													"nativeSrc": "4216:103:4",
													"nodeType": "YulBlock",
													"src": "4216:103:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4262:16:4",
																"nodeType": "YulBlock",
																"src": "4262:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4271:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4271:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4274:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4274:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4264:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4264:6:4"
																			},
																			"nativeSrc": "4264:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4264:12:4"
																		},
																		"nativeSrc": "4264:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4264:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4237:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4237:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4246:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4246:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4233:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:4"
																		},
																		"nativeSrc": "4233:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4233:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4258:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4258:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4229:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4229:3:4"
																},
																"nativeSrc": "4229:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4229:32:4"
															},
															"nativeSrc": "4226:52:4",
															"nodeType": "YulIf",
															"src": "4226:52:4"
														},
														{
															"nativeSrc": "4287:26:4",
															"nodeType": "YulAssignment",
															"src": "4287:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4303:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4303:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4297:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4297:5:4"
																},
																"nativeSrc": "4297:16:4",
																"nodeType": "YulFunctionCall",
																"src": "4297:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4287:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4135:184:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4182:9:4",
														"nodeType": "YulTypedName",
														"src": "4182:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4193:7:4",
														"nodeType": "YulTypedName",
														"src": "4193:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4205:6:4",
														"nodeType": "YulTypedName",
														"src": "4205:6:4",
														"type": ""
													}
												],
												"src": "4135:184:4"
											},
											{
												"body": {
													"nativeSrc": "4376:116:4",
													"nodeType": "YulBlock",
													"src": "4376:116:4",
													"statements": [
														{
															"nativeSrc": "4386:20:4",
															"nodeType": "YulAssignment",
															"src": "4386:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4401:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4401:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4404:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4404:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4397:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4397:3:4"
																},
																"nativeSrc": "4397:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4397:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4386:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4386:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4464:22:4",
																"nodeType": "YulBlock",
																"src": "4464:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4466:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4466:16:4"
																			},
																			"nativeSrc": "4466:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4466:18:4"
																		},
																		"nativeSrc": "4466:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4435:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4435:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4428:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "4428:6:4"
																				},
																				"nativeSrc": "4428:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4428:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4442:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4442:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4449:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "4449:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4458:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "4458:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4445:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4445:3:4"
																						},
																						"nativeSrc": "4445:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4445:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4439:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4439:2:4"
																				},
																				"nativeSrc": "4439:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4439:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4425:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4425:2:4"
																		},
																		"nativeSrc": "4425:37:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4425:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4418:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:4"
																},
																"nativeSrc": "4418:45:4",
																"nodeType": "YulFunctionCall",
																"src": "4418:45:4"
															},
															"nativeSrc": "4415:71:4",
															"nodeType": "YulIf",
															"src": "4415:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4324:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4355:1:4",
														"nodeType": "YulTypedName",
														"src": "4355:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4358:1:4",
														"nodeType": "YulTypedName",
														"src": "4358:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4364:7:4",
														"nodeType": "YulTypedName",
														"src": "4364:7:4",
														"type": ""
													}
												],
												"src": "4324:168:4"
											},
											{
												"body": {
													"nativeSrc": "4543:171:4",
													"nodeType": "YulBlock",
													"src": "4543:171:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4574:111:4",
																"nodeType": "YulBlock",
																"src": "4574:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4595:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4595:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4602:3:4",
																							"nodeType": "YulLiteral",
																							"src": "4602:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4607:10:4",
																							"nodeType": "YulLiteral",
																							"src": "4607:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4598:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "4598:3:4"
																					},
																					"nativeSrc": "4598:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4598:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4588:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4588:6:4"
																			},
																			"nativeSrc": "4588:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4588:31:4"
																		},
																		"nativeSrc": "4588:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4588:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4639:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4642:4:4",
																					"nodeType": "YulLiteral",
																					"src": "4642:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4632:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4632:6:4"
																			},
																			"nativeSrc": "4632:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4632:15:4"
																		},
																		"nativeSrc": "4632:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4632:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4667:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4667:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4670:4:4",
																					"nodeType": "YulLiteral",
																					"src": "4670:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4660:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4660:6:4"
																			},
																			"nativeSrc": "4660:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4660:15:4"
																		},
																		"nativeSrc": "4660:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4660:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4563:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4563:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4556:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:4"
																},
																"nativeSrc": "4556:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4556:9:4"
															},
															"nativeSrc": "4553:132:4",
															"nodeType": "YulIf",
															"src": "4553:132:4"
														},
														{
															"nativeSrc": "4694:14:4",
															"nodeType": "YulAssignment",
															"src": "4694:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4703:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4703:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4706:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4706:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4699:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4699:3:4"
																},
																"nativeSrc": "4699:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4699:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4694:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4694:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4497:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4528:1:4",
														"nodeType": "YulTypedName",
														"src": "4528:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4531:1:4",
														"nodeType": "YulTypedName",
														"src": "4531:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4537:1:4",
														"nodeType": "YulTypedName",
														"src": "4537:1:4",
														"type": ""
													}
												],
												"src": "4497:217:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cannot withdraw 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient stake\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Cannot stake 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"No reward\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"264": [
									{
										"length": 32,
										"start": 252
									},
									{
										"length": 32,
										"start": 678
									},
									{
										"length": 32,
										"start": 989
									},
									{
										"length": 32,
										"start": 1351
									},
									{
										"length": 32,
										"start": 1539
									},
									{
										"length": 32,
										"start": 1656
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80638da5cb5b1161006e5780638da5cb5b1461016a5780639e447fc61461017a578063a694fc3a1461018d578063b88a802f146101a0578063db2e21bc146101a8578063f2fde38b146101b0575f80fd5b806316934fc4146100aa5780631859ea47146100f75780632e1a7d4d146101365780635d773b2c1461014b578063715018a614610162575b5f80fd5b6100d76100b8366004610868565b600160208190525f918252604090912080549181015460029091015483565b604080519384526020840192909252908201526060015b60405180910390f35b61011e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ee565b610149610144366004610895565b6101c3565b005b61015460025481565b6040519081526020016100ee565b610149610352565b5f546001600160a01b031661011e565b610149610188366004610895565b610365565b61014961019b366004610895565b610372565b6101496104b9565b6101496105e4565b6101496101be366004610868565b610728565b5f811161020b5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064015b60405180910390fd5b335f9081526001602052604090205481111561025e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b6044820152606401610202565b61026733610765565b335f90815260016020526040812080548392906102859084906108c0565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156102f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031891906108d9565b5060405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250565b61035a6107ed565b6103635f610819565b565b61036d6107ed565b600255565b5f81116103b25760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610202565b6103bb33610765565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af115801561042b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044f91906108d9565b50335f908152600160205260408120805483929061046e9084906108f8565b9091555050335f8181526001602081905260409182902042910155517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906103479084815260200190565b6104c233610765565b335f908152600160205260409020600201548061050d5760405162461bcd60e51b8152602060048201526009602482015268139bc81c995dd85c9960ba1b6044820152606401610202565b335f81815260016020526040808220600201919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af115801561058d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b191906108d9565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190602001610347565b6105ec6107ed565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610650573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610674919061090b565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6106b65f546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af1158015610700573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072491906108d9565b5050565b6107306107ed565b6001600160a01b03811661075957604051631e4fbdf760e01b81525f6004820152602401610202565b61076281610819565b50565b6001600160a01b0381165f9081526001602052604090208054156107e3575f81600101544261079491906108c0565b90505f670de0b6b3a764000060025483855f01546107b29190610922565b6107bc9190610922565b6107c69190610939565b905080836002015f8282546107db91906108f8565b909155505050505b4260019091015550565b5f546001600160a01b031633146103635760405163118cdaa760e01b8152336004820152602401610202565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610878575f80fd5b81356001600160a01b038116811461088e575f80fd5b9392505050565b5f602082840312156108a5575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156108d3576108d36108ac565b92915050565b5f602082840312156108e9575f80fd5b8151801515811461088e575f80fd5b808201808211156108d3576108d36108ac565b5f6020828403121561091b575f80fd5b5051919050565b80820281158282048414176108d3576108d36108ac565b5f8261095357634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220be16ab7b79c93582a064747840f3e332605e7763d4ff863ebfae93f79363001764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x1859EA47 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x5D773B2C EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x154 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x149 PUSH2 0x352 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11E JUMP JUMPDEST PUSH2 0x149 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E74207374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x267 CALLER PUSH2 0x765 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x285 SWAP1 DUP5 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x35A PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x363 PUSH0 PUSH2 0x819 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x36D PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x3BB CALLER PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x46E SWAP1 DUP5 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x347 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4C2 CALLER PUSH2 0x765 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x139BC81C995DD85C99 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP1 PUSH1 0x20 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x5EC PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x6B6 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x730 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x762 DUP2 PUSH2 0x819 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x7E3 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 DUP6 PUSH0 ADD SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x202 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x88E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x8AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x88E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x8AC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8D3 JUMPI PUSH2 0x8D3 PUSH2 0x8AC JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x953 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE AND 0xAB PUSH28 0x79C93582A064747840F3E332605E7763D4FF863EBFAE93F793630017 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "175:2426:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;372:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:25:4;;;563:2;548:18;;541:34;;;;591:18;;;584:34;495:2;480:18;372:43:3;;;;;;;;217:31;;;;;;;;-1:-1:-1;;;;;807:32:4;;;789:51;;777:2;762:18;217:31:3;629:217:4;1203:357:3;;;;;;:::i;:::-;;:::i;:::-;;422:49;;;;;;;;;1182:25:4;;;1170:2;1155:18;422:49:3;1036:177:4;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2321:107:3;;;;;;:::i;:::-;;:::i;848:347::-;;;;;;:::i;:::-;;:::i;1568:322::-;;;:::i;2436:162::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1203:357:3:-;1274:1;1265:6;:10;1257:40;;;;-1:-1:-1;;;1257:40:3;;1628:2:4;1257:40:3;;;1610:21:4;1667:2;1647:18;;;1640:30;-1:-1:-1;;;1686:18:4;;;1679:47;1743:18;;1257:40:3;;;;;;;;;1323:10;1316:18;;;;:6;:18;;;;;:25;:35;-1:-1:-1;1316:35:3;1308:66;;;;-1:-1:-1;;;1308:66:3;;1974:2:4;1308:66:3;;;1956:21:4;2013:2;1993:18;;;1986:30;-1:-1:-1;;;2032:18:4;;;2025:48;2090:18;;1308:66:3;1772:342:4;1308:66:3;1387:25;1401:10;1387:13;:25::i;:::-;1430:10;1423:18;;;;:6;:18;;;;;:35;;1452:6;;1423:18;:35;;1452:6;;1423:35;:::i;:::-;;;;-1:-1:-1;;1469:36:3;;-1:-1:-1;;;1469:36:3;;1486:10;1469:36;;;2558:51:4;2625:18;;;2618:34;;;1469:7:3;-1:-1:-1;;;;;1469:16:3;;;;2531:18:4;;1469:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1523:29:3;;1182:25:4;;;1533:10:3;;1523:29;;1170:2:4;1155:18;1523:29:3;;;;;;;;1203:357;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2321:107:3:-;1531:13:0;:11;:13::i;:::-;2391:19:3::1;:29:::0;2321:107::o;848:347::-;916:1;907:6;:10;899:37;;;;-1:-1:-1;;;899:37:3;;3147:2:4;899:37:3;;;3129:21:4;3186:2;3166:18;;;3159:30;-1:-1:-1;;;3205:18:4;;;3198:44;3259:18;;899:37:3;2945:338:4;899:37:3;947:25;961:10;947:13;:25::i;:::-;985:55;;-1:-1:-1;;;985:55:3;;1006:10;985:55;;;3528:34:4;1026:4:3;3578:18:4;;;3571:43;3630:18;;;3623:34;;;985:7:3;-1:-1:-1;;;;;985:20:3;;;;3463:18:4;;985:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1058:10:3;1051:18;;;;:6;:18;;;;;:35;;1080:6;;1051:18;:35;;1080:6;;1051:35;:::i;:::-;;;;-1:-1:-1;;1104:10:3;1097:18;;;;:6;:18;;;;;;;;;1128:15;1097:28;;:46;1161:26;;;;;1180:6;1182:25:4;;1170:2;1155:18;;1036:177;1568:322:3;1611:25;1625:10;1611:13;:25::i;:::-;1673:10;1649:14;1666:18;;;:6;:18;;;;;:29;;;1714:10;1706:32;;;;-1:-1:-1;;;1706:32:3;;4000:2:4;1706:32:3;;;3982:21:4;4039:1;4019:18;;;4012:29;-1:-1:-1;;;4057:18:4;;;4050:39;4106:18;;1706:32:3;3798:332:4;1706:32:3;1758:10;1783:1;1751:18;;;:6;:18;;;;;;:29;;:33;;;;1795:36;-1:-1:-1;;;1795:36:3;;;;;2558:51:4;;;;2625:18;;;2618:34;;;-1:-1:-1;;;;;1795:7:3;:16;;;;2531:18:4;;1795:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1849:33:3;;1182:25:4;;;1863:10:3;;1849:33;;1170:2:4;1155:18;1849:33:3;1036:177:4;2436:162:3;1531:13:0;:11;:13::i;:::-;2513:32:3::1;::::0;-1:-1:-1;;;2513:32:3;;2539:4:::1;2513:32;::::0;::::1;789:51:4::0;2495:15:3::1;::::0;2513:7:::1;-1:-1:-1::0;;;;;2513:17:3::1;::::0;::::1;::::0;762:18:4;;2513:32:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2495:50;;2556:7;-1:-1:-1::0;;;;;2556:16:3::1;;2573:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;2573:7:3::1;2556:34;::::0;-1:-1:-1;;;;;;2556:34:3::1;::::0;;;;;;-1:-1:-1;;;;;2576:32:4;;;2556:34:3::1;::::0;::::1;2558:51:4::0;2625:18;;;2618:34;;;2531:18;;2556:34:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2484:114;2436:162::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;789:51:4::0;762:18;;2672:31:0::1;629:217:4::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1898:415:3:-;-1:-1:-1;;;;;1988:15:3;;1958:27;1988:15;;;:6;:15;;;;;2018:16;;:20;2014:244;;2055:16;2092:9;:19;;;2074:15;:37;;;;:::i;:::-;2055:56;;2126:14;2197:4;2174:19;;2163:8;2144:9;:16;;;:27;;;;:::i;:::-;:49;;;;:::i;:::-;2143:58;;;;:::i;:::-;2126:75;;2240:6;2216:9;:20;;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;2014:244:3;2290:15;2268:19;;;;:37;-1:-1:-1;1898:415:3:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;789:51:4;762:18;;1901:40:0;629:217:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;851:180::-;910:6;963:2;951:9;942:7;938:23;934:32;931:52;;;979:1;976;969:12;931:52;-1:-1:-1;1002:23:4;;851:180;-1:-1:-1;851:180:4:o;2119:127::-;2180:10;2175:3;2171:20;2168:1;2161:31;2211:4;2208:1;2201:15;2235:4;2232:1;2225:15;2251:128;2318:9;;;2339:11;;;2336:37;;;2353:18;;:::i;:::-;2251:128;;;;:::o;2663:277::-;2730:6;2783:2;2771:9;2762:7;2758:23;2754:32;2751:52;;;2799:1;2796;2789:12;2751:52;2831:9;2825:16;2884:5;2877:13;2870:21;2863:5;2860:32;2850:60;;2906:1;2903;2896:12;3668:125;3733:9;;;3754:10;;;3751:36;;;3767:18;;:::i;4135:184::-;4205:6;4258:2;4246:9;4237:7;4233:23;4229:32;4226:52;;;4274:1;4271;4264:12;4226:52;-1:-1:-1;4297:16:4;;4135:184;-1:-1:-1;4135:184:4:o;4324:168::-;4397:9;;;4428;;4445:15;;;4439:22;;4425:37;4415:71;;4466:18;;:::i;4497:217::-;4537:1;4563;4553:132;;4607:10;4602:3;4598:20;4595:1;4588:31;4642:4;4639:1;4632:15;4670:4;4667:1;4660:15;4553:132;-1:-1:-1;4699:9:4;;4497:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "489200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimReward()": "infinite",
								"emergencyWithdraw()": "infinite",
								"owner()": "2329",
								"renounceOwnership()": "infinite",
								"rewardRatePerSecond()": "2361",
								"setRewardRate(uint256)": "24507",
								"stake(uint256)": "infinite",
								"stakes(address)": "6746",
								"tolcoin()": "infinite",
								"transferOwnership(address)": "28404",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_updateReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 459,
									"end": 471,
									"name": "PUSH",
									"source": 3,
									"value": "1AF2AF8C84"
								},
								{
									"begin": 422,
									"end": 471,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 422,
									"end": 471,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 840,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 695,
									"end": 840,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 840,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 717,
									"end": 759,
									"name": "PUSH",
									"source": 3,
									"value": "CD1710E8A72C95BDD127CC71E1227D8C98E05AEC"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 789,
									"end": 831,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "EBD92716D4AAC1ABE6A73A42B5A83A42C145447D"
								},
								{
									"begin": 772,
									"end": 832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 772,
									"end": 832,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 217,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 217,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "264"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2601,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be16ab7b79c93582a064747840f3e332605e7763d4ff863ebfae93f79363001764736f6c63430008180033",
									".code": [
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "9E447FC6"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "A694FC3A"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "B88A802F"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "DB2E21BC"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "16934FC4"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "1859EA47"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "5D773B2C"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 372,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 532,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 507,
											"end": 532,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 507,
											"end": 532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 563,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 566,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 548,
											"end": 566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 541,
											"end": 575,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 541,
											"end": 575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 575,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 541,
											"end": 575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 591,
											"end": 609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 591,
											"end": 609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 591,
											"end": 609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 584,
											"end": 618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 495,
											"end": 497,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 372,
											"end": 415,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 372,
											"end": 415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 217,
											"end": 248,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 217,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 217,
											"end": 248,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 217,
											"end": 248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 217,
											"end": 248,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 217,
											"end": 248,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 217,
											"end": 248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 217,
											"end": 248,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 248,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 789,
											"end": 840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 217,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 629,
											"end": 846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1203,
											"end": 1560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1203,
											"end": 1560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 422,
											"end": 471,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 422,
											"end": 471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 422,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 422,
											"end": 471,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 471,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 422,
											"end": 471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 422,
											"end": 471,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 422,
											"end": 471,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 422,
											"end": 471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 422,
											"end": 471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 471,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 422,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1213,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2321,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2321,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 848,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 848,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1568,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1568,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1568,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2598,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2436,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2436,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2436,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1275,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1631,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74207769746864726177203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1686,
											"end": 1704,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1686,
											"end": 1704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1341,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1316,
											"end": 1351,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1977,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1993,
											"end": 2011,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1993,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E74207374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2090,
											"end": 2108,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2090,
											"end": 2108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1772,
											"end": 2114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1308,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1387,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1412,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1387,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1440,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1423,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1458,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1496,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1469,
											"end": 1485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1469,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1469,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1543,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "PUSH",
											"source": 3,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1552,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2321,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2391,
											"end": 2420,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 848,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 916,
											"end": 917,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 907,
											"end": 917,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 899,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 899,
											"end": 936,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 899,
											"end": 936,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 936,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 899,
											"end": 936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 899,
											"end": 936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 936,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 899,
											"end": 936,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74207374616B65203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2945,
											"end": 3283,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 936,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 899,
											"end": 936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 961,
											"end": 971,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 947,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 947,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 972,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 947,
											"end": 972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1016,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3657,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 992,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 985,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 985,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1058,
											"end": 1068,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1051,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1086,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1104,
											"end": 1114,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1143,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1143,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1187,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1187,
											"name": "PUSH",
											"source": 3,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1161,
											"end": 1187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1161,
											"end": 1187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1186,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1213,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1568,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1625,
											"end": 1635,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1611,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1636,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1611,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4002,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3982,
											"end": 4003,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4012,
											"end": 4041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81C995DD85C99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4089,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3798,
											"end": 4130,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1768,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1751,
											"end": 1780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1784,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1795,
											"end": 1802,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1795,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1795,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1849,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1873,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 1849,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1036,
											"end": 1213,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2598,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2436,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2513,
											"end": 2545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2543,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2513,
											"end": 2530,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 2513,
											"end": 2530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 762,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2513,
											"end": 2545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2573,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2573,
											"end": 2580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2556,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2598,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 762,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 629,
											"end": 846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 2313,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1898,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2038,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2014,
											"end": 2258,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2071,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2089,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2074,
											"end": 2111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2074,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2111,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2074,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2111,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2174,
											"end": 2193,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2174,
											"end": 2193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2193,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2143,
											"end": 2201,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2143,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2201,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2143,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2216,
											"end": 2246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2246,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2258,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2014,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2290,
											"end": 2305,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2287,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2268,
											"end": 2287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2287,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2305,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 762,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 629,
											"end": 846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 851,
											"end": 1031,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 851,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 910,
											"end": 916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 942,
											"end": 949,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 938,
											"end": 961,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 934,
											"end": 966,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 931,
											"end": 983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 931,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 931,
											"end": 983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 979,
											"end": 980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 977,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 969,
											"end": 981,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 931,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 931,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1025,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1025,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 851,
											"end": 1031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 851,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2246,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2119,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2190,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2175,
											"end": 2178,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2171,
											"end": 2191,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2232,
											"end": 2233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2240,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2379,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2251,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2350,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2373,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2336,
											"end": 2373,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2353,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2379,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2663,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2762,
											"end": 2769,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2801,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2751,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2841,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2890,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 2891,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2850,
											"end": 2910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 2908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3793,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3668,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3764,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3751,
											"end": 3787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3767,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4319,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4135,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4260,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4244,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4256,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4261,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4278,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4226,
											"end": 4278,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4278,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4226,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4297,
											"end": 4313,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4297,
											"end": 4313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4492,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4324,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4437,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4439,
											"end": 4461,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4439,
											"end": 4461,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4462,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4415,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4415,
											"end": 4486,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4466,
											"end": 4484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4497,
											"end": 4714,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4497,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4564,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4553,
											"end": 4685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4617,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4602,
											"end": 4605,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4632,
											"end": 4647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4674,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4675,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4685,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4553,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4699,
											"end": 4708,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4497,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"TolcoinStakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"emergencyWithdraw()": "db2e21bc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRatePerSecond()": "5d773b2c",
							"setRewardRate(uint256)": "9e447fc6",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"tolcoin()": "1859ea47",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRatePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tolcoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TolcoinStakingContract.sol\":\"TolcoinStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"TolcoinStakingContract.sol\":{\"keccak256\":\"0xdec2520fe71eab0e91f35d2990bf079505f8a6bce8a942c754028d35d6a51a0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dd75f1e5816b048cb1c354f8e87ed827f48c7b47416b29bf4d1dc7939011382\",\"dweb:/ipfs/QmWC8TfRwbWuRzBmvX8wASaVBty7zvqq5BbVLq5ZK2dGju\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "TolcoinStakingContract.sol:TolcoinStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 276,
								"contract": "TolcoinStakingContract.sol:TolcoinStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(StakeInfo)271_storage)"
							},
							{
								"astId": 279,
								"contract": "TolcoinStakingContract.sol:TolcoinStaking",
								"label": "rewardRatePerSecond",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(StakeInfo)271_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TolcoinStaking.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)271_storage"
							},
							"t_struct(StakeInfo)271_storage": {
								"encoding": "inplace",
								"label": "struct TolcoinStaking.StakeInfo",
								"members": [
									{
										"astId": 266,
										"contract": "TolcoinStakingContract.sol:TolcoinStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 268,
										"contract": "TolcoinStakingContract.sol:TolcoinStaking",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 270,
										"contract": "TolcoinStakingContract.sol:TolcoinStaking",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"TolcoinStakingContract.sol": {
				"ast": {
					"absolutePath": "TolcoinStakingContract.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"TolcoinStaking": [
							549
						]
					},
					"id": 550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 226,
							"src": "61:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 550,
							"sourceUnit": 148,
							"src": "119:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"202:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "202:7:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "202:7:3"
								}
							],
							"canonicalName": "TolcoinStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 549,
							"linearizedBaseContracts": [
								549,
								147,
								255
							],
							"name": "TolcoinStaking",
							"nameLocation": "184:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1859ea47",
									"id": 264,
									"mutability": "immutable",
									"name": "tolcoin",
									"nameLocation": "241:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "217:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC20",
											"nameLocations": [
												"217:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "217:6:3"
										},
										"referencedDeclaration": 225,
										"src": "217:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TolcoinStaking.StakeInfo",
									"id": 271,
									"members": [
										{
											"constant": false,
											"id": 266,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "293:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 271,
											"src": "285:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 265,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 268,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "318:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 271,
											"src": "310:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "310:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 270,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "346:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 271,
											"src": "338:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "338:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "264:9:3",
									"nodeType": "StructDefinition",
									"scope": 549,
									"src": "257:107:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 276,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "409:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "372:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
										"typeString": "mapping(address => struct TolcoinStaking.StakeInfo)"
									},
									"typeName": {
										"id": 275,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "380:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "372:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
											"typeString": "mapping(address => struct TolcoinStaking.StakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 274,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 273,
												"name": "StakeInfo",
												"nameLocations": [
													"391:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "391:9:3"
											},
											"referencedDeclaration": 271,
											"src": "391:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
												"typeString": "struct TolcoinStaking.StakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5d773b2c",
									"id": 279,
									"mutability": "mutable",
									"name": "rewardRatePerSecond",
									"nameLocation": "437:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 549,
									"src": "422:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 277,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313135373430373430373430",
										"id": 278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "459:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115740740740_by_1",
											"typeString": "int_const 115740740740"
										},
										"value": "115740740740"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 285,
									"name": "Staked",
									"nameLocation": "518:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "541:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "525:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:38:3"
									},
									"src": "512:51:3"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 291,
									"name": "Withdrawn",
									"nameLocation": "575:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "601:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "585:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "615:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "607:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:38:3"
									},
									"src": "569:54:3"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 297,
									"name": "RewardClaimed",
									"nameLocation": "635:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "665:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "649:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "679:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "671:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:38:3"
									},
									"src": "629:58:3"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "761:79:3",
										"statements": [
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "tolcoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "772:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307845426439323731366434614163314142653641373361343242354138336134324331343534343764",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "789:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xEBd92716d4aAc1ABe6A73a42B5A83a42C145447d"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 304,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "782:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "782:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "772:60:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "772:60:3"
											}
										]
									},
									"id": 310,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "307863443137313065384137326339354244643132374343373165313232374438433938653035416563",
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "717:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0xcD1710e8A72c95BDd127CC71e1227D8C98e05Aec"
												}
											],
											"id": 301,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 299,
												"name": "Ownable",
												"nameLocations": [
													"709:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "709:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "709:51:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:3"
									},
									"scope": 549,
									"src": "695:145:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "888:307:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "907:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "916:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "907:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "919:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "899:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "899:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "961:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "965:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "961:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 322,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "947:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "947:25:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 330,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1006:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1010:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1006:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1026:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TolcoinStaking_$549",
																		"typeString": "contract TolcoinStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TolcoinStaking_$549",
																		"typeString": "contract TolcoinStaking"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1018:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1018:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1018:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1033:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 327,
															"name": "tolcoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "985:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "993:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "985:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "985:55:3"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 339,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "1051:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
																	"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
																}
															},
															"id": 342,
															"indexExpression": {
																"expression": {
																	"id": 340,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1058:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1062:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1058:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1051:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
																"typeString": "struct TolcoinStaking.StakeInfo storage ref"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1070:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "1051:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 344,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "1080:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1051:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1051:35:3"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 347,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "1097:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
																	"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
																}
															},
															"id": 350,
															"indexExpression": {
																"expression": {
																	"id": 348,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1104:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1108:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1104:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1097:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
																"typeString": "struct TolcoinStaking.StakeInfo storage ref"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1116:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1097:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 352,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1128:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1134:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1128:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1097:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1097:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 357,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1168:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1172:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1168:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "1180:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 356,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1161:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "EmitStatement",
												"src": "1156:31:3"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "857:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "871:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "863:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:16:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:3"
									},
									"scope": 549,
									"src": "848:347:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1246:314:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1265:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1274:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1265:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1277:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1257:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1257:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 376,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "1316:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
																			"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
																		}
																	},
																	"id": 379,
																	"indexExpression": {
																		"expression": {
																			"id": 377,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1323:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1327:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1323:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1316:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
																		"typeString": "struct TolcoinStaking.StakeInfo storage ref"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1335:6:3",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 266,
																"src": "1316:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 381,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1345:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1316:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1353:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b",
																"typeString": "literal_string \"Insufficient stake\""
															},
															"value": "Insufficient stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b",
																"typeString": "literal_string \"Insufficient stake\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1308:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1308:66:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1401:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1405:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1401:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 386,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "1387:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1387:25:3"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 391,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "1423:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
																	"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
																}
															},
															"id": 394,
															"indexExpression": {
																"expression": {
																	"id": 392,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1430:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1434:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1430:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1423:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
																"typeString": "struct TolcoinStaking.StakeInfo storage ref"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1442:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "1423:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 396,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1452:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1423:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1423:35:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1486:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1490:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1486:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "1498:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 399,
															"name": "tolcoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1469:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1477:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1469:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1469:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1533:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1537:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1533:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "1545:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "1523:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1523:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "EmitStatement",
												"src": "1518:34:3"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1229:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1221:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:16:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:3"
									},
									"scope": 549,
									"src": "1203:357:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1600:290:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1625:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1629:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1625:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "1611:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1611:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "1611:25:3"
											},
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1657:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1649:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1649:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 424,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "1666:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
																"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
															}
														},
														"id": 427,
														"indexExpression": {
															"expression": {
																"id": 425,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1673:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1677:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1673:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1666:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
															"typeString": "struct TolcoinStaking.StakeInfo storage ref"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1685:10:3",
													"memberName": "rewardDebt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 270,
													"src": "1666:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1649:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "1714:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1723:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1714:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20726577617264",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1726:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962",
																"typeString": "literal_string \"No reward\""
															},
															"value": "No reward"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962",
																"typeString": "literal_string \"No reward\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1706:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1706:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1706:32:3"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 437,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "1751:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
																	"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
																}
															},
															"id": 440,
															"indexExpression": {
																"expression": {
																	"id": 438,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1758:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1762:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1758:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1751:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
																"typeString": "struct TolcoinStaking.StakeInfo storage ref"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1770:10:3",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 270,
														"src": "1751:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1783:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1751:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "1751:33:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1812:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1816:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1812:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1824:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 445,
															"name": "tolcoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1795:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1803:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1795:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1795:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1863:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1867:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1863:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1875:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1849:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "1844:38:3"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1577:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:2:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:0:3"
									},
									"scope": 549,
									"src": "1568:322:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1947:366:3",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "1976:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "1958:27:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
															"typeString": "struct TolcoinStaking.StakeInfo"
														},
														"typeName": {
															"id": 466,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 465,
																"name": "StakeInfo",
																"nameLocations": [
																	"1958:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 271,
																"src": "1958:9:3"
															},
															"referencedDeclaration": 271,
															"src": "1958:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
																"typeString": "struct TolcoinStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"baseExpression": {
														"id": 468,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "1988:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$271_storage_$",
															"typeString": "mapping(address => struct TolcoinStaking.StakeInfo storage ref)"
														}
													},
													"id": 470,
													"indexExpression": {
														"id": 469,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1988:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$271_storage",
														"typeString": "struct TolcoinStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1958:45:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 472,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2018:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
																"typeString": "struct TolcoinStaking.StakeInfo storage pointer"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2028:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "2018:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2037:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2018:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "2014:244:3",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "2040:218:3",
													"statements": [
														{
															"assignments": [
																477
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 477,
																	"mutability": "mutable",
																	"name": "duration",
																	"nameLocation": "2063:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 502,
																	"src": "2055:16:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 476,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2055:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 483,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 478,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2074:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2080:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2074:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 480,
																		"name": "stakeInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2092:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
																			"typeString": "struct TolcoinStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "2092:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2074:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2055:56:3"
														},
														{
															"assignments": [
																485
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 485,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "2134:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 502,
																	"src": "2126:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 484,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2126:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 495,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 486,
																						"name": "stakeInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "2144:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
																							"typeString": "struct TolcoinStaking.StakeInfo storage pointer"
																						}
																					},
																					"id": 487,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2154:6:3",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 266,
																					"src": "2144:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 488,
																					"name": "duration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 477,
																					"src": "2163:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2144:27:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 490,
																				"name": "rewardRatePerSecond",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "2174:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2144:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 492,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2143:51:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2197:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2143:58:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2126:75:3"
														},
														{
															"expression": {
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 496,
																		"name": "stakeInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2216:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
																			"typeString": "struct TolcoinStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2226:10:3",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "2216:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 499,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "2240:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2216:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "2216:30:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 504,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2268:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$271_storage_ptr",
																"typeString": "struct TolcoinStaking.StakeInfo storage pointer"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2278:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2268:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 507,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2290:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2296:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2290:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2268:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2268:37:3"
											}
										]
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateReward",
									"nameLocation": "1907:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1929:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1921:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:17:3"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:3"
									},
									"scope": 549,
									"src": "1898:415:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "2380:48:3",
										"statements": [
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "rewardRatePerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2391:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2413:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2391:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "2391:29:3"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 516,
												"name": "onlyOwner",
												"nameLocations": [
													"2370:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2370:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2370:9:3"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "2330:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "2352:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2344:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:17:3"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:0:3"
									},
									"scope": 549,
									"src": "2321:107:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "2484:114:3",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2503:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "2495:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 535,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2539:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TolcoinStaking_$549",
																		"typeString": "contract TolcoinStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TolcoinStaking_$549",
																		"typeString": "contract TolcoinStaking"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2531:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 533,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2531:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 531,
															"name": "tolcoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2513:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2521:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "2513:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2495:50:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 542,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2573:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2582:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 539,
															"name": "tolcoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2556:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2564:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "2556:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2556:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "2556:34:3"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 526,
												"name": "onlyOwner",
												"nameLocations": [
													"2474:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2474:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2474:9:3"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "2445:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2462:2:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:0:3"
									},
									"scope": 549,
									"src": "2436:162:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 550,
							"src": "175:2426:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								285,
								291,
								297
							]
						}
					],
					"src": "33:2568:3"
				},
				"id": 3
			}
		}
	}
}