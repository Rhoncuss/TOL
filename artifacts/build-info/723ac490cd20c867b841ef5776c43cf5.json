{
	"id": "723ac490cd20c867b841ef5776c43cf5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"TOLCOIN_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n//\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Errors.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n\n// File: TOLCOIN.sol\n\n\npragma solidity ^0.8.24;\n\n\n\n\n\n\ncontract TOLCOIN is ERC20, ERC20Burnable, Pausable, Ownable {\n    using Address for address;\n\n    uint256 public constant MAX_SUPPLY = 1_000_000_000_000 * 10 ** 18;\n    uint256 public transferDelay = 30; // Anti-bot delay (seconds)\n    mapping(address => uint256) private _lastTransferTimestamp;\n    mapping(address => bool) public isExcludedFromAntiBot;\n\n    constructor() ERC20(\"TOLCOIN\", \"TOLCOIN\") Ownable(msg.sender) {\n        _mint(msg.sender, MAX_SUPPLY);\n        isExcludedFromAntiBot[msg.sender] = true;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function excludeFromAntiBot(address account, bool excluded) external onlyOwner {\n        isExcludedFromAntiBot[account] = excluded;\n    }\n\n    function setTransferDelay(uint256 delayInSeconds) external onlyOwner {\n        require(delayInSeconds <= 300, \"Delay too long\");\n        transferDelay = delayInSeconds;\n    }\n\n    // Overriding hook manually since we don't inherit another token extension that defines this hook\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal virtual\n    {\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n        if (!isExcludedFromAntiBot[from] && !isExcludedFromAntiBot[to]) {\n            require(\n                block.timestamp - _lastTransferTimestamp[from] >= transferDelay,\n                \"Anti-bot: Transfer too soon\"\n            );\n            _lastTransferTimestamp[from] = block.timestamp;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"TOLCOIN_flattened.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TOLCOIN_flattened.sol\":29679:35494  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TOLCOIN_flattened.sol\":29679:35494  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fef38e890fddaaf595a6c5d9dd4033fd69944bb338359bcf256b51dda3793e464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202fef38e890fddaaf595a6c5d9dd4033fd69944bb338359bcf256b51dda3793e464736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEF CODESIZE 0xE8 SWAP1 REVERT 0xDA 0xAF MSIZE GAS PUSH13 0x5D9DD4033FD69944BB338359BC CALLCODE JUMP 0xB5 SAR 0xDA CALLDATACOPY SWAP4 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "29679:5815:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;29679:5815:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202fef38e890fddaaf595a6c5d9dd4033fd69944bb338359bcf256b51dda3793e464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEF CODESIZE 0xE8 SWAP1 REVERT 0xDA 0xAF MSIZE GAS PUSH13 0x5D9DD4033FD69944BB338359BC CALLCODE JUMP 0xB5 SAR 0xDA CALLDATACOPY SWAP4 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "29679:5815:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29679,
									"end": 35494,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fef38e890fddaaf595a6c5d9dd4033fd69944bb338359bcf256b51dda3793e464736f6c63430008180033",
									".code": [
										{
											"begin": 29679,
											"end": 35494,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29679,
											"end": 35494,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TOLCOIN_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "TOLCOIN_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "TOLCOIN_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "TOLCOIN_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "TOLCOIN_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "TOLCOIN_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "TOLCOIN_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "TOLCOIN_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "TOLCOIN_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "TOLCOIN_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "TOLCOIN_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TOLCOIN_flattened.sol\":28976:29460  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TOLCOIN_flattened.sol\":28976:29460  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a855d1e0159f57e7242a7d7ecc45494299b953d08a864ae9b4a4b008baa1f62c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a855d1e0159f57e7242a7d7ecc45494299b953d08a864ae9b4a4b008baa1f62c64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 SSTORE 0xD1 0xE0 ISZERO SWAP16 JUMPI 0xE7 0x24 0x2A PUSH30 0x7ECC45494299B953D08A864AE9B4A4B008BAA1F62C64736F6C6343000818 STOP CALLER ",
							"sourceMap": "28976:484:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;28976:484:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a855d1e0159f57e7242a7d7ecc45494299b953d08a864ae9b4a4b008baa1f62c64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 SSTORE 0xD1 0xE0 ISZERO SWAP16 JUMPI 0xE7 0x24 0x2A PUSH30 0x7ECC45494299B953D08A864AE9B4A4B008BAA1F62C64736F6C6343000818 STOP CALLER ",
							"sourceMap": "28976:484:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28976,
									"end": 29460,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a855d1e0159f57e7242a7d7ecc45494299b953d08a864ae9b4a4b008baa1f62c64736f6c63430008180033",
									".code": [
										{
											"begin": 28976,
											"end": 29460,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 29460,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TOLCOIN_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "TOLCOIN_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 973,
								"contract": "TOLCOIN_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TOLCOIN": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "excludeFromAntiBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromAntiBot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "delayInSeconds",
									"type": "uint256"
								}
							],
							"name": "setTransferDelay",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TOLCOIN_flattened.sol\":35550:37124  contract TOLCOIN is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"TOLCOIN_flattened.sol\":35750:35752  30 */\n  0x1e\n    /* \"TOLCOIN_flattened.sol\":35719:35752  uint256 public transferDelay = 30 */\n  0x06\n  sstore\n    /* \"TOLCOIN_flattened.sol\":35910:36068  constructor() ERC20(\"TOLCOIN\", \"TOLCOIN\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TOLCOIN_flattened.sol\":12484:12597  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup1\n  dup3\n  mstore\n  shl(0xc9, 0x2a27a621a7a4a7)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n    /* \"TOLCOIN_flattened.sol\":35960:35970  msg.sender */\n  caller\n  swap2\n    /* \"TOLCOIN_flattened.sol\":12550:12555  _name */\n  0x03\n    /* \"TOLCOIN_flattened.sol\":12550:12563  _name = name_ */\n  tag_7\n    /* \"TOLCOIN_flattened.sol\":12484:12597  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"TOLCOIN_flattened.sol\":12550:12555  _name */\n  dup3\n    /* \"TOLCOIN_flattened.sol\":12550:12563  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"TOLCOIN_flattened.sol\":12573:12580  _symbol */\n  0x04\n    /* \"TOLCOIN_flattened.sol\":12573:12590  _symbol = symbol_ */\n  tag_9\n    /* \"TOLCOIN_flattened.sol\":12583:12590  symbol_ */\n  dup3\n    /* \"TOLCOIN_flattened.sol\":12573:12580  _symbol */\n  dup3\n    /* \"TOLCOIN_flattened.sol\":12573:12590  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"TOLCOIN_flattened.sol\":26987:26994  _paused */\n  0x05\n    /* \"TOLCOIN_flattened.sol\":26987:27002  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":24167:24193  initialOwner == address(0) */\n  dup2\n  and\n    /* \"TOLCOIN_flattened.sol\":24163:24258  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"TOLCOIN_flattened.sol\":24216:24247  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"TOLCOIN_flattened.sol\":24244:24245  0 */\n  0x00\n    /* \"TOLCOIN_flattened.sol\":24216:24247  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2847:2898   */\n  mstore\n    /* \"#utility.yul\":2820:2838   */\n  0x24\n  add\n    /* \"TOLCOIN_flattened.sol\":24216:24247  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"TOLCOIN_flattened.sol\":24163:24258  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"TOLCOIN_flattened.sol\":24267:24299  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"TOLCOIN_flattened.sol\":24286:24298  initialOwner */\n  dup2\n    /* \"TOLCOIN_flattened.sol\":24267:24285  _transferOwnership */\n  tag_16\n    /* \"TOLCOIN_flattened.sol\":24267:24299  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"TOLCOIN_flattened.sol\":35982:36011  _mint(msg.sender, MAX_SUPPLY) */\n  tag_18\n    /* \"TOLCOIN_flattened.sol\":35988:35998  msg.sender */\n  caller\n    /* \"TOLCOIN_flattened.sol\":35685:35713  1_000_000_000_000 * 10 ** 18 */\n  0x0c9f2c9cd04674edea40000000\n    /* \"TOLCOIN_flattened.sol\":35982:35987  _mint */\n  tag_19\n    /* \"TOLCOIN_flattened.sol\":35982:36011  _mint(msg.sender, MAX_SUPPLY) */\n  jump\t// in\ntag_18:\n    /* \"TOLCOIN_flattened.sol\":36043:36053  msg.sender */\n  caller\n    /* \"TOLCOIN_flattened.sol\":36021:36054  isExcludedFromAntiBot[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"TOLCOIN_flattened.sol\":36021:36042  isExcludedFromAntiBot */\n  0x08\n    /* \"TOLCOIN_flattened.sol\":36021:36054  isExcludedFromAntiBot[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TOLCOIN_flattened.sol\":36021:36061  isExcludedFromAntiBot[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"TOLCOIN_flattened.sol\":36057:36061  true */\n  0x01\n    /* \"TOLCOIN_flattened.sol\":36021:36061  isExcludedFromAntiBot[msg.sender] = true */\n  or\n  swap1\n  sstore\n    /* \"TOLCOIN_flattened.sol\":35550:37124  contract TOLCOIN is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  jump(tag_44)\n    /* \"TOLCOIN_flattened.sol\":25806:25993  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"TOLCOIN_flattened.sol\":25898:25904  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":25914:25931  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"TOLCOIN_flattened.sol\":25898:25904  _owner */\n  0x0100\n    /* \"TOLCOIN_flattened.sol\":25914:25931  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"TOLCOIN_flattened.sol\":25946:25986  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"TOLCOIN_flattened.sol\":25898:25904  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"TOLCOIN_flattened.sol\":25946:25986  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"TOLCOIN_flattened.sol\":25879:25895  address oldOwner */\n  0x00\n  swap1\n    /* \"TOLCOIN_flattened.sol\":25946:25986  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"TOLCOIN_flattened.sol\":25869:25993  {... */\n  pop\n    /* \"TOLCOIN_flattened.sol\":25806:25993  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"TOLCOIN_flattened.sol\":18341:18549  function _mint(address account, uint256 value) internal {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":18411:18432  account == address(0) */\n  dup3\n  and\n    /* \"TOLCOIN_flattened.sol\":18407:18498  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"TOLCOIN_flattened.sol\":18455:18487  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"TOLCOIN_flattened.sol\":18484:18485  0 */\n  0x00\n    /* \"TOLCOIN_flattened.sol\":18455:18487  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2847:2898   */\n  mstore\n    /* \"#utility.yul\":2820:2838   */\n  0x24\n  add\n    /* \"TOLCOIN_flattened.sol\":18455:18487  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2701:2904   */\n  jump\n    /* \"TOLCOIN_flattened.sol\":18407:18498  if (account == address(0)) {... */\ntag_23:\n    /* \"TOLCOIN_flattened.sol\":18507:18542  _update(address(0), account, value) */\n  tag_25\n    /* \"TOLCOIN_flattened.sol\":18523:18524  0 */\n  0x00\n    /* \"TOLCOIN_flattened.sol\":18527:18534  account */\n  dup4\n    /* \"TOLCOIN_flattened.sol\":18536:18541  value */\n  dup4\n    /* \"TOLCOIN_flattened.sol\":18507:18514  _update */\n  tag_26\n    /* \"TOLCOIN_flattened.sol\":18507:18542  _update(address(0), account, value) */\n  jump\t// in\ntag_25:\n    /* \"TOLCOIN_flattened.sol\":18341:18549  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"TOLCOIN_flattened.sol\":16891:17998  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":16980:16998  from == address(0) */\n  dup4\n  and\n    /* \"TOLCOIN_flattened.sol\":16976:17516  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"TOLCOIN_flattened.sol\":17132:17137  value */\n  dup1\n    /* \"TOLCOIN_flattened.sol\":17116:17128  _totalSupply */\n  0x02\n  0x00\n    /* \"TOLCOIN_flattened.sol\":17116:17137  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"TOLCOIN_flattened.sol\":16976:17516  if (from == address(0)) {... */\n  tag_31\n  swap1\n  pop\n  jump\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":17190:17205  _balances[from] */\n  dup4\n  and\n    /* \"TOLCOIN_flattened.sol\":17168:17187  uint256 fromBalance */\n  0x00\n    /* \"TOLCOIN_flattened.sol\":17190:17205  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"TOLCOIN_flattened.sol\":17223:17242  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"TOLCOIN_flattened.sol\":17219:17334  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"TOLCOIN_flattened.sol\":17269:17319  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3356:3388   */\n  dup6\n  and\n    /* \"TOLCOIN_flattened.sol\":17269:17319  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3338:3389   */\n  mstore\n    /* \"#utility.yul\":3405:3423   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3398:3432   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3448:3466   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3441:3475   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3311:3329   */\n  0x64\n  add\n    /* \"TOLCOIN_flattened.sol\":17269:17319  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":3136:3481   */\n  jump\n    /* \"TOLCOIN_flattened.sol\":17219:17334  if (fromBalance < value) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":17454:17469  _balances[from] */\n  dup5\n  and\n    /* \"TOLCOIN_flattened.sol\":17454:17463  _balances */\n  0x00\n    /* \"TOLCOIN_flattened.sol\":17454:17469  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TOLCOIN_flattened.sol\":17472:17491  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"TOLCOIN_flattened.sol\":17454:17491  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"TOLCOIN_flattened.sol\":16976:17516  if (from == address(0)) {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":17530:17546  to == address(0) */\n  dup3\n  and\n    /* \"TOLCOIN_flattened.sol\":17526:17951  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"TOLCOIN_flattened.sol\":17693:17705  _totalSupply */\n  0x02\n    /* \"TOLCOIN_flattened.sol\":17693:17714  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"TOLCOIN_flattened.sol\":17526:17951  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":17904:17917  _balances[to] */\n  dup3\n  and\n    /* \"TOLCOIN_flattened.sol\":17904:17913  _balances */\n  0x00\n    /* \"TOLCOIN_flattened.sol\":17904:17917  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TOLCOIN_flattened.sol\":17904:17926  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"TOLCOIN_flattened.sol\":17526:17951  if (to == address(0)) {... */\ntag_36:\n    /* \"TOLCOIN_flattened.sol\":17981:17983  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n  and\n    /* \"TOLCOIN_flattened.sol\":17975:17979  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"TOLCOIN_flattened.sol\":17985:17990  value */\n  dup4\n    /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n    /* \"#utility.yul\":3632:3657   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3620:3622   */\n  0x20\n    /* \"#utility.yul\":3605:3623   */\n  add\n  swap1\n    /* \"#utility.yul\":3486:3663   */\n  jump\n    /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"TOLCOIN_flattened.sol\":16891:17998  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_40:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_47:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_48:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_42:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_52:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_53:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_51:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_8:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_59\n  tag_39\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1555:1652   */\n  tag_60\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_61\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_42\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_64:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_62)\n    /* \"#utility.yul\":1776:2439   */\ntag_63:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_67:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_70:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_62:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2909:3131   */\ntag_30:\n    /* \"#utility.yul\":2974:2983   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":2995:3005   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":2992:3125   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":3047:3057   */\n  0x4e487b71\n    /* \"#utility.yul\":3042:3045   */\n  0xe0\n    /* \"#utility.yul\":3038:3058   */\n  shl\n    /* \"#utility.yul\":3035:3036   */\n  0x00\n    /* \"#utility.yul\":3028:3059   */\n  mstore\n    /* \"#utility.yul\":3082:3086   */\n  0x11\n    /* \"#utility.yul\":3079:3080   */\n  0x04\n    /* \"#utility.yul\":3072:3087   */\n  mstore\n    /* \"#utility.yul\":3110:3114   */\n  0x24\n    /* \"#utility.yul\":3107:3108   */\n  0x00\n    /* \"#utility.yul\":3100:3115   */\n  revert\n    /* \"#utility.yul\":2992:3125   */\ntag_73:\n    /* \"#utility.yul\":2909:3131   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3486:3663   */\ntag_44:\n    /* \"TOLCOIN_flattened.sol\":35550:37124  contract TOLCOIN is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TOLCOIN_flattened.sol\":35550:37124  contract TOLCOIN is ERC20, ERC20Burnable, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5d5b29c1\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcfc06e0b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x5d5b29c1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36e8c9b3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0a702e8d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TOLCOIN_flattened.sol\":12662:12751  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TOLCOIN_flattened.sol\":14881:15067  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"TOLCOIN_flattened.sol\":14881:15067  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_30\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":35719:35752  uint256 public transferDelay = 30 */\n    tag_5:\n      tag_38\n      sload(0x06)\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"TOLCOIN_flattened.sol\":35719:35752  uint256 public transferDelay = 30 */\n      tag_30\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":13732:13829  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"TOLCOIN_flattened.sol\":13810:13822  _totalSupply */\n      sload(0x02)\n        /* \"TOLCOIN_flattened.sol\":13732:13829  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_38)\n        /* \"TOLCOIN_flattened.sol\":15659:15903  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_32\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"TOLCOIN_flattened.sol\":13663:13665  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"TOLCOIN_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\n      tag_30\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":35648:35713  uint256 public constant MAX_SUPPLY = 1_000_000_000_000 * 10 ** 18 */\n    tag_9:\n      tag_38\n        /* \"TOLCOIN_flattened.sol\":35685:35713  1_000_000_000_000 * 10 ** 18 */\n      0x0c9f2c9cd04674edea40000000\n        /* \"TOLCOIN_flattened.sol\":35648:35713  uint256 public constant MAX_SUPPLY = 1_000_000_000_000 * 10 ** 18 */\n      dup2\n      jump\n        /* \"TOLCOIN_flattened.sol\":36351:36525  function setTransferDelay(uint256 delayInSeconds) external onlyOwner {... */\n    tag_10:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"TOLCOIN_flattened.sol\":36139:36202  function unpause() public onlyOwner {... */\n    tag_11:\n      tag_57\n      tag_62\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":22353:22440  function burn(uint256 value) public virtual {... */\n    tag_12:\n      tag_57\n      tag_64\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":27606:27690  function paused() public view virtual returns (bool) {... */\n    tag_13:\n        /* \"TOLCOIN_flattened.sol\":27676:27683  _paused */\n      and(0xff, sload(0x05))\n        /* \"TOLCOIN_flattened.sol\":27606:27690  function paused() public view virtual returns (bool) {... */\n      jump(tag_32)\n        /* \"TOLCOIN_flattened.sol\":35850:35903  mapping(address => bool) public isExcludedFromAntiBot */\n    tag_14:\n      tag_32\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"TOLCOIN_flattened.sol\":13887:14003  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":13978:13996  _balances[account] */\n      and\n        /* \"TOLCOIN_flattened.sol\":13952:13959  uint256 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":13978:13996  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"TOLCOIN_flattened.sol\":13887:14003  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"TOLCOIN_flattened.sol\":25187:25288  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_57\n      tag_79\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":22756:22914  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_17:\n      tag_57\n      tag_81\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":36074:36133  function pause() public onlyOwner {... */\n    tag_18:\n      tag_57\n      tag_84\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":24532:24617  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"TOLCOIN_flattened.sol\":24604:24610  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TOLCOIN_flattened.sol\":24532:24617  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"TOLCOIN_flattened.sol\":24532:24617  function owner() public view virtual returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":12864:12957  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_28\n      tag_90\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":14198:14376  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_32\n      tag_93\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":36208:36345  function excludeFromAntiBot(address account, bool excluded) external onlyOwner {... */\n    tag_22:\n      tag_57\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":14434:14574  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_38\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":14540:14558  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"TOLCOIN_flattened.sol\":14514:14521  uint256 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":14540:14558  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":14540:14551  _allowances */\n      0x01\n        /* \"TOLCOIN_flattened.sol\":14540:14558  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":14540:14567  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"TOLCOIN_flattened.sol\":14434:14574  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"TOLCOIN_flattened.sol\":25437:25652  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_57\n      tag_106\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":12662:12751  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"TOLCOIN_flattened.sol\":12707:12720  string memory */\n      0x60\n        /* \"TOLCOIN_flattened.sol\":12739:12744  _name */\n      0x03\n        /* \"TOLCOIN_flattened.sol\":12732:12744  return _name */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_110\n      jump\t// in\n    tag_111:\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TOLCOIN_flattened.sol\":12662:12751  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":14881:15067  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"TOLCOIN_flattened.sol\":14954:14958  bool */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":15008:15039  _approve(owner, spender, value) */\n      tag_118\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      dup2\n        /* \"TOLCOIN_flattened.sol\":15024:15031  spender */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":15033:15038  value */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":15008:15016  _approve */\n      tag_119\n        /* \"TOLCOIN_flattened.sol\":15008:15039  _approve(owner, spender, value) */\n      jump\t// in\n    tag_118:\n        /* \"TOLCOIN_flattened.sol\":15056:15060  true */\n      0x01\n        /* \"TOLCOIN_flattened.sol\":15049:15060  return true */\n      swap2\n      pop\n      pop\n        /* \"TOLCOIN_flattened.sol\":14881:15067  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_115:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":15659:15903  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"TOLCOIN_flattened.sol\":15746:15750  bool */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":15802:15839  _spendAllowance(from, spender, value) */\n      tag_123\n        /* \"TOLCOIN_flattened.sol\":15818:15822  from */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      dup3\n        /* \"TOLCOIN_flattened.sol\":15833:15838  value */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":15802:15817  _spendAllowance */\n      tag_124\n        /* \"TOLCOIN_flattened.sol\":15802:15839  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_123:\n        /* \"TOLCOIN_flattened.sol\":15849:15875  _transfer(from, to, value) */\n      tag_125\n        /* \"TOLCOIN_flattened.sol\":15859:15863  from */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":15865:15867  to */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":15869:15874  value */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":15849:15858  _transfer */\n      tag_126\n        /* \"TOLCOIN_flattened.sol\":15849:15875  _transfer(from, to, value) */\n      jump\t// in\n    tag_125:\n      pop\n        /* \"TOLCOIN_flattened.sol\":15892:15896  true */\n      0x01\n      swap5\n        /* \"TOLCOIN_flattened.sol\":15659:15903  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":36351:36525  function setTransferDelay(uint256 delayInSeconds) external onlyOwner {... */\n    tag_60:\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      tag_129\n        /* \"TOLCOIN_flattened.sol\":24425:24436  _checkOwner */\n      tag_130\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"TOLCOIN_flattened.sol\":36456:36459  300 */\n      0x012c\n        /* \"TOLCOIN_flattened.sol\":36438:36452  delayInSeconds */\n      dup2\n        /* \"TOLCOIN_flattened.sol\":36438:36459  delayInSeconds <= 300 */\n      gt\n      iszero\n        /* \"TOLCOIN_flattened.sol\":36430:36478  require(delayInSeconds <= 300, \"Delay too long\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3688:3690   */\n      0x20\n        /* \"TOLCOIN_flattened.sol\":36430:36478  require(delayInSeconds <= 300, \"Delay too long\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3670:3691   */\n      mstore\n        /* \"#utility.yul\":3727:3729   */\n      0x0e\n        /* \"#utility.yul\":3707:3725   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3700:3730   */\n      mstore\n      shl(0x90, 0x44656c617920746f6f206c6f6e67)\n        /* \"#utility.yul\":3746:3764   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3739:3783   */\n      mstore\n        /* \"#utility.yul\":3800:3818   */\n      0x64\n      add\n        /* \"TOLCOIN_flattened.sol\":36430:36478  require(delayInSeconds <= 300, \"Delay too long\") */\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"TOLCOIN_flattened.sol\":36488:36501  transferDelay */\n      0x06\n        /* \"TOLCOIN_flattened.sol\":36488:36518  transferDelay = delayInSeconds */\n      sstore\n        /* \"TOLCOIN_flattened.sol\":36351:36525  function setTransferDelay(uint256 delayInSeconds) external onlyOwner {... */\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":36139:36202  function unpause() public onlyOwner {... */\n    tag_62:\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      tag_136\n        /* \"TOLCOIN_flattened.sol\":24425:24436  _checkOwner */\n      tag_130\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"TOLCOIN_flattened.sol\":36185:36195  _unpause() */\n      tag_138\n        /* \"TOLCOIN_flattened.sol\":36185:36193  _unpause */\n      tag_139\n        /* \"TOLCOIN_flattened.sol\":36185:36195  _unpause() */\n      jump\t// in\n    tag_138:\n        /* \"TOLCOIN_flattened.sol\":36139:36202  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":22353:22440  function burn(uint256 value) public virtual {... */\n    tag_65:\n        /* \"TOLCOIN_flattened.sol\":22407:22433  _burn(_msgSender(), value) */\n      tag_141\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":22427:22432  value */\n      dup3\n        /* \"TOLCOIN_flattened.sol\":22407:22412  _burn */\n      tag_143\n        /* \"TOLCOIN_flattened.sol\":22407:22433  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_141:\n        /* \"TOLCOIN_flattened.sol\":22353:22440  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":25187:25288  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      tag_147\n        /* \"TOLCOIN_flattened.sol\":24425:24436  _checkOwner */\n      tag_130\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"TOLCOIN_flattened.sol\":25251:25281  _transferOwnership(address(0)) */\n      tag_138\n        /* \"TOLCOIN_flattened.sol\":25278:25279  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":25251:25269  _transferOwnership */\n      tag_150\n        /* \"TOLCOIN_flattened.sol\":25251:25281  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":22756:22914  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_82:\n        /* \"TOLCOIN_flattened.sol\":22831:22876  _spendAllowance(account, _msgSender(), value) */\n      tag_152\n        /* \"TOLCOIN_flattened.sol\":22847:22854  account */\n      dup3\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":22870:22875  value */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":22831:22846  _spendAllowance */\n      tag_124\n        /* \"TOLCOIN_flattened.sol\":22831:22876  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_152:\n        /* \"TOLCOIN_flattened.sol\":22886:22907  _burn(account, value) */\n      tag_154\n        /* \"TOLCOIN_flattened.sol\":22892:22899  account */\n      dup3\n        /* \"TOLCOIN_flattened.sol\":22901:22906  value */\n      dup3\n        /* \"TOLCOIN_flattened.sol\":22886:22891  _burn */\n      tag_143\n        /* \"TOLCOIN_flattened.sol\":22886:22907  _burn(account, value) */\n      jump\t// in\n    tag_154:\n        /* \"TOLCOIN_flattened.sol\":22756:22914  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":36074:36133  function pause() public onlyOwner {... */\n    tag_84:\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      tag_156\n        /* \"TOLCOIN_flattened.sol\":24425:24436  _checkOwner */\n      tag_130\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"TOLCOIN_flattened.sol\":36118:36126  _pause() */\n      tag_138\n        /* \"TOLCOIN_flattened.sol\":36118:36124  _pause */\n      tag_159\n        /* \"TOLCOIN_flattened.sol\":36118:36126  _pause() */\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":12864:12957  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"TOLCOIN_flattened.sol\":12911:12924  string memory */\n      0x60\n        /* \"TOLCOIN_flattened.sol\":12943:12950  _symbol */\n      0x04\n        /* \"TOLCOIN_flattened.sol\":12936:12950  return _symbol */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":14198:14376  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_94:\n        /* \"TOLCOIN_flattened.sol\":14267:14271  bool */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":14321:14348  _transfer(owner, to, value) */\n      tag_118\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      dup2\n        /* \"TOLCOIN_flattened.sol\":14338:14340  to */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":14342:14347  value */\n      dup6\n        /* \"TOLCOIN_flattened.sol\":14321:14330  _transfer */\n      tag_126\n        /* \"TOLCOIN_flattened.sol\":14321:14348  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":36208:36345  function excludeFromAntiBot(address account, bool excluded) external onlyOwner {... */\n    tag_99:\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      tag_171\n        /* \"TOLCOIN_flattened.sol\":24425:24436  _checkOwner */\n      tag_130\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":36297:36327  isExcludedFromAntiBot[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":36297:36318  isExcludedFromAntiBot */\n      0x08\n        /* \"TOLCOIN_flattened.sol\":36297:36327  isExcludedFromAntiBot[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":36297:36338  isExcludedFromAntiBot[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":36208:36345  function excludeFromAntiBot(address account, bool excluded) external onlyOwner {... */\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":25437:25652  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_107:\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      tag_175\n        /* \"TOLCOIN_flattened.sol\":24425:24436  _checkOwner */\n      tag_130\n        /* \"TOLCOIN_flattened.sol\":24425:24438  _checkOwner() */\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":25521:25543  newOwner == address(0) */\n      dup2\n      and\n        /* \"TOLCOIN_flattened.sol\":25517:25608  if (newOwner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":25566:25597  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":25594:25595  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":25566:25597  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":25566:25597  OwnableInvalidOwner(address(0)) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":25517:25608  if (newOwner == address(0)) {... */\n    tag_177:\n        /* \"TOLCOIN_flattened.sol\":25617:25645  _transferOwnership(newOwner) */\n      tag_141\n        /* \"TOLCOIN_flattened.sol\":25636:25644  newOwner */\n      dup2\n        /* \"TOLCOIN_flattened.sol\":25617:25635  _transferOwnership */\n      tag_150\n        /* \"TOLCOIN_flattened.sol\":25617:25645  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":19609:19737  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_119:\n        /* \"TOLCOIN_flattened.sol\":19693:19730  _approve(owner, spender, value, true) */\n      tag_182\n        /* \"TOLCOIN_flattened.sol\":19702:19707  owner */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":19709:19716  spender */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":19718:19723  value */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":19725:19729  true */\n      0x01\n        /* \"TOLCOIN_flattened.sol\":19693:19701  _approve */\n      tag_183\n        /* \"TOLCOIN_flattened.sol\":19693:19730  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_182:\n        /* \"TOLCOIN_flattened.sol\":19609:19737  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":21298:21774  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":14540:14558  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"TOLCOIN_flattened.sol\":21397:21421  uint256 currentAllowance */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":14540:14558  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":14540:14551  _allowances */\n      0x01\n        /* \"TOLCOIN_flattened.sol\":14540:14558  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":14540:14567  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"TOLCOIN_flattened.sol\":21463:21499  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"TOLCOIN_flattened.sol\":21459:21768  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":21538:21543  value */\n      dup2\n        /* \"TOLCOIN_flattened.sol\":21519:21535  currentAllowance */\n      dup2\n        /* \"TOLCOIN_flattened.sol\":21519:21543  currentAllowance < value */\n      lt\n        /* \"TOLCOIN_flattened.sol\":21515:21645  if (currentAllowance < value) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":21570:21630  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4049:4081   */\n      dup5\n      and\n        /* \"TOLCOIN_flattened.sol\":21570:21630  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4031:4082   */\n      mstore\n        /* \"#utility.yul\":4098:4116   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4091:4125   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4141:4159   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4134:4168   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4004:4022   */\n      0x64\n      add\n        /* \"TOLCOIN_flattened.sol\":21570:21630  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_133\n        /* \"#utility.yul\":3829:4174   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":21515:21645  if (currentAllowance < value) {... */\n    tag_187:\n        /* \"TOLCOIN_flattened.sol\":21686:21743  _approve(owner, spender, currentAllowance - value, false) */\n      tag_190\n        /* \"TOLCOIN_flattened.sol\":21695:21700  owner */\n      dup5\n        /* \"TOLCOIN_flattened.sol\":21702:21709  spender */\n      dup5\n        /* \"TOLCOIN_flattened.sol\":21730:21735  value */\n      dup5\n        /* \"TOLCOIN_flattened.sol\":21711:21727  currentAllowance */\n      dup5\n        /* \"TOLCOIN_flattened.sol\":21711:21735  currentAllowance - value */\n      sub\n        /* \"TOLCOIN_flattened.sol\":21737:21742  false */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":21686:21694  _approve */\n      tag_183\n        /* \"TOLCOIN_flattened.sol\":21686:21743  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_190:\n        /* \"TOLCOIN_flattened.sol\":21387:21774  {... */\n      pop\n        /* \"TOLCOIN_flattened.sol\":21298:21774  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":16276:16576  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":16359:16377  from == address(0) */\n      dup4\n      and\n        /* \"TOLCOIN_flattened.sol\":16355:16441  if (from == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":16400:16430  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":16427:16428  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":16400:16430  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":16400:16430  ERC20InvalidSender(address(0)) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":16355:16441  if (from == address(0)) {... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":16454:16470  to == address(0) */\n      dup3\n      and\n        /* \"TOLCOIN_flattened.sol\":16450:16536  if (to == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":16493:16525  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":16522:16523  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":16493:16525  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":16493:16525  ERC20InvalidReceiver(address(0)) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":16450:16536  if (to == address(0)) {... */\n    tag_194:\n        /* \"TOLCOIN_flattened.sol\":16545:16569  _update(from, to, value) */\n      tag_182\n        /* \"TOLCOIN_flattened.sol\":16553:16557  from */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":16559:16561  to */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":16563:16568  value */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":16545:16552  _update */\n      tag_197\n        /* \"TOLCOIN_flattened.sol\":16545:16569  _update(from, to, value) */\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":24690:24852  function _checkOwner() internal view virtual {... */\n    tag_130:\n        /* \"TOLCOIN_flattened.sol\":24604:24610  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":24749:24772  owner() != _msgSender() */\n      eq\n        /* \"TOLCOIN_flattened.sol\":24745:24846  if (owner() != _msgSender()) {... */\n      tag_138\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":24795:24835  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":24795:24835  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":24795:24835  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":28424:28541  function _unpause() internal virtual whenPaused {... */\n    tag_139:\n        /* \"TOLCOIN_flattened.sol\":27477:27493  _requirePaused() */\n      tag_205\n        /* \"TOLCOIN_flattened.sol\":27477:27491  _requirePaused */\n      tag_206\n        /* \"TOLCOIN_flattened.sol\":27477:27493  _requirePaused() */\n      jump\t// in\n    tag_205:\n        /* \"TOLCOIN_flattened.sol\":28482:28489  _paused */\n      0x05\n        /* \"TOLCOIN_flattened.sol\":28482:28497  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":28512:28534  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"TOLCOIN_flattened.sol\":28521:28533  _msgSender() */\n    tag_208:\n        /* \"TOLCOIN_flattened.sol\":28512:28534  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"TOLCOIN_flattened.sol\":28512:28534  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"TOLCOIN_flattened.sol\":28424:28541  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":18867:19073  function _burn(address account, uint256 value) internal {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":18937:18958  account == address(0) */\n      dup3\n      and\n        /* \"TOLCOIN_flattened.sol\":18933:19022  if (account == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":18981:19011  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":19008:19009  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":18981:19011  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":18981:19011  ERC20InvalidSender(address(0)) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":18933:19022  if (account == address(0)) {... */\n    tag_211:\n        /* \"TOLCOIN_flattened.sol\":19031:19066  _update(account, address(0), value) */\n      tag_154\n        /* \"TOLCOIN_flattened.sol\":19039:19046  account */\n      dup3\n        /* \"TOLCOIN_flattened.sol\":19056:19057  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":19060:19065  value */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":19031:19038  _update */\n      tag_197\n        /* \"TOLCOIN_flattened.sol\":19031:19066  _update(account, address(0), value) */\n      jump\t// in\n        /* \"TOLCOIN_flattened.sol\":25806:25993  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_150:\n        /* \"TOLCOIN_flattened.sol\":25898:25904  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":25914:25931  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"TOLCOIN_flattened.sol\":25898:25904  _owner */\n      0x0100\n        /* \"TOLCOIN_flattened.sol\":25914:25931  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"TOLCOIN_flattened.sol\":25946:25986  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"TOLCOIN_flattened.sol\":25898:25904  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"TOLCOIN_flattened.sol\":25946:25986  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"TOLCOIN_flattened.sol\":25879:25895  address oldOwner */\n      0x00\n      swap1\n        /* \"TOLCOIN_flattened.sol\":25946:25986  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"TOLCOIN_flattened.sol\":25869:25993  {... */\n      pop\n        /* \"TOLCOIN_flattened.sol\":25806:25993  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":28177:28292  function _pause() internal virtual whenNotPaused {... */\n    tag_159:\n        /* \"TOLCOIN_flattened.sol\":27230:27249  _requireNotPaused() */\n      tag_216\n        /* \"TOLCOIN_flattened.sol\":27230:27247  _requireNotPaused */\n      tag_217\n        /* \"TOLCOIN_flattened.sol\":27230:27249  _requireNotPaused() */\n      jump\t// in\n    tag_216:\n        /* \"TOLCOIN_flattened.sol\":28236:28243  _paused */\n      0x05\n        /* \"TOLCOIN_flattened.sol\":28236:28250  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"TOLCOIN_flattened.sol\":28246:28250  true */\n      0x01\n        /* \"TOLCOIN_flattened.sol\":28236:28250  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":28265:28285  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"TOLCOIN_flattened.sol\":28272:28284  _msgSender() */\n      tag_208\n        /* \"TOLCOIN_flattened.sol\":4289:4299  msg.sender */\n      caller\n      swap1\n        /* \"TOLCOIN_flattened.sol\":4210:4306  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"TOLCOIN_flattened.sol\":20584:21016  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":20696:20715  owner == address(0) */\n      dup5\n      and\n        /* \"TOLCOIN_flattened.sol\":20692:20781  if (owner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":20738:20770  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":20767:20768  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":20738:20770  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":20738:20770  ERC20InvalidApprover(address(0)) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":20692:20781  if (owner == address(0)) {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":20794:20815  spender == address(0) */\n      dup4\n      and\n        /* \"TOLCOIN_flattened.sol\":20790:20880  if (spender == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":20838:20869  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":20866:20867  0 */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":20838:20869  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"TOLCOIN_flattened.sol\":20838:20869  ERC20InvalidSpender(address(0)) */\n      tag_133\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":20790:20880  if (spender == address(0)) {... */\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":20889:20907  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TOLCOIN_flattened.sol\":20889:20900  _allowances */\n      0x01\n        /* \"TOLCOIN_flattened.sol\":20889:20907  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":20889:20916  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":20889:20924  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":20934:21010  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_190\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":20984:20991  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":20968:20999  Approval(owner, spender, value) */\n      and\n        /* \"TOLCOIN_flattened.sol\":20977:20982  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":20968:20999  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"TOLCOIN_flattened.sol\":20993:20998  value */\n      dup5\n        /* \"TOLCOIN_flattened.sol\":20968:20999  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_227\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":20968:20999  Approval(owner, spender, value) */\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TOLCOIN_flattened.sol\":20584:21016  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":16891:17998  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":16980:16998  from == address(0) */\n      dup4\n      and\n        /* \"TOLCOIN_flattened.sol\":16976:17516  if (from == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":17132:17137  value */\n      dup1\n        /* \"TOLCOIN_flattened.sol\":17116:17128  _totalSupply */\n      0x02\n      0x00\n        /* \"TOLCOIN_flattened.sol\":17116:17137  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"TOLCOIN_flattened.sol\":16976:17516  if (from == address(0)) {... */\n      tag_232\n      swap1\n      pop\n      jump\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":17190:17205  _balances[from] */\n      dup4\n      and\n        /* \"TOLCOIN_flattened.sol\":17168:17187  uint256 fromBalance */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":17190:17205  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TOLCOIN_flattened.sol\":17223:17242  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"TOLCOIN_flattened.sol\":17219:17334  if (fromBalance < value) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":17269:17319  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4049:4081   */\n      dup6\n      and\n        /* \"TOLCOIN_flattened.sol\":17269:17319  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4031:4082   */\n      mstore\n        /* \"#utility.yul\":4098:4116   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4091:4125   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4141:4159   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4134:4168   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4004:4022   */\n      0x64\n      add\n        /* \"TOLCOIN_flattened.sol\":17269:17319  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_133\n        /* \"#utility.yul\":3829:4174   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":17219:17334  if (fromBalance < value) {... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":17454:17469  _balances[from] */\n      dup5\n      and\n        /* \"TOLCOIN_flattened.sol\":17454:17463  _balances */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":17454:17469  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":17472:17491  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"TOLCOIN_flattened.sol\":17454:17491  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":16976:17516  if (from == address(0)) {... */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":17530:17546  to == address(0) */\n      dup3\n      and\n        /* \"TOLCOIN_flattened.sol\":17526:17951  if (to == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"TOLCOIN_flattened.sol\":17693:17705  _totalSupply */\n      0x02\n        /* \"TOLCOIN_flattened.sol\":17693:17714  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":17526:17951  if (to == address(0)) {... */\n      jump(tag_236)\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":17904:17917  _balances[to] */\n      dup3\n      and\n        /* \"TOLCOIN_flattened.sol\":17904:17913  _balances */\n      0x00\n        /* \"TOLCOIN_flattened.sol\":17904:17917  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TOLCOIN_flattened.sol\":17904:17926  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"TOLCOIN_flattened.sol\":17526:17951  if (to == address(0)) {... */\n    tag_236:\n        /* \"TOLCOIN_flattened.sol\":17981:17983  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n      and\n        /* \"TOLCOIN_flattened.sol\":17975:17979  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"TOLCOIN_flattened.sol\":17985:17990  value */\n      dup4\n        /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n      mload(0x40)\n      tag_237\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":17966:17991  Transfer(from, to, value) */\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TOLCOIN_flattened.sol\":16891:17998  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TOLCOIN_flattened.sol\":27936:28042  function _requirePaused() internal view virtual {... */\n    tag_206:\n        /* \"TOLCOIN_flattened.sol\":27676:27683  _paused */\n      and(0xff, sload(0x05))\n        /* \"TOLCOIN_flattened.sol\":27994:28035  require(paused(), \"Pausable: not paused\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4608:4610   */\n      0x20\n        /* \"TOLCOIN_flattened.sol\":27994:28035  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4590:4611   */\n      mstore\n        /* \"#utility.yul\":4647:4649   */\n      0x14\n        /* \"#utility.yul\":4627:4645   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4620:4650   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":4666:4684   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4659:4709   */\n      mstore\n        /* \"#utility.yul\":4726:4744   */\n      0x64\n      add\n        /* \"TOLCOIN_flattened.sol\":27994:28035  require(paused(), \"Pausable: not paused\") */\n      tag_133\n        /* \"#utility.yul\":4406:4750   */\n      jump\n        /* \"TOLCOIN_flattened.sol\":27758:27864  function _requireNotPaused() internal view virtual {... */\n    tag_217:\n        /* \"TOLCOIN_flattened.sol\":27676:27683  _paused */\n      and(0xff, sload(0x05))\n        /* \"TOLCOIN_flattened.sol\":27827:27836  !paused() */\n      iszero\n        /* \"TOLCOIN_flattened.sol\":27819:27857  require(!paused(), \"Pausable: paused\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"TOLCOIN_flattened.sol\":27819:27857  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4939:4960   */\n      mstore\n        /* \"#utility.yul\":4996:4998   */\n      0x10\n        /* \"#utility.yul\":4976:4994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4969:4999   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5015:5033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5008:5054   */\n      mstore\n        /* \"#utility.yul\":5071:5089   */\n      0x64\n      add\n        /* \"TOLCOIN_flattened.sol\":27819:27857  require(!paused(), \"Pausable: paused\") */\n      tag_133\n        /* \"#utility.yul\":4755:5095   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_31:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_251:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_251)\n    tag_253:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_248:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_255:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_34:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_257:\n        /* \"#utility.yul\":913:942   */\n      tag_258\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_248\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_47:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_262:\n        /* \"#utility.yul\":1563:1592   */\n      tag_263\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_248\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_264\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_248\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_59:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_267:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_71:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_269:\n        /* \"#utility.yul\":2236:2265   */\n      tag_270\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_248\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2831   */\n    tag_98:\n        /* \"#utility.yul\":2549:2555   */\n      0x00\n        /* \"#utility.yul\":2557:2563   */\n      dup1\n        /* \"#utility.yul\":2610:2612   */\n      0x40\n        /* \"#utility.yul\":2598:2607   */\n      dup4\n        /* \"#utility.yul\":2589:2596   */\n      dup6\n        /* \"#utility.yul\":2585:2608   */\n      sub\n        /* \"#utility.yul\":2581:2613   */\n      slt\n        /* \"#utility.yul\":2578:2630   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2626:2627   */\n      0x00\n        /* \"#utility.yul\":2623:2624   */\n      dup1\n        /* \"#utility.yul\":2616:2628   */\n      revert\n        /* \"#utility.yul\":2578:2630   */\n    tag_273:\n        /* \"#utility.yul\":2649:2678   */\n      tag_274\n        /* \"#utility.yul\":2668:2677   */\n      dup4\n        /* \"#utility.yul\":2649:2678   */\n      tag_248\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2639:2678   */\n      swap2\n      pop\n        /* \"#utility.yul\":2728:2730   */\n      0x20\n        /* \"#utility.yul\":2717:2726   */\n      dup4\n        /* \"#utility.yul\":2713:2731   */\n      add\n        /* \"#utility.yul\":2700:2732   */\n      calldataload\n        /* \"#utility.yul\":2775:2780   */\n      dup1\n        /* \"#utility.yul\":2768:2781   */\n      iszero\n        /* \"#utility.yul\":2761:2782   */\n      iszero\n        /* \"#utility.yul\":2754:2759   */\n      dup2\n        /* \"#utility.yul\":2751:2783   */\n      eq\n        /* \"#utility.yul\":2741:2801   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2741:2801   */\n    tag_275:\n        /* \"#utility.yul\":2820:2825   */\n      dup1\n        /* \"#utility.yul\":2810:2825   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2484:2831   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:3096   */\n    tag_102:\n        /* \"#utility.yul\":2904:2910   */\n      0x00\n        /* \"#utility.yul\":2912:2918   */\n      dup1\n        /* \"#utility.yul\":2965:2967   */\n      0x40\n        /* \"#utility.yul\":2953:2962   */\n      dup4\n        /* \"#utility.yul\":2944:2951   */\n      dup6\n        /* \"#utility.yul\":2940:2963   */\n      sub\n        /* \"#utility.yul\":2936:2968   */\n      slt\n        /* \"#utility.yul\":2933:2985   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2981:2982   */\n      0x00\n        /* \"#utility.yul\":2978:2979   */\n      dup1\n        /* \"#utility.yul\":2971:2983   */\n      revert\n        /* \"#utility.yul\":2933:2985   */\n    tag_277:\n        /* \"#utility.yul\":3004:3033   */\n      tag_278\n        /* \"#utility.yul\":3023:3032   */\n      dup4\n        /* \"#utility.yul\":3004:3033   */\n      tag_248\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2994:3033   */\n      swap2\n      pop\n        /* \"#utility.yul\":3052:3090   */\n      tag_279\n        /* \"#utility.yul\":3086:3088   */\n      0x20\n        /* \"#utility.yul\":3075:3084   */\n      dup5\n        /* \"#utility.yul\":3071:3089   */\n      add\n        /* \"#utility.yul\":3052:3090   */\n      tag_248\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3042:3090   */\n      swap1\n      pop\n        /* \"#utility.yul\":2836:3096   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3101:3481   */\n    tag_110:\n        /* \"#utility.yul\":3180:3181   */\n      0x01\n        /* \"#utility.yul\":3176:3188   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3223:3235   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3244:3305   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3298:3302   */\n      0x7f\n        /* \"#utility.yul\":3290:3296   */\n      dup3\n        /* \"#utility.yul\":3286:3303   */\n      and\n        /* \"#utility.yul\":3276:3303   */\n      swap2\n      pop\n        /* \"#utility.yul\":3244:3305   */\n    tag_281:\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3343:3349   */\n      dup3\n        /* \"#utility.yul\":3340:3354   */\n      lt\n        /* \"#utility.yul\":3320:3338   */\n      dup2\n        /* \"#utility.yul\":3317:3355   */\n      sub\n        /* \"#utility.yul\":3314:3475   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3397:3407   */\n      0x4e487b71\n        /* \"#utility.yul\":3392:3395   */\n      0xe0\n        /* \"#utility.yul\":3388:3408   */\n      shl\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3378:3409   */\n      mstore\n        /* \"#utility.yul\":3432:3436   */\n      0x22\n        /* \"#utility.yul\":3429:3430   */\n      0x04\n        /* \"#utility.yul\":3422:3437   */\n      mstore\n        /* \"#utility.yul\":3460:3464   */\n      0x24\n        /* \"#utility.yul\":3457:3458   */\n      0x00\n        /* \"#utility.yul\":3450:3465   */\n      revert\n        /* \"#utility.yul\":3314:3475   */\n    tag_282:\n      pop\n        /* \"#utility.yul\":3101:3481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4179:4401   */\n    tag_231:\n        /* \"#utility.yul\":4244:4253   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4265:4275   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4262:4395   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":4317:4327   */\n      0x4e487b71\n        /* \"#utility.yul\":4312:4315   */\n      0xe0\n        /* \"#utility.yul\":4308:4328   */\n      shl\n        /* \"#utility.yul\":4305:4306   */\n      0x00\n        /* \"#utility.yul\":4298:4329   */\n      mstore\n        /* \"#utility.yul\":4352:4356   */\n      0x11\n        /* \"#utility.yul\":4349:4350   */\n      0x04\n        /* \"#utility.yul\":4342:4357   */\n      mstore\n        /* \"#utility.yul\":4380:4384   */\n      0x24\n        /* \"#utility.yul\":4377:4378   */\n      0x00\n        /* \"#utility.yul\":4370:4385   */\n      revert\n\n    auxdata: 0xa2646970667358221220423032c60b73107b17126d8e8a8b530d234b7e9352f9d8fb7a665186e744781664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1396": {
									"entryPoint": null,
									"id": 1396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 318,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 229,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 378,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3665:1",
										"nodeType": "YulBlock",
										"src": "0:3665:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:1",
													"nodeType": "YulBlock",
													"src": "1447:1249:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:1",
																"nodeType": "YulLiteral",
																"src": "1707:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:1",
															"nodeType": "YulAssignment",
															"src": "1720:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:1",
																"nodeType": "YulLiteral",
																"src": "1733:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:1",
																		"nodeType": "YulBlock",
																		"src": "1783:656:1",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:1"
																							},
																							"nativeSrc": "1824:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:1"
																					},
																					"nativeSrc": "1812:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:1"
																					},
																					"nativeSrc": "1859:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:1",
																					"nodeType": "YulBlock",
																					"src": "1994:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:1"
																												},
																												"nativeSrc": "2033:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:1"
																										},
																										"nativeSrc": "2027:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:1"
																								},
																								"nativeSrc": "2012:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:1"
																							},
																							"nativeSrc": "2012:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:1"
																						},
																						{
																							"nativeSrc": "2071:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:1"
																								},
																								"nativeSrc": "2081:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:1"
																								},
																								"nativeSrc": "2125:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:1"
																					},
																					"nativeSrc": "1938:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:1"
																				},
																				"nativeSrc": "1930:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:1",
																					"nodeType": "YulBlock",
																					"src": "1953:28:1",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:1",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:1"
																								},
																								"nativeSrc": "1960:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:1",
																					"nodeType": "YulBlock",
																					"src": "1934:3:1",
																					"statements": []
																				},
																				"src": "1930:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:1",
																					"nodeType": "YulBlock",
																					"src": "2214:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:1"
																										},
																										"nativeSrc": "2255:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:1"
																								},
																								"nativeSrc": "2249:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:1"
																																		},
																																		"nativeSrc": "2334:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:1"
																																},
																																"nativeSrc": "2330:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:1"
																																},
																																"nativeSrc": "2356:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:1"
																														},
																														"nativeSrc": "2326:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:1"
																												},
																												"nativeSrc": "2322:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:1"
																										},
																										"nativeSrc": "2307:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:1"
																								},
																								"nativeSrc": "2292:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:1"
																							},
																							"nativeSrc": "2292:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:1"
																					},
																					"nativeSrc": "2182:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:1"
																				},
																				"nativeSrc": "2179:201:1",
																				"nodeType": "YulIf",
																				"src": "2179:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:1"
																									},
																									"nativeSrc": "2410:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:1"
																							},
																							"nativeSrc": "2406:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:1"
																					},
																					"nativeSrc": "2393:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:1"
																				},
																				"nativeSrc": "2393:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:1",
																	"nodeType": "YulCase",
																	"src": "1776:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:1",
																		"nodeType": "YulBlock",
																		"src": "2456:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:1",
																					"nodeType": "YulBlock",
																					"src": "2519:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:1"
																										},
																										"nativeSrc": "2552:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:1"
																								},
																								"nativeSrc": "2546:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:1"
																				},
																				"nativeSrc": "2497:89:1",
																				"nodeType": "YulIf",
																				"src": "2497:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:1"
																							},
																							"nativeSrc": "2612:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:1"
																					},
																					"nativeSrc": "2599:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:1"
																				},
																				"nativeSrc": "2599:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:1",
																	"nodeType": "YulCase",
																	"src": "2448:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:1"
																},
																"nativeSrc": "1753:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:1"
															},
															"nativeSrc": "1746:944:1",
															"nodeType": "YulSwitch",
															"src": "1746:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1345:1"
											},
											{
												"body": {
													"nativeSrc": "2802:102:1",
													"nodeType": "YulBlock",
													"src": "2802:102:1",
													"statements": [
														{
															"nativeSrc": "2812:26:1",
															"nodeType": "YulAssignment",
															"src": "2812:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2824:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2824:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2835:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2820:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:1"
																},
																"nativeSrc": "2820:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2820:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2812:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2812:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2854:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2854:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2869:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2869:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2885:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2885:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2890:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2890:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2881:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2881:3:1"
																						},
																						"nativeSrc": "2881:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2881:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2894:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2894:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2877:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2877:3:1"
																				},
																				"nativeSrc": "2877:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2865:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2865:3:1"
																		},
																		"nativeSrc": "2865:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2847:6:1"
																},
																"nativeSrc": "2847:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2847:51:1"
															},
															"nativeSrc": "2847:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2847:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2701:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2771:9:1",
														"nodeType": "YulTypedName",
														"src": "2771:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2782:6:1",
														"nodeType": "YulTypedName",
														"src": "2782:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2793:4:1",
														"nodeType": "YulTypedName",
														"src": "2793:4:1",
														"type": ""
													}
												],
												"src": "2701:203:1"
											},
											{
												"body": {
													"nativeSrc": "2957:174:1",
													"nodeType": "YulBlock",
													"src": "2957:174:1",
													"statements": [
														{
															"nativeSrc": "2967:16:1",
															"nodeType": "YulAssignment",
															"src": "2967:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2978:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2978:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2981:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2981:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2974:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2974:3:1"
																},
																"nativeSrc": "2974:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2974:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2967:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3014:111:1",
																"nodeType": "YulBlock",
																"src": "3014:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3035:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3035:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3042:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3042:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3047:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3047:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3038:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3038:3:1"
																					},
																					"nativeSrc": "3038:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3038:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3028:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3028:6:1"
																			},
																			"nativeSrc": "3028:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3028:31:1"
																		},
																		"nativeSrc": "3028:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3028:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3079:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3082:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3082:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3072:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3072:6:1"
																			},
																			"nativeSrc": "3072:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3072:15:1"
																		},
																		"nativeSrc": "3072:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3072:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3107:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3107:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3110:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3110:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3100:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3100:6:1"
																			},
																			"nativeSrc": "3100:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3100:15:1"
																		},
																		"nativeSrc": "3100:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3100:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2998:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3001:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3001:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2995:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:2:1"
																},
																"nativeSrc": "2995:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:10:1"
															},
															"nativeSrc": "2992:133:1",
															"nodeType": "YulIf",
															"src": "2992:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2909:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2940:1:1",
														"nodeType": "YulTypedName",
														"src": "2940:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2943:1:1",
														"nodeType": "YulTypedName",
														"src": "2943:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2949:3:1",
														"nodeType": "YulTypedName",
														"src": "2949:3:1",
														"type": ""
													}
												],
												"src": "2909:222:1"
											},
											{
												"body": {
													"nativeSrc": "3293:188:1",
													"nodeType": "YulBlock",
													"src": "3293:188:1",
													"statements": [
														{
															"nativeSrc": "3303:26:1",
															"nodeType": "YulAssignment",
															"src": "3303:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3315:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3311:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:1"
																},
																"nativeSrc": "3311:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3311:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3303:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3303:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3345:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3360:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3360:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3376:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3376:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3381:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3381:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3372:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3372:3:1"
																						},
																						"nativeSrc": "3372:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3372:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3385:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3385:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3368:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3368:3:1"
																				},
																				"nativeSrc": "3368:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3368:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3356:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:1"
																		},
																		"nativeSrc": "3356:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3338:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:1"
																},
																"nativeSrc": "3338:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3338:51:1"
															},
															"nativeSrc": "3338:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3338:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3409:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3409:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3420:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3420:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3405:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3405:3:1"
																		},
																		"nativeSrc": "3405:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3405:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3425:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3425:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3398:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:1"
																},
																"nativeSrc": "3398:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3398:34:1"
															},
															"nativeSrc": "3398:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3398:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3452:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3452:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3463:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3463:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3448:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:1"
																		},
																		"nativeSrc": "3448:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3448:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3468:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3441:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:1"
																},
																"nativeSrc": "3441:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3441:34:1"
															},
															"nativeSrc": "3441:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3441:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3136:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3246:9:1",
														"nodeType": "YulTypedName",
														"src": "3246:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3257:6:1",
														"nodeType": "YulTypedName",
														"src": "3257:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3265:6:1",
														"nodeType": "YulTypedName",
														"src": "3265:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3273:6:1",
														"nodeType": "YulTypedName",
														"src": "3273:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3284:4:1",
														"nodeType": "YulTypedName",
														"src": "3284:4:1",
														"type": ""
													}
												],
												"src": "3136:345:1"
											},
											{
												"body": {
													"nativeSrc": "3587:76:1",
													"nodeType": "YulBlock",
													"src": "3587:76:1",
													"statements": [
														{
															"nativeSrc": "3597:26:1",
															"nodeType": "YulAssignment",
															"src": "3597:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3609:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3609:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3620:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3620:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3605:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3605:3:1"
																},
																"nativeSrc": "3605:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3605:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3597:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3597:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3639:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3639:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3650:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3650:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3632:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:1"
																},
																"nativeSrc": "3632:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3632:25:1"
															},
															"nativeSrc": "3632:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3632:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3486:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3556:9:1",
														"nodeType": "YulTypedName",
														"src": "3556:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3567:6:1",
														"nodeType": "YulTypedName",
														"src": "3567:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3578:4:1",
														"nodeType": "YulTypedName",
														"src": "3578:4:1",
														"type": ""
													}
												],
												"src": "3486:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1E PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0x2A27A621A7A4A7 PUSH1 0xC9 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x3 PUSH3 0x56 DUP4 DUP3 PUSH3 0x347 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x65 DUP3 DUP3 PUSH3 0x347 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xAC DUP2 PUSH3 0xE5 JUMP JUMPDEST POP PUSH3 0xC6 CALLER PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH3 0x13E JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x439 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x169 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x98 JUMP JUMPDEST PUSH3 0x176 PUSH0 DUP4 DUP4 PUSH3 0x17A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1A8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x19C SWAP2 SWAP1 PUSH3 0x413 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x21A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x238 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x256 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x29C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x342 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x31E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x33F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x32A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x363 JUMPI PUSH3 0x363 PUSH3 0x2A9 JUMP JUMPDEST PUSH3 0x37B DUP2 PUSH3 0x374 DUP5 SLOAD PUSH3 0x2BD JUMP JUMPDEST DUP5 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3B1 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x399 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x40B JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3E1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3C0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3FF JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x433 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBDA DUP1 PUSH3 0x447 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D5B29C1 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xCFC06E0B EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D5B29C1 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x36E8C9B3 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA702E8D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x18B PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x442 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x48B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x172 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0xB4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0xB4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3BE DUP2 DUP6 DUP6 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3D7 DUP6 DUP3 DUP6 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x3E2 DUP6 DUP6 DUP6 PUSH2 0x5B1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x44656C617920746F6F206C6F6E67 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x44A PUSH2 0x60E JUMP JUMPDEST PUSH2 0x452 PUSH2 0x641 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x45E CALLER DUP3 PUSH2 0x693 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x469 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x452 PUSH0 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x47D DUP3 CALLER DUP4 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x487 DUP3 DUP3 PUSH2 0x693 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x493 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x452 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3BE DUP2 DUP6 DUP6 PUSH2 0x5B1 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x45E DUP2 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x530 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x75D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x5AB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x5AB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x75D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x530 DUP4 DUP4 DUP4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x649 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x487 DUP3 PUSH0 DUP4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x728 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x676 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5AB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x859 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84E SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8C9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x948 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA10 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9F4 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8E DUP5 PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP PUSH2 0xA9C PUSH1 0x20 DUP6 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xADC DUP3 PUSH2 0xA30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAFD DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB36 DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH2 0xB44 PUSH1 0x20 DUP5 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP ADDRESS ORIGIN 0xC6 SIGNEXTEND PUSH20 0x107B17126D8E8A8B530D234B7E9352F9D8FB7A66 MLOAD DUP7 0xE7 PREVRANDAO PUSH25 0x1664736F6C6343000818003300000000000000000000000000 ",
							"sourceMap": "35550:1574:0:-:0;;;35750:2;35719:33;;35910:158;;;;;;;;;-1:-1:-1;12484:113:0;;;;;;;;;;;;-1:-1:-1;;;12484:113:0;;;;;;;;;;;;;;;;;;;;;;35960:10;;12550:5;:13;12484:113;12550:5;:13;:::i;:::-;-1:-1:-1;12573:7:0;:17;12583:7;12573;:17;:::i;:::-;-1:-1:-1;;26987:7:0;:15;;-1:-1:-1;;26987:15:0;;;-1:-1:-1;;;;;;24167:26:0;;24163:95;;24216:31;;-1:-1:-1;;;24216:31:0;;24244:1;24216:31;;;2847:51:1;2820:18;;24216:31:0;;;;;;;;24163:95;24267:32;24286:12;24267:18;:32::i;:::-;-1:-1:-1;35982:29:0::2;35988:10;35685:28;35982:5;:29::i;:::-;36043:10;36021:33;::::0;;;:21:::2;:33;::::0;;;;:40;;-1:-1:-1;;36021:40:0::2;36057:4;36021:40;::::0;;35550:1574;;25806:187;25898:6;;;-1:-1:-1;;;;;25914:17:0;;;25898:6;25914:17;;;-1:-1:-1;;;;;;25914:17:0;;;;;;25946:40;;25898:6;;;;;;;;25946:40;;25879:16;;25946:40;25869:124;25806:187;:::o;18341:208::-;-1:-1:-1;;;;;18411:21:0;;18407:91;;18455:32;;-1:-1:-1;;;18455:32:0;;18484:1;18455:32;;;2847:51:1;2820:18;;18455:32:0;2701:203:1;18407:91:0;18507:35;18523:1;18527:7;18536:5;18507:7;:35::i;:::-;18341:208;;:::o;16891:1107::-;-1:-1:-1;;;;;16980:18:0;;16976:540;;17132:5;17116:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16976:540:0;;-1:-1:-1;16976:540:0;;-1:-1:-1;;;;;17190:15:0;;17168:19;17190:15;;;;;;;;;;;17223:19;;;17219:115;;;17269:50;;-1:-1:-1;;;17269:50:0;;-1:-1:-1;;;;;3356:32:1;;17269:50:0;;;3338:51:1;3405:18;;;3398:34;;;3448:18;;;3441:34;;;3311:18;;17269:50:0;3136:345:1;17219:115:0;-1:-1:-1;;;;;17454:15:0;;:9;:15;;;;;;;;;;17472:19;;;;17454:37;;16976:540;-1:-1:-1;;;;;17530:16:0;;17526:425;;17693:12;:21;;;;;;;17526:425;;;-1:-1:-1;;;;;17904:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17526:425;17981:2;-1:-1:-1;;;;;17966:25:0;17975:4;-1:-1:-1;;;;;17966:25:0;;17985:5;17966:25;;;;3632::1;;3620:2;3605:18;;3486:177;17966:25:0;;;;;;;;16891:1107;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:1;;;2546:26;2497:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:1;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:1;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2909:222::-;2974:9;;;2995:10;;;2992:133;;;3047:10;3042:3;3038:20;3035:1;3028:31;3082:4;3079:1;3072:15;3110:4;3107:1;3100:15;2992:133;2909:222;;;;:::o;3486:177::-;35550:1574:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_1360": {
									"entryPoint": null,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 1315,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 1885,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 1683,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_894": {
									"entryPoint": 1550,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1046": {
									"entryPoint": 1824,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1019": {
									"entryPoint": 2462,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1030": {
									"entryPoint": 2389,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_770": {
									"entryPoint": 1333,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 1735,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1457,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1062": {
									"entryPoint": 1601,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 2095,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 945,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_811": {
									"entryPoint": 1138,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_790": {
									"entryPoint": 1108,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeFromAntiBot_1430": {
									"entryPoint": 1207,
									"id": 1430,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isExcludedFromAntiBot_1371": {
									"entryPoint": null,
									"id": 1371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 801,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_877": {
									"entryPoint": null,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1405": {
									"entryPoint": 1163,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1007": {
									"entryPoint": null,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_908": {
									"entryPoint": 1121,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTransferDelay_1449": {
									"entryPoint": 1005,
									"id": 1449,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1179,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferDelay_1363": {
									"entryPoint": null,
									"id": 1363,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_454": {
									"entryPoint": 970,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_936": {
									"entryPoint": 1257,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 1194,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1414": {
									"entryPoint": 1090,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf58a3f4f4878719bce24746f213876fed76b17067041b1a1eac3575dcd3260d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5097:1",
										"nodeType": "YulBlock",
										"src": "0:5097:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:110:1",
													"nodeType": "YulBlock",
													"src": "1970:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:33:1",
															"nodeType": "YulAssignment",
															"src": "2041:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2051:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:1"
																},
																"nativeSrc": "2051:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1900:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:180:1"
											},
											{
												"body": {
													"nativeSrc": "2155:116:1",
													"nodeType": "YulBlock",
													"src": "2155:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2201:16:1",
																"nodeType": "YulBlock",
																"src": "2201:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:1"
																			},
																			"nativeSrc": "2203:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:1"
																		},
																		"nativeSrc": "2203:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2176:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2185:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:1"
																		},
																		"nativeSrc": "2172:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2168:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																},
																"nativeSrc": "2168:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2168:32:1"
															},
															"nativeSrc": "2165:52:1",
															"nodeType": "YulIf",
															"src": "2165:52:1"
														},
														{
															"nativeSrc": "2226:39:1",
															"nodeType": "YulAssignment",
															"src": "2226:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2236:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:1"
																},
																"nativeSrc": "2236:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2236:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2226:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2085:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2121:9:1",
														"nodeType": "YulTypedName",
														"src": "2121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2132:7:1",
														"nodeType": "YulTypedName",
														"src": "2132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2144:6:1",
														"nodeType": "YulTypedName",
														"src": "2144:6:1",
														"type": ""
													}
												],
												"src": "2085:186:1"
											},
											{
												"body": {
													"nativeSrc": "2377:102:1",
													"nodeType": "YulBlock",
													"src": "2377:102:1",
													"statements": [
														{
															"nativeSrc": "2387:26:1",
															"nodeType": "YulAssignment",
															"src": "2387:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2399:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2410:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2395:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:1"
																},
																"nativeSrc": "2395:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2395:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2387:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2429:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2444:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2460:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2465:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2456:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:1"
																						},
																						"nativeSrc": "2456:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2452:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:1"
																				},
																				"nativeSrc": "2452:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:1"
																		},
																		"nativeSrc": "2440:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:1"
																},
																"nativeSrc": "2422:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2422:51:1"
															},
															"nativeSrc": "2422:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2276:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2346:9:1",
														"nodeType": "YulTypedName",
														"src": "2346:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2357:6:1",
														"nodeType": "YulTypedName",
														"src": "2357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2368:4:1",
														"nodeType": "YulTypedName",
														"src": "2368:4:1",
														"type": ""
													}
												],
												"src": "2276:203:1"
											},
											{
												"body": {
													"nativeSrc": "2568:263:1",
													"nodeType": "YulBlock",
													"src": "2568:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2614:16:1",
																"nodeType": "YulBlock",
																"src": "2614:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2626:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2616:6:1"
																			},
																			"nativeSrc": "2616:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2616:12:1"
																		},
																		"nativeSrc": "2616:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2616:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2589:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2589:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2598:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2598:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:1"
																		},
																		"nativeSrc": "2585:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2585:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2610:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2610:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2581:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2581:3:1"
																},
																"nativeSrc": "2581:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2581:32:1"
															},
															"nativeSrc": "2578:52:1",
															"nodeType": "YulIf",
															"src": "2578:52:1"
														},
														{
															"nativeSrc": "2639:39:1",
															"nodeType": "YulAssignment",
															"src": "2639:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2668:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2668:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2649:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2649:18:1"
																},
																"nativeSrc": "2649:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2649:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2639:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:1"
																}
															]
														},
														{
															"nativeSrc": "2687:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2687:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2717:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2717:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2728:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2728:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2713:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2713:3:1"
																		},
																		"nativeSrc": "2713:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2713:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2700:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:1"
																},
																"nativeSrc": "2700:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2700:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2691:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2691:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2785:16:1",
																"nodeType": "YulBlock",
																"src": "2785:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2787:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:1"
																			},
																			"nativeSrc": "2787:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:1"
																		},
																		"nativeSrc": "2787:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2754:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2754:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2775:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2775:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2768:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2768:6:1"
																						},
																						"nativeSrc": "2768:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2768:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2761:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2761:6:1"
																				},
																				"nativeSrc": "2761:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2761:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2751:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:1"
																		},
																		"nativeSrc": "2751:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2744:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:1"
																},
																"nativeSrc": "2744:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2744:40:1"
															},
															"nativeSrc": "2741:60:1",
															"nodeType": "YulIf",
															"src": "2741:60:1"
														},
														{
															"nativeSrc": "2810:15:1",
															"nodeType": "YulAssignment",
															"src": "2810:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2820:5:1",
																"nodeType": "YulIdentifier",
																"src": "2820:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2810:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2810:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2484:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2526:9:1",
														"nodeType": "YulTypedName",
														"src": "2526:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2537:7:1",
														"nodeType": "YulTypedName",
														"src": "2537:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2549:6:1",
														"nodeType": "YulTypedName",
														"src": "2549:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2557:6:1",
														"nodeType": "YulTypedName",
														"src": "2557:6:1",
														"type": ""
													}
												],
												"src": "2484:347:1"
											},
											{
												"body": {
													"nativeSrc": "2923:173:1",
													"nodeType": "YulBlock",
													"src": "2923:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2969:16:1",
																"nodeType": "YulBlock",
																"src": "2969:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2978:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2978:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2981:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2981:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2971:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2971:6:1"
																			},
																			"nativeSrc": "2971:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2971:12:1"
																		},
																		"nativeSrc": "2971:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2971:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2944:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2944:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2953:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:1"
																		},
																		"nativeSrc": "2940:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2940:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2965:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2936:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2936:3:1"
																},
																"nativeSrc": "2936:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2936:32:1"
															},
															"nativeSrc": "2933:52:1",
															"nodeType": "YulIf",
															"src": "2933:52:1"
														},
														{
															"nativeSrc": "2994:39:1",
															"nodeType": "YulAssignment",
															"src": "2994:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3023:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3023:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3004:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3004:18:1"
																},
																"nativeSrc": "3004:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3004:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2994:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:1"
																}
															]
														},
														{
															"nativeSrc": "3042:48:1",
															"nodeType": "YulAssignment",
															"src": "3042:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3075:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3075:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3086:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3071:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3071:3:1"
																		},
																		"nativeSrc": "3071:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3071:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3052:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3052:18:1"
																},
																"nativeSrc": "3052:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3052:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3042:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3042:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2836:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2881:9:1",
														"nodeType": "YulTypedName",
														"src": "2881:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2892:7:1",
														"nodeType": "YulTypedName",
														"src": "2892:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2904:6:1",
														"nodeType": "YulTypedName",
														"src": "2904:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2912:6:1",
														"nodeType": "YulTypedName",
														"src": "2912:6:1",
														"type": ""
													}
												],
												"src": "2836:260:1"
											},
											{
												"body": {
													"nativeSrc": "3156:325:1",
													"nodeType": "YulBlock",
													"src": "3156:325:1",
													"statements": [
														{
															"nativeSrc": "3166:22:1",
															"nodeType": "YulAssignment",
															"src": "3166:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3180:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3180:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3183:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3183:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:1"
																},
																"nativeSrc": "3176:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3176:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3166:6:1"
																}
															]
														},
														{
															"nativeSrc": "3197:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3197:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3227:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3227:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3233:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3233:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3223:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:1"
																},
																"nativeSrc": "3223:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3223:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3201:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3201:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3274:31:1",
																"nodeType": "YulBlock",
																"src": "3274:31:1",
																"statements": [
																	{
																		"nativeSrc": "3276:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3276:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3290:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3290:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3298:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3298:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3286:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3286:3:1"
																			},
																			"nativeSrc": "3286:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3286:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3276:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3276:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3254:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3254:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:1"
																},
																"nativeSrc": "3247:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3247:26:1"
															},
															"nativeSrc": "3244:61:1",
															"nodeType": "YulIf",
															"src": "3244:61:1"
														},
														{
															"body": {
																"nativeSrc": "3364:111:1",
																"nodeType": "YulBlock",
																"src": "3364:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3385:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3392:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3392:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3397:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3397:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3388:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3388:3:1"
																					},
																					"nativeSrc": "3388:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3388:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3378:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3378:6:1"
																			},
																			"nativeSrc": "3378:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3378:31:1"
																		},
																		"nativeSrc": "3378:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3429:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3429:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3432:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3432:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3422:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3422:6:1"
																			},
																			"nativeSrc": "3422:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3422:15:1"
																		},
																		"nativeSrc": "3422:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3422:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3457:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3457:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3460:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3460:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3450:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3450:6:1"
																			},
																			"nativeSrc": "3450:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3450:15:1"
																		},
																		"nativeSrc": "3450:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3450:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3320:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3320:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3343:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3343:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3351:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3351:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3340:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3340:2:1"
																		},
																		"nativeSrc": "3340:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3340:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3317:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3317:2:1"
																},
																"nativeSrc": "3317:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3317:38:1"
															},
															"nativeSrc": "3314:161:1",
															"nodeType": "YulIf",
															"src": "3314:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3101:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3136:4:1",
														"nodeType": "YulTypedName",
														"src": "3136:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3145:6:1",
														"nodeType": "YulTypedName",
														"src": "3145:6:1",
														"type": ""
													}
												],
												"src": "3101:380:1"
											},
											{
												"body": {
													"nativeSrc": "3660:164:1",
													"nodeType": "YulBlock",
													"src": "3660:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3677:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3677:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3688:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:1"
																},
																"nativeSrc": "3670:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3670:21:1"
															},
															"nativeSrc": "3670:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3670:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3711:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3711:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3722:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3722:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3707:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3707:3:1"
																		},
																		"nativeSrc": "3707:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3707:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3727:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3727:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3700:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:1"
																},
																"nativeSrc": "3700:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3700:30:1"
															},
															"nativeSrc": "3700:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3700:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3750:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3750:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3761:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3761:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3746:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:1"
																		},
																		"nativeSrc": "3746:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3746:18:1"
																	},
																	{
																		"hexValue": "44656c617920746f6f206c6f6e67",
																		"kind": "string",
																		"nativeSrc": "3766:16:1",
																		"nodeType": "YulLiteral",
																		"src": "3766:16:1",
																		"type": "",
																		"value": "Delay too long"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3739:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3739:6:1"
																},
																"nativeSrc": "3739:44:1",
																"nodeType": "YulFunctionCall",
																"src": "3739:44:1"
															},
															"nativeSrc": "3739:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "3739:44:1"
														},
														{
															"nativeSrc": "3792:26:1",
															"nodeType": "YulAssignment",
															"src": "3792:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3804:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3800:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3800:3:1"
																},
																"nativeSrc": "3800:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3800:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3792:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3792:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf58a3f4f4878719bce24746f213876fed76b17067041b1a1eac3575dcd3260d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3486:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3637:9:1",
														"nodeType": "YulTypedName",
														"src": "3637:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3651:4:1",
														"nodeType": "YulTypedName",
														"src": "3651:4:1",
														"type": ""
													}
												],
												"src": "3486:338:1"
											},
											{
												"body": {
													"nativeSrc": "3986:188:1",
													"nodeType": "YulBlock",
													"src": "3986:188:1",
													"statements": [
														{
															"nativeSrc": "3996:26:1",
															"nodeType": "YulAssignment",
															"src": "3996:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4008:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4008:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4019:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4019:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4004:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4004:3:1"
																},
																"nativeSrc": "4004:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4004:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3996:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3996:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4038:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4053:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4053:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4069:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4069:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4074:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4074:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4065:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4065:3:1"
																						},
																						"nativeSrc": "4065:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4065:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4078:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4078:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4061:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4061:3:1"
																				},
																				"nativeSrc": "4061:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4061:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4049:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:1"
																		},
																		"nativeSrc": "4049:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:1"
																},
																"nativeSrc": "4031:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4031:51:1"
															},
															"nativeSrc": "4031:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4031:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4102:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4102:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4113:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4113:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4098:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4098:3:1"
																		},
																		"nativeSrc": "4098:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4098:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4118:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4091:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:1"
																},
																"nativeSrc": "4091:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4091:34:1"
															},
															"nativeSrc": "4091:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4091:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4145:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4145:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4156:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4156:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:1"
																		},
																		"nativeSrc": "4141:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4141:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4161:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4161:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:1"
																},
																"nativeSrc": "4134:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4134:34:1"
															},
															"nativeSrc": "4134:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4134:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3829:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3939:9:1",
														"nodeType": "YulTypedName",
														"src": "3939:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3950:6:1",
														"nodeType": "YulTypedName",
														"src": "3950:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3958:6:1",
														"nodeType": "YulTypedName",
														"src": "3958:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3966:6:1",
														"nodeType": "YulTypedName",
														"src": "3966:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3977:4:1",
														"nodeType": "YulTypedName",
														"src": "3977:4:1",
														"type": ""
													}
												],
												"src": "3829:345:1"
											},
											{
												"body": {
													"nativeSrc": "4227:174:1",
													"nodeType": "YulBlock",
													"src": "4227:174:1",
													"statements": [
														{
															"nativeSrc": "4237:16:1",
															"nodeType": "YulAssignment",
															"src": "4237:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4248:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4248:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4251:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4251:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4244:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4244:3:1"
																},
																"nativeSrc": "4244:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4244:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4237:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4237:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4284:111:1",
																"nodeType": "YulBlock",
																"src": "4284:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4305:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4312:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4312:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4317:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4317:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4308:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4308:3:1"
																					},
																					"nativeSrc": "4308:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4308:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4298:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4298:6:1"
																			},
																			"nativeSrc": "4298:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4298:31:1"
																		},
																		"nativeSrc": "4298:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4298:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4349:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4349:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4352:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4352:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4342:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4342:6:1"
																			},
																			"nativeSrc": "4342:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4342:15:1"
																		},
																		"nativeSrc": "4342:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4342:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4377:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4377:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4380:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4380:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4370:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4370:6:1"
																			},
																			"nativeSrc": "4370:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4370:15:1"
																		},
																		"nativeSrc": "4370:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4370:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4268:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4268:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4271:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4271:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4265:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4265:2:1"
																},
																"nativeSrc": "4265:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4265:10:1"
															},
															"nativeSrc": "4262:133:1",
															"nodeType": "YulIf",
															"src": "4262:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4179:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4210:1:1",
														"nodeType": "YulTypedName",
														"src": "4210:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4213:1:1",
														"nodeType": "YulTypedName",
														"src": "4213:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4219:3:1",
														"nodeType": "YulTypedName",
														"src": "4219:3:1",
														"type": ""
													}
												],
												"src": "4179:222:1"
											},
											{
												"body": {
													"nativeSrc": "4580:170:1",
													"nodeType": "YulBlock",
													"src": "4580:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4597:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:1"
																},
																"nativeSrc": "4590:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4590:21:1"
															},
															"nativeSrc": "4590:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4590:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4631:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4631:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4642:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4642:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4627:3:1"
																		},
																		"nativeSrc": "4627:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4627:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4647:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4647:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:1"
																},
																"nativeSrc": "4620:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4620:30:1"
															},
															"nativeSrc": "4620:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4620:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4670:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4670:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4681:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4681:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4666:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:1"
																		},
																		"nativeSrc": "4666:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "4686:22:1",
																		"nodeType": "YulLiteral",
																		"src": "4686:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4659:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:1"
																},
																"nativeSrc": "4659:50:1",
																"nodeType": "YulFunctionCall",
																"src": "4659:50:1"
															},
															"nativeSrc": "4659:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "4659:50:1"
														},
														{
															"nativeSrc": "4718:26:1",
															"nodeType": "YulAssignment",
															"src": "4718:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4730:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4730:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4741:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4741:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4726:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4726:3:1"
																},
																"nativeSrc": "4726:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4726:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4718:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4718:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4406:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4557:9:1",
														"nodeType": "YulTypedName",
														"src": "4557:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4571:4:1",
														"nodeType": "YulTypedName",
														"src": "4571:4:1",
														"type": ""
													}
												],
												"src": "4406:344:1"
											},
											{
												"body": {
													"nativeSrc": "4929:166:1",
													"nodeType": "YulBlock",
													"src": "4929:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4946:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4957:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:1"
																},
																"nativeSrc": "4939:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4939:21:1"
															},
															"nativeSrc": "4939:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4939:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4980:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4980:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4991:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4991:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4976:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:1"
																		},
																		"nativeSrc": "4976:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4996:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4996:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:1"
																},
																"nativeSrc": "4969:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4969:30:1"
															},
															"nativeSrc": "4969:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4969:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5019:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5030:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:1"
																		},
																		"nativeSrc": "5015:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5035:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5035:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5008:6:1"
																},
																"nativeSrc": "5008:46:1",
																"nodeType": "YulFunctionCall",
																"src": "5008:46:1"
															},
															"nativeSrc": "5008:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "5008:46:1"
														},
														{
															"nativeSrc": "5063:26:1",
															"nodeType": "YulAssignment",
															"src": "5063:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5075:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5071:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:1"
																},
																"nativeSrc": "5071:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5071:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5063:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5063:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4755:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4906:9:1",
														"nodeType": "YulTypedName",
														"src": "4906:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4920:4:1",
														"nodeType": "YulTypedName",
														"src": "4920:4:1",
														"type": ""
													}
												],
												"src": "4755:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bf58a3f4f4878719bce24746f213876fed76b17067041b1a1eac3575dcd3260d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Delay too long\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061013d575f3560e01c80635d5b29c1116100b45780638da5cb5b116100795780638da5cb5b1461027f57806395d89b41146102a8578063a9059cbb146102b0578063cfc06e0b146102c3578063dd62ed3e146102d6578063f2fde38b1461030e575f80fd5b80635d5b29c11461021257806370a0823114610234578063715018a61461025c57806379cc6790146102645780638456cb5914610277575f80fd5b8063313ce56711610105578063313ce567146101b457806332cb6b0c146101c357806336e8c9b3146101d75780633f4ba83a146101ec57806342966c68146101f45780635c975abb14610207575f80fd5b806306fdde0314610141578063095ea7b31461015f5780630a702e8d1461018257806318160ddd1461019957806323b872dd146101a1575b5f80fd5b610149610321565b60405161015691906109e4565b60405180910390f35b61017261016d366004610a4b565b6103b1565b6040519015158152602001610156565b61018b60065481565b604051908152602001610156565b60025461018b565b6101726101af366004610a73565b6103ca565b60405160128152602001610156565b61018b6c0c9f2c9cd04674edea4000000081565b6101ea6101e5366004610aac565b6103ed565b005b6101ea610442565b6101ea610202366004610aac565b610454565b60055460ff16610172565b610172610220366004610ac3565b60086020525f908152604090205460ff1681565b61018b610242366004610ac3565b6001600160a01b03165f9081526020819052604090205490565b6101ea610461565b6101ea610272366004610a4b565b610472565b6101ea61048b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b61014961049b565b6101726102be366004610a4b565b6104aa565b6101ea6102d1366004610ae3565b6104b7565b61018b6102e4366004610b1c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101ea61031c366004610ac3565b6104e9565b60606003805461033090610b4d565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610b4d565b80156103a75780601f1061037e576101008083540402835291602001916103a7565b820191905f5260205f20905b81548152906001019060200180831161038a57829003601f168201915b5050505050905090565b5f336103be818585610523565b60019150505b92915050565b5f336103d7858285610535565b6103e28585856105b1565b506001949350505050565b6103f561060e565b61012c81111561043d5760405162461bcd60e51b815260206004820152600e60248201526d44656c617920746f6f206c6f6e6760901b60448201526064015b60405180910390fd5b600655565b61044a61060e565b610452610641565b565b61045e3382610693565b50565b61046961060e565b6104525f6106c7565b61047d823383610535565b6104878282610693565b5050565b61049361060e565b610452610720565b60606004805461033090610b4d565b5f336103be8185856105b1565b6104bf61060e565b6001600160a01b03919091165f908152600860205260409020805460ff1916911515919091179055565b6104f161060e565b6001600160a01b03811661051a57604051631e4fbdf760e01b81525f6004820152602401610434565b61045e816106c7565b610530838383600161075d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156105ab578181101561059d57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610434565b6105ab84848484035f61075d565b50505050565b6001600160a01b0383166105da57604051634b637e8f60e11b81525f6004820152602401610434565b6001600160a01b0382166106035760405163ec442f0560e01b81525f6004820152602401610434565b61053083838361082f565b6005546001600160a01b036101009091041633146104525760405163118cdaa760e01b8152336004820152602401610434565b610649610955565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166106bc57604051634b637e8f60e11b81525f6004820152602401610434565b610487825f8361082f565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61072861099e565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106763390565b6001600160a01b0384166107865760405163e602df0560e01b81525f6004820152602401610434565b6001600160a01b0383166107af57604051634a1406b160e11b81525f6004820152602401610434565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156105ab57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161082191815260200190565b60405180910390a350505050565b6001600160a01b038316610859578060025f82825461084e9190610b85565b909155506108c99050565b6001600160a01b0383165f90815260208190526040902054818110156108ab5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610434565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108e557600280548290039055610903565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161094891815260200190565b60405180910390a3505050565b60055460ff166104525760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610434565b60055460ff16156104525760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610434565b5f602080835283518060208501525f5b81811015610a10578581018301518582016040015282016109f4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a46575f80fd5b919050565b5f8060408385031215610a5c575f80fd5b610a6583610a30565b946020939093013593505050565b5f805f60608486031215610a85575f80fd5b610a8e84610a30565b9250610a9c60208501610a30565b9150604084013590509250925092565b5f60208284031215610abc575f80fd5b5035919050565b5f60208284031215610ad3575f80fd5b610adc82610a30565b9392505050565b5f8060408385031215610af4575f80fd5b610afd83610a30565b915060208301358015158114610b11575f80fd5b809150509250929050565b5f8060408385031215610b2d575f80fd5b610b3683610a30565b9150610b4460208401610a30565b90509250929050565b600181811c90821680610b6157607f821691505b602082108103610b7f57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156103c457634e487b7160e01b5f52601160045260245ffdfea2646970667358221220423032c60b73107b17126d8e8a8b530d234b7e9352f9d8fb7a665186e744781664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D5B29C1 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xCFC06E0B EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D5B29C1 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x36E8C9B3 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA702E8D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x18B JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x18B PUSH13 0xC9F2C9CD04674EDEA40000000 DUP2 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x442 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x461 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x48B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x49B JUMP JUMPDEST PUSH2 0x172 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0xB4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0xB4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3BE DUP2 DUP6 DUP6 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3D7 DUP6 DUP3 DUP6 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x3E2 DUP6 DUP6 DUP6 PUSH2 0x5B1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x44656C617920746F6F206C6F6E67 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x44A PUSH2 0x60E JUMP JUMPDEST PUSH2 0x452 PUSH2 0x641 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x45E CALLER DUP3 PUSH2 0x693 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x469 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x452 PUSH0 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x47D DUP3 CALLER DUP4 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x487 DUP3 DUP3 PUSH2 0x693 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x493 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x452 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3BE DUP2 DUP6 DUP6 PUSH2 0x5B1 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x45E DUP2 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x530 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x75D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x5AB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x5AB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x75D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x530 DUP4 DUP4 DUP4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x649 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x487 DUP3 PUSH0 DUP4 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x728 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x676 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5AB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x859 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84E SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8C9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x948 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA10 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9F4 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA46 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8E DUP5 PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP PUSH2 0xA9C PUSH1 0x20 DUP6 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xADC DUP3 PUSH2 0xA30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAFD DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB36 DUP4 PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP PUSH2 0xB44 PUSH1 0x20 DUP5 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP ADDRESS ORIGIN 0xC6 SIGNEXTEND PUSH20 0x107B17126D8E8A8B530D234B7E9352F9D8FB7A66 MLOAD DUP7 0xE7 PREVRANDAO PUSH25 0x1664736F6C6343000818003300000000000000000000000000 ",
							"sourceMap": "35550:1574:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12662:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14881:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;14881:186:0;1004:187:1;35719:33:0;;;;;;;;;1342:25:1;;;1330:2;1315:18;35719:33:0;1196:177:1;13732:97:0;13810:12;;13732:97;;15659:244;;;;;;:::i;:::-;;:::i;13590:82::-;;;13663:2;1853:36:1;;1841:2;1826:18;13590:82:0;1711:184:1;35648:65:0;;35685:28;35648:65;;36351:174;;;;;;:::i;:::-;;:::i;:::-;;36139:63;;;:::i;22353:87::-;;;;;;:::i;:::-;;:::i;27606:84::-;27676:7;;;;27606:84;;35850:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13887:116;;;;;;:::i;:::-;-1:-1:-1;;;;;13978:18:0;13952:7;13978:18;;;;;;;;;;;;13887:116;25187:101;;;:::i;22756:158::-;;;;;;:::i;:::-;;:::i;36074:59::-;;;:::i;24532:85::-;24604:6;;;;;-1:-1:-1;;;;;24604:6:0;24532:85;;-1:-1:-1;;;;;2440:32:1;;;2422:51;;2410:2;2395:18;24532:85:0;2276:203:1;12864:93:0;;;:::i;14198:178::-;;;;;;:::i;:::-;;:::i;36208:137::-;;;;;;:::i;:::-;;:::i;14434:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14540:18:0;;;14514:7;14540:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14434:140;25437:215;;;;;;:::i;:::-;;:::i;12662:89::-;12707:13;12739:5;12732:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12662:89;:::o;14881:186::-;14954:4;4289:10;15008:31;4289:10;15024:7;15033:5;15008:8;:31::i;:::-;15056:4;15049:11;;;14881:186;;;;;:::o;15659:244::-;15746:4;4289:10;15802:37;15818:4;4289:10;15833:5;15802:15;:37::i;:::-;15849:26;15859:4;15865:2;15869:5;15849:9;:26::i;:::-;-1:-1:-1;15892:4:0;;15659:244;-1:-1:-1;;;;15659:244:0:o;36351:174::-;24425:13;:11;:13::i;:::-;36456:3:::1;36438:14;:21;;36430:48;;;::::0;-1:-1:-1;;;36430:48:0;;3688:2:1;36430:48:0::1;::::0;::::1;3670:21:1::0;3727:2;3707:18;;;3700:30;-1:-1:-1;;;3746:18:1;;;3739:44;3800:18;;36430:48:0::1;;;;;;;;;36488:13;:30:::0;36351:174::o;36139:63::-;24425:13;:11;:13::i;:::-;36185:10:::1;:8;:10::i;:::-;36139:63::o:0;22353:87::-;22407:26;4289:10;22427:5;22407;:26::i;:::-;22353:87;:::o;25187:101::-;24425:13;:11;:13::i;:::-;25251:30:::1;25278:1;25251:18;:30::i;22756:158::-:0;22831:45;22847:7;4289:10;22870:5;22831:15;:45::i;:::-;22886:21;22892:7;22901:5;22886;:21::i;:::-;22756:158;;:::o;36074:59::-;24425:13;:11;:13::i;:::-;36118:8:::1;:6;:8::i;12864:93::-:0;12911:13;12943:7;12936:14;;;;;:::i;14198:178::-;14267:4;4289:10;14321:27;4289:10;14338:2;14342:5;14321:9;:27::i;36208:137::-;24425:13;:11;:13::i;:::-;-1:-1:-1;;;;;36297:30:0;;;::::1;;::::0;;;:21:::1;:30;::::0;;;;:41;;-1:-1:-1;;36297:41:0::1;::::0;::::1;;::::0;;;::::1;::::0;;36208:137::o;25437:215::-;24425:13;:11;:13::i;:::-;-1:-1:-1;;;;;25521:22:0;::::1;25517:91;;25566:31;::::0;-1:-1:-1;;;25566:31:0;;25594:1:::1;25566:31;::::0;::::1;2422:51:1::0;2395:18;;25566:31:0::1;2276:203:1::0;25517:91:0::1;25617:28;25636:8;25617:18;:28::i;19609:128::-:0;19693:37;19702:5;19709:7;19718:5;19725:4;19693:8;:37::i;:::-;19609:128;;;:::o;21298:476::-;-1:-1:-1;;;;;14540:18:0;;;21397:24;14540:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21463:36:0;;21459:309;;;21538:5;21519:16;:24;21515:130;;;21570:60;;-1:-1:-1;;;21570:60:0;;-1:-1:-1;;;;;4049:32:1;;21570:60:0;;;4031:51:1;4098:18;;;4091:34;;;4141:18;;;4134:34;;;4004:18;;21570:60:0;3829:345:1;21515:130:0;21686:57;21695:5;21702:7;21730:5;21711:16;:24;21737:5;21686:8;:57::i;:::-;21387:387;21298:476;;;:::o;16276:300::-;-1:-1:-1;;;;;16359:18:0;;16355:86;;16400:30;;-1:-1:-1;;;16400:30:0;;16427:1;16400:30;;;2422:51:1;2395:18;;16400:30:0;2276:203:1;16355:86:0;-1:-1:-1;;;;;16454:16:0;;16450:86;;16493:32;;-1:-1:-1;;;16493:32:0;;16522:1;16493:32;;;2422:51:1;2395:18;;16493:32:0;2276:203:1;16450:86:0;16545:24;16553:4;16559:2;16563:5;16545:7;:24::i;24690:162::-;24604:6;;-1:-1:-1;;;;;24604:6:0;;;;;4289:10;24749:23;24745:101;;24795:40;;-1:-1:-1;;;24795:40:0;;4289:10;24795:40;;;2422:51:1;2395:18;;24795:40:0;2276:203:1;28424:117:0;27477:16;:14;:16::i;:::-;28482:7:::1;:15:::0;;-1:-1:-1;;28482:15:0::1;::::0;;28512:22:::1;4289:10:::0;28521:12:::1;28512:22;::::0;-1:-1:-1;;;;;2440:32:1;;;2422:51;;2410:2;2395:18;28512:22:0::1;;;;;;;28424:117::o:0;18867:206::-;-1:-1:-1;;;;;18937:21:0;;18933:89;;18981:30;;-1:-1:-1;;;18981:30:0;;19008:1;18981:30;;;2422:51:1;2395:18;;18981:30:0;2276:203:1;18933:89:0;19031:35;19039:7;19056:1;19060:5;19031:7;:35::i;25806:187::-;25898:6;;;-1:-1:-1;;;;;25914:17:0;;;25898:6;25914:17;;;-1:-1:-1;;;;;;25914:17:0;;;;;;25946:40;;25898:6;;;;;;;;25946:40;;25879:16;;25946:40;25869:124;25806:187;:::o;28177:115::-;27230:19;:17;:19::i;:::-;28236:7:::1;:14:::0;;-1:-1:-1;;28236:14:0::1;28246:4;28236:14;::::0;;28265:20:::1;28272:12;4289:10:::0;;4210:96;20584:432;-1:-1:-1;;;;;20696:19:0;;20692:89;;20738:32;;-1:-1:-1;;;20738:32:0;;20767:1;20738:32;;;2422:51:1;2395:18;;20738:32:0;2276:203:1;20692:89:0;-1:-1:-1;;;;;20794:21:0;;20790:90;;20838:31;;-1:-1:-1;;;20838:31:0;;20866:1;20838:31;;;2422:51:1;2395:18;;20838:31:0;2276:203:1;20790:90:0;-1:-1:-1;;;;;20889:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20934:76;;;;20984:7;-1:-1:-1;;;;;20968:31:0;20977:5;-1:-1:-1;;;;;20968:31:0;;20993:5;20968:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;20968:31:0;;;;;;;;20584:432;;;;:::o;16891:1107::-;-1:-1:-1;;;;;16980:18:0;;16976:540;;17132:5;17116:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16976:540:0;;-1:-1:-1;16976:540:0;;-1:-1:-1;;;;;17190:15:0;;17168:19;17190:15;;;;;;;;;;;17223:19;;;17219:115;;;17269:50;;-1:-1:-1;;;17269:50:0;;-1:-1:-1;;;;;4049:32:1;;17269:50:0;;;4031:51:1;4098:18;;;4091:34;;;4141:18;;;4134:34;;;4004:18;;17269:50:0;3829:345:1;17219:115:0;-1:-1:-1;;;;;17454:15:0;;:9;:15;;;;;;;;;;17472:19;;;;17454:37;;16976:540;-1:-1:-1;;;;;17530:16:0;;17526:425;;17693:12;:21;;;;;;;17526:425;;;-1:-1:-1;;;;;17904:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17526:425;17981:2;-1:-1:-1;;;;;17966:25:0;17975:4;-1:-1:-1;;;;;17966:25:0;;17985:5;17966:25;;;;1342::1;;1330:2;1315:18;;1196:177;17966:25:0;;;;;;;;16891:1107;;;:::o;27936:106::-;27676:7;;;;27994:41;;;;-1:-1:-1;;;27994:41:0;;4608:2:1;27994:41:0;;;4590:21:1;4647:2;4627:18;;;4620:30;-1:-1:-1;;;4666:18:1;;;4659:50;4726:18;;27994:41:0;4406:344:1;27758:106:0;27676:7;;;;27827:9;27819:38;;;;-1:-1:-1;;;27819:38:0;;4957:2:1;27819:38:0;;;4939:21:1;4996:2;4976:18;;;4969:30;-1:-1:-1;;;5015:18:1;;;5008:46;5071:18;;27819:38:0;4755:340:1;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:1;;1900:180;-1:-1:-1;1900:180:1:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:1:o;2484:347::-;2549:6;2557;2610:2;2598:9;2589:7;2585:23;2581:32;2578:52;;;2626:1;2623;2616:12;2578:52;2649:29;2668:9;2649:29;:::i;:::-;2639:39;;2728:2;2717:9;2713:18;2700:32;2775:5;2768:13;2761:21;2754:5;2751:32;2741:60;;2797:1;2794;2787:12;2741:60;2820:5;2810:15;;;2484:347;;;;;:::o;2836:260::-;2904:6;2912;2965:2;2953:9;2944:7;2940:23;2936:32;2933:52;;;2981:1;2978;2971:12;2933:52;3004:29;3023:9;3004:29;:::i;:::-;2994:39;;3052:38;3086:2;3075:9;3071:18;3052:38;:::i;:::-;3042:48;;2836:260;;;;;:::o;3101:380::-;3180:1;3176:12;;;;3223;;;3244:61;;3298:4;3290:6;3286:17;3276:27;;3244:61;3351:2;3343:6;3340:14;3320:18;3317:38;3314:161;;3397:10;3392:3;3388:20;3385:1;3378:31;3432:4;3429:1;3422:15;3460:4;3457:1;3450:15;3314:161;;3101:380;;;:::o;4179:222::-;4244:9;;;4265:10;;;4262:133;;;4317:10;4312:3;4308:20;4305:1;4298:31;4352:4;4349:1;4342:15;4380:4;4377:1;4370:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "606800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "239",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2582",
								"burn(uint256)": "51027",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "199",
								"excludeFromAntiBot(address,bool)": "26957",
								"isExcludedFromAntiBot(address)": "2551",
								"name()": "infinite",
								"owner()": "2351",
								"pause()": "infinite",
								"paused()": "2436",
								"renounceOwnership()": "infinite",
								"setTransferDelay(uint256)": "24593",
								"symbol()": "infinite",
								"totalSupply()": "2381",
								"transfer(address,uint256)": "51282",
								"transferDelay()": "2362",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28498",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35750,
									"end": 35752,
									"name": "PUSH",
									"source": 0,
									"value": "1E"
								},
								{
									"begin": 35719,
									"end": 35752,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 35719,
									"end": 35752,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35910,
									"end": 36068,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A27A621A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35960,
									"end": 35970,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 35960,
									"end": 35970,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12555,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12555,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12550,
									"end": 12563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12573,
									"end": 12580,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12583,
									"end": 12590,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12580,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12573,
									"end": 12590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 26987,
									"end": 26994,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26987,
									"end": 27002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26987,
									"end": 27002,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 26987,
									"end": 27002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26987,
									"end": 27002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26987,
									"end": 27002,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24167,
									"end": 24193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24167,
									"end": 24193,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24163,
									"end": 24258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24163,
									"end": 24258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24244,
									"end": 24245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2847,
									"end": 2898,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24216,
									"end": 24247,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24163,
									"end": 24258,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24163,
									"end": 24258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24267,
									"end": 24299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24286,
									"end": 24298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24267,
									"end": 24285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24267,
									"end": 24299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24267,
									"end": 24299,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24267,
									"end": 24299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 35982,
									"end": 36011,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 35988,
									"end": 35998,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 35685,
									"end": 35713,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "C9F2C9CD04674EDEA40000000"
								},
								{
									"begin": 35982,
									"end": 35987,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 35982,
									"end": 36011,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 35982,
									"end": 36011,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 35982,
									"end": 36011,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36043,
									"end": 36053,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36054,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36042,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 36021,
									"end": 36054,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36054,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36061,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36061,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 36021,
									"end": 36061,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36057,
									"end": 36061,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36021,
									"end": 36061,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36061,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36021,
									"end": 36061,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25806,
									"end": 25993,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 25806,
									"end": 25993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25931,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25946,
									"end": 25986,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25946,
									"end": 25986,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25898,
									"end": 25904,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25946,
									"end": 25986,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25946,
									"end": 25986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25879,
									"end": 25895,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25879,
									"end": 25895,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25946,
									"end": 25986,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25869,
									"end": 25993,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25806,
									"end": 25993,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25806,
									"end": 25993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18341,
									"end": 18549,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18341,
									"end": 18549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18411,
									"end": 18432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18411,
									"end": 18432,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18407,
									"end": 18498,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18407,
									"end": 18498,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18484,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2847,
									"end": 2898,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2820,
									"end": 2838,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18455,
									"end": 18487,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2701,
									"end": 2904,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18407,
									"end": 18498,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18407,
									"end": 18498,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18507,
									"end": 18542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18523,
									"end": 18524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18527,
									"end": 18534,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18536,
									"end": 18541,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18507,
									"end": 18514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 18507,
									"end": 18542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18507,
									"end": 18542,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18507,
									"end": 18542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18341,
									"end": 18549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18341,
									"end": 18549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18341,
									"end": 18549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16891,
									"end": 17998,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 16891,
									"end": 17998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16980,
									"end": 16998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16980,
									"end": 16998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 17137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17116,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17116,
									"end": 17137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17116,
									"end": 17137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17168,
									"end": 17187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17205,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17223,
									"end": 17242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17223,
									"end": 17242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17223,
									"end": 17242,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17219,
									"end": 17334,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17219,
									"end": 17334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17219,
									"end": 17334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3356,
									"end": 3388,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3356,
									"end": 3388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3338,
									"end": 3389,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3405,
									"end": 3423,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3405,
									"end": 3423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3405,
									"end": 3423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3432,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3398,
									"end": 3432,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3441,
									"end": 3475,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3441,
									"end": 3475,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3441,
									"end": 3475,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3311,
									"end": 3329,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3311,
									"end": 3329,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17269,
									"end": 17319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3136,
									"end": 3481,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17219,
									"end": 17334,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17219,
									"end": 17334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17463,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17469,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17491,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17472,
									"end": 17491,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17454,
									"end": 17491,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16976,
									"end": 17516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17530,
									"end": 17546,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17530,
									"end": 17546,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17705,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17693,
									"end": 17714,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17917,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17926,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17926,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17926,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17926,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17926,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17526,
									"end": 17951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17981,
									"end": 17983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17975,
									"end": 17979,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17985,
									"end": 17990,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3632,
									"end": 3657,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3632,
									"end": 3657,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3620,
									"end": 3622,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3605,
									"end": 3623,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3605,
									"end": 3623,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3486,
									"end": 3663,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17966,
									"end": 17991,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16891,
									"end": 17998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16891,
									"end": 17998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16891,
									"end": 17998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16891,
									"end": 17998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 3131,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2909,
									"end": 3131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2974,
									"end": 2983,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2974,
									"end": 2983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2974,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3005,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 3125,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 3125,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2992,
									"end": 3125,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3047,
									"end": 3057,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3042,
									"end": 3045,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3038,
									"end": 3058,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3036,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3028,
									"end": 3059,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3082,
									"end": 3086,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3079,
									"end": 3080,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3072,
									"end": 3087,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3114,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3107,
									"end": 3108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3100,
									"end": 3115,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 3125,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2992,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 3131,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 3131,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 3131,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 3131,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 3131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3486,
									"end": 3663,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3486,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35550,
									"end": 37124,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220423032c60b73107b17126d8e8a8b530d234b7e9352f9d8fb7a665186e744781664736f6c63430008180033",
									".code": [
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "5D5B29C1"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "CFC06E0B"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "5D5B29C1"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "36E8C9B3"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "A702E8D"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35550,
											"end": 37124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12662,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12662,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14881,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14881,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35719,
											"end": 35752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13732,
											"end": 13829,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13732,
											"end": 13829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13810,
											"end": 13822,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13810,
											"end": 13822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13732,
											"end": 13829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15659,
											"end": 15903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15659,
											"end": 15903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13663,
											"end": 13665,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35648,
											"end": 35713,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35648,
											"end": 35713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35648,
											"end": 35713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 35685,
											"end": 35713,
											"name": "PUSH",
											"source": 0,
											"value": "C9F2C9CD04674EDEA40000000"
										},
										{
											"begin": 35648,
											"end": 35713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35648,
											"end": 35713,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 36351,
											"end": 36525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36351,
											"end": 36525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36202,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 36139,
											"end": 36202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36139,
											"end": 36202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 36139,
											"end": 36202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22353,
											"end": 22440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22353,
											"end": 22440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27606,
											"end": 27690,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27606,
											"end": 27690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27606,
											"end": 27690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27606,
											"end": 27690,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 35850,
											"end": 35903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35850,
											"end": 35903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13887,
											"end": 14003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13952,
											"end": 13959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13887,
											"end": 14003,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25187,
											"end": 25288,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25187,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25187,
											"end": 25288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25187,
											"end": 25288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25187,
											"end": 25288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22756,
											"end": 22914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22756,
											"end": 22914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36133,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 36074,
											"end": 36133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36074,
											"end": 36133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36074,
											"end": 36133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24532,
											"end": 24617,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24532,
											"end": 24617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24532,
											"end": 24617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24532,
											"end": 24617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12864,
											"end": 12957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14198,
											"end": 14376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14198,
											"end": 14376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 36208,
											"end": 36345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 36208,
											"end": 36345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14434,
											"end": 14574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 14574,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25437,
											"end": 25652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25437,
											"end": 25652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12739,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12732,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12732,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14954,
											"end": 14958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15024,
											"end": 15031,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15033,
											"end": 15038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15008,
											"end": 15039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15039,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15008,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15056,
											"end": 15060,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15049,
											"end": 15060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15049,
											"end": 15060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15049,
											"end": 15060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 15067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 15750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15818,
											"end": 15822,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15802,
											"end": 15839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15839,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15802,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15865,
											"end": 15867,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15869,
											"end": 15874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 15849,
											"end": 15875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 15875,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 15849,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15903,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15659,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36351,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24425,
											"end": 24436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24425,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 36438,
											"end": 36452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36438,
											"end": 36459,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36438,
											"end": 36459,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36430,
											"end": 36478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36430,
											"end": 36478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36430,
											"end": 36478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3729,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44656C617920746F6F206C6F6E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 36430,
											"end": 36478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36488,
											"end": 36501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36488,
											"end": 36518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36351,
											"end": 36525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36202,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 36139,
											"end": 36202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24425,
											"end": 24436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24425,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36185,
											"end": 36195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36185,
											"end": 36193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 36185,
											"end": 36195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36185,
											"end": 36195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36185,
											"end": 36195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36139,
											"end": 36202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22427,
											"end": 22432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 22407,
											"end": 22433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22433,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 22407,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22353,
											"end": 22440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25187,
											"end": 25288,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25187,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24425,
											"end": 24436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24425,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25251,
											"end": 25281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 25278,
											"end": 25279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25251,
											"end": 25269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 25251,
											"end": 25281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22831,
											"end": 22876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 22847,
											"end": 22854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22870,
											"end": 22875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22831,
											"end": 22846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22831,
											"end": 22876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22831,
											"end": 22876,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 22831,
											"end": 22876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22886,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22892,
											"end": 22899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22901,
											"end": 22906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22886,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 22886,
											"end": 22907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22886,
											"end": 22907,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22886,
											"end": 22907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36133,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36074,
											"end": 36133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 24425,
											"end": 24436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24425,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36118,
											"end": 36124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36118,
											"end": 36126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12911,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12943,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12936,
											"end": 12950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14198,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14340,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14342,
											"end": 14347,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14321,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14321,
											"end": 14348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 36208,
											"end": 36345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24425,
											"end": 24436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24425,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 36297,
											"end": 36327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36297,
											"end": 36338,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36297,
											"end": 36338,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25437,
											"end": 25652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24425,
											"end": 24436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24425,
											"end": 24438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24425,
											"end": 24438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25521,
											"end": 25543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25517,
											"end": 25608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 25597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25566,
											"end": 25597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25566,
											"end": 25597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 25597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25566,
											"end": 25597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25566,
											"end": 25597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 25597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25566,
											"end": 25597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25517,
											"end": 25608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25517,
											"end": 25608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25617,
											"end": 25645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25636,
											"end": 25644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25617,
											"end": 25635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 25617,
											"end": 25645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19609,
											"end": 19737,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19609,
											"end": 19737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19702,
											"end": 19707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19709,
											"end": 19716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19718,
											"end": 19723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19693,
											"end": 19701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19693,
											"end": 19730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19730,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19693,
											"end": 19730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19609,
											"end": 19737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19609,
											"end": 19737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19609,
											"end": 19737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19609,
											"end": 19737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21774,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21298,
											"end": 21774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21463,
											"end": 21499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21459,
											"end": 21768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21459,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 21459,
											"end": 21768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 21515,
											"end": 21645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21570,
											"end": 21630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3829,
											"end": 4174,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21515,
											"end": 21645,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 21515,
											"end": 21645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 21695,
											"end": 21700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21730,
											"end": 21735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21737,
											"end": 21742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21686,
											"end": 21694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 21686,
											"end": 21743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21743,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 21686,
											"end": 21743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21387,
											"end": 21774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21298,
											"end": 21774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16276,
											"end": 16576,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16276,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16359,
											"end": 16377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16355,
											"end": 16441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16355,
											"end": 16441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16400,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16441,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16355,
											"end": 16441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16454,
											"end": 16470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16493,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16553,
											"end": 16557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16545,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24690,
											"end": 24852,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24690,
											"end": 24852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24749,
											"end": 24772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24745,
											"end": 24846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24795,
											"end": 24835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28424,
											"end": 28541,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28424,
											"end": 28541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 27477,
											"end": 27491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 27477,
											"end": 27493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27493,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 27477,
											"end": 27493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28482,
											"end": 28497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28482,
											"end": 28497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28497,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28521,
											"end": 28533,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 28521,
											"end": 28533,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28512,
											"end": 28534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28534,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 28424,
											"end": 28541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18867,
											"end": 19073,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18867,
											"end": 19073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18937,
											"end": 18958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18937,
											"end": 18958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 18933,
											"end": 19022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18981,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18933,
											"end": 19022,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 18933,
											"end": 19022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19031,
											"end": 19066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19039,
											"end": 19046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19060,
											"end": 19065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19031,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19031,
											"end": 19066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25993,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 25806,
											"end": 25993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25946,
											"end": 25986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25946,
											"end": 25986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25946,
											"end": 25986,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25946,
											"end": 25986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25879,
											"end": 25895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25879,
											"end": 25895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25946,
											"end": 25986,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25869,
											"end": 25993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28177,
											"end": 28292,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 28177,
											"end": 28292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27230,
											"end": 27249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27230,
											"end": 27247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27230,
											"end": 27249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27230,
											"end": 27249,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27230,
											"end": 27249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28236,
											"end": 28243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28236,
											"end": 28250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28236,
											"end": 28250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28236,
											"end": 28250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28236,
											"end": 28250,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28236,
											"end": 28250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28236,
											"end": 28250,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28265,
											"end": 28285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 28272,
											"end": 28284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4306,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20584,
											"end": 21016,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20584,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20696,
											"end": 20715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20696,
											"end": 20715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20692,
											"end": 20781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20692,
											"end": 20781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20767,
											"end": 20768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20738,
											"end": 20770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20692,
											"end": 20781,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20692,
											"end": 20781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20794,
											"end": 20815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20794,
											"end": 20815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20790,
											"end": 20880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 20790,
											"end": 20880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20866,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20838,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20790,
											"end": 20880,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 20790,
											"end": 20880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20900,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20907,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20916,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20924,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20934,
											"end": 21010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20934,
											"end": 21010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20934,
											"end": 21010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 20934,
											"end": 21010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20984,
											"end": 20991,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20982,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20993,
											"end": 20998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20968,
											"end": 20999,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20584,
											"end": 21016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20584,
											"end": 21016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20584,
											"end": 21016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20584,
											"end": 21016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20584,
											"end": 21016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16891,
											"end": 17998,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16891,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16980,
											"end": 16998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 17137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17116,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 17116,
											"end": 17137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17223,
											"end": 17242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17223,
											"end": 17242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17223,
											"end": 17242,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17219,
											"end": 17334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17269,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3829,
											"end": 4174,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17219,
											"end": 17334,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17219,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17472,
											"end": 17491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17491,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 16976,
											"end": 17516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17530,
											"end": 17546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17530,
											"end": 17546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17705,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17693,
											"end": 17714,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17926,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17526,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17981,
											"end": 17983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17975,
											"end": 17979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17985,
											"end": 17990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17991,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16891,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16891,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16891,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16891,
											"end": 17998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27936,
											"end": 28042,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 27936,
											"end": 28042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4649,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27994,
											"end": 28035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4406,
											"end": 4750,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27758,
											"end": 27864,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27758,
											"end": 27864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27676,
											"end": 27683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27827,
											"end": 27836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 4998,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27819,
											"end": 27857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4755,
											"end": 5095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2596,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2613,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2578,
											"end": 2630,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2578,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2668,
											"end": 2677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2649,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2678,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2649,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2730,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2732,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2741,
											"end": 2801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2741,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2968,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2983,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3004,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3052,
											"end": 3090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3090,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3052,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3101,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3176,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3188,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3244,
											"end": 3305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3244,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3354,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3355,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3314,
											"end": 3475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3388,
											"end": 3408,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3422,
											"end": 3437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3314,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4401,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4179,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4275,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4395,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4262,
											"end": 4395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4327,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4312,
											"end": 4315,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4308,
											"end": 4328,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4356,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4349,
											"end": 4350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4385,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"TOLCOIN_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"excludeFromAntiBot(address,bool)": "cfc06e0b",
							"isExcludedFromAntiBot(address)": "5d5b29c1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setTransferDelay(uint256)": "36e8c9b3",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferDelay()": "0a702e8d",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromAntiBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delayInSeconds\",\"type\":\"uint256\"}],\"name\":\"setTransferDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOLCOIN_flattened.sol\":\"TOLCOIN\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOLCOIN_flattened.sol\":{\"keccak256\":\"0x757d943692917a270f7373aac0a8e1a1e25c90a4db79baac2eb357f0cfa2cd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e130907c7049d7d6761c3c894cbd0641846054414c0bae3673873f4468971\",\"dweb:/ipfs/QmPsuAuG4kfqz5saKXyDWGoYGyrryzWkT4AmeXKFguEU2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 973,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 818,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1363,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "transferDelay",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1367,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "_lastTransferTimestamp",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1371,
								"contract": "TOLCOIN_flattened.sol:TOLCOIN",
								"label": "isExcludedFromAntiBot",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"TOLCOIN_flattened.sol": {
				"ast": {
					"absolutePath": "TOLCOIN_flattened.sol",
					"exportedSymbols": {
						"Address": [
							1341
						],
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"ERC20Burnable": [
							812
						],
						"Errors": [
							1084
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							957
						],
						"Pausable": [
							1063
						],
						"TOLCOIN": [
							1497
						]
					},
					"id": 1498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "166:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "192:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "274:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "287:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "456:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "465:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "503:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "487:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:57:0"
									},
									"src": "450:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "528:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "687:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "712:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "696:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "735:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "719:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:63:0"
									},
									"src": "681:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "765:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "844:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:9:0"
									},
									"scope": 77,
									"src": "835:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "981:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "991:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:9:0"
									},
									"scope": 77,
									"src": "972:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1046:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1273:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1290:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1282:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1302:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:6:0"
									},
									"scope": 77,
									"src": "1264:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1339:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1617:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1635:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1627:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1650:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1642:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1682:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:9:0"
									},
									"scope": 77,
									"src": "1608:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1697:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2378:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2386:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2385:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:6:0"
									},
									"scope": 77,
									"src": "2369:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2448:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2759:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2772:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2794:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2786:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:6:0"
									},
									"scope": 77,
									"src": "2750:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1498,
							"src": "264:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3011:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3154:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3154:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3154:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3038:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3136:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3167:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3235:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3265:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:15:0"
									},
									"scope": 100,
									"src": "3226:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3286:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3356:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3362:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3388:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:15:0"
									},
									"scope": 100,
									"src": "3347:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3409:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3488:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3496:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3522:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:7:0"
									},
									"scope": 100,
									"src": "3479:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1498,
							"src": "3126:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3655:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3681:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4196:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4272:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4289:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4293:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4289:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4282:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4219:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4229:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4263:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4262:9:0"
									},
									"scope": 129,
									"src": "4210:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4379:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4396:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4400:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4396:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4389:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4321:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4329:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4363:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:16:0"
									},
									"scope": 129,
									"src": "4312:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4489:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4506:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4499:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4426:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4446:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:9:0"
									},
									"scope": 129,
									"src": "4417:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1498,
							"src": "4178:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4663:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4689:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4841:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4860:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5180:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5213:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5246:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:49:0"
									},
									"src": "5174:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5260:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5423:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5441:16:0"
									},
									"src": "5417:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5464:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5634:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5663:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5655:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:18:0"
									},
									"src": "5628:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5679:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6035:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6087:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6079:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6106:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6098:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6061:52:0"
									},
									"src": "6029:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6120:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6305:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6334:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6326:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6325:18:0"
									},
									"src": "6299:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6350:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6556:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6584:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:17:0"
									},
									"src": "6550:43:0"
								}
							],
							"scope": 1498,
							"src": "4831:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6597:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6751:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6771:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7001:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7028:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7019:15:0"
									},
									"src": "6995:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7041:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7184:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7206:17:0"
									},
									"src": "7178:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7230:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7530:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7559:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7551:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7592:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7550:48:0"
									},
									"src": "7524:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7605:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7768:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7787:16:0"
									},
									"src": "7762:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7810:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7980:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8010:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8002:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8001:18:0"
									},
									"src": "7974:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8026:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8284:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8319:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8311:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8337:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8329:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8310:35:0"
									},
									"src": "8278:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8352:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8537:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8567:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8559:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8558:18:0"
									},
									"src": "8531:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8583:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8791:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8812:18:0"
									},
									"src": "8785:46:0"
								}
							],
							"scope": 1498,
							"src": "6741:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8835:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8991:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9012:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9384:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9452:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9410:66:0"
									},
									"src": "9378:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9483:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9646:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9666:16:0"
									},
									"src": "9640:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9689:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9859:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9890:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9882:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9881:18:0"
									},
									"src": "9853:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9906:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10173:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10210:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10202:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10228:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10220:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10201:33:0"
									},
									"src": "10167:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10241:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10426:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10457:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10449:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10448:18:0"
									},
									"src": "10420:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10473:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10681:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10712:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10704:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10703:18:0"
									},
									"src": "10675:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10728:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11019:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11053:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11045:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11072:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11064:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11044:41:0"
									},
									"src": "11013:73:0"
								}
							],
							"scope": 1498,
							"src": "8981:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11220:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12035:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12035:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12035:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12044:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12044:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12044:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12052:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12052:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12052:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12068:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12068:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12068:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11250:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12026:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12131:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12087:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12103:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12095:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12087:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12114:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12219:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12147:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12163:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12155:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12147:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12190:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12182:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12174:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12201:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12253:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12237:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12287:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12272:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12272:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12313:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12298:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12298:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12540:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12550:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12558:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12550:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12550:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12573:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12573:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12327:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12510:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12496:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12517:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12495:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12540:0:0"
									},
									"scope": 771,
									"src": "12484:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12722:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12732:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12603:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12671:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12675:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12707:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12707:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12706:15:0"
									},
									"scope": 771,
									"src": "12662:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12926:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12936:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12757:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12873:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12879:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12911:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12910:15:0"
									},
									"scope": 771,
									"src": "12864:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13646:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13663:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13656:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12963:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13599:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13607:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13639:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13639:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13638:7:0"
									},
									"scope": 771,
									"src": "13590:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13793:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13810:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13803:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13678:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13752:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13784:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13783:9:0"
									},
									"scope": 771,
									"src": "13732:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13961:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13978:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13978:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13971:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13835:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13896:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13914:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13906:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13905:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13952:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13951:9:0"
									},
									"scope": 771,
									"src": "13887:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14273:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14291:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14283:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14283:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14299:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14299:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14283:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14331:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14338:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14342:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14321:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14321:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14321:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14358:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14009:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14207:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14224:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14216:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14236:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14228:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14215:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14266:6:0"
									},
									"scope": 771,
									"src": "14198:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14523:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14540:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14552:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14540:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14540:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14533:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14382:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14443:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14461:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14476:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14468:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14452:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14513:9:0"
									},
									"scope": 771,
									"src": "14434:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14960:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14978:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14970:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14970:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14986:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14986:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14970:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15017:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15024:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15033:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15008:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15008:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15008:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15049:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14580:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14890:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14906:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14923:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14897:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14954:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14954:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14953:6:0"
									},
									"scope": 771,
									"src": "14881:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15752:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15770:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15762:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15762:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15780:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15780:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15762:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15833:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15802:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15802:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15802:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15865:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15849:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15849:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15849:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15892:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15885:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15073:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15668:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15689:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15681:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15703:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15695:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15715:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15707:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15680:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15746:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15745:6:0"
									},
									"scope": 771,
									"src": "15659:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16345:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16359:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16367:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16367:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16359:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16355:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16379:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16427:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16419:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16419:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16419:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16400:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16400:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16393:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16454:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16468:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16460:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16460:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16454:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16450:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16472:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16522:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16514:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16514:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16514:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16493:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16493:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16486:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16559:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16563:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16545:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16545:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15909:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16285:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16317:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16309:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16294:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:0"
									},
									"scope": 771,
									"src": "16276:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16966:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16980:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16996:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16988:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16988:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16980:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17154:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17176:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17168:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17168:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17190:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17200:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17190:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17168:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17223:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17237:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17223:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17219:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17244:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17294:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17300:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17313:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17269:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17269:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17262:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17347:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17454:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17464:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17454:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17472:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17486:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17472:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17454:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17454:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16976:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17000:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17116:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17132:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17116:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17116:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17530:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17544:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17536:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17536:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17530:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17745:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17759:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17904:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17914:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17904:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17921:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17904:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17904:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17526:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17548:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17562:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17693:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17709:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17693:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17693:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17981:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17985:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17966:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17966:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17961:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16582:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16900:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16916:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16908:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16930:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16922:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16942:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16934:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16907:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16966:0:0"
									},
									"scope": 771,
									"src": "16891:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18397:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18422:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18422:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18411:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18407:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18434:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18484:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18476:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18476:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18476:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18455:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18455:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18448:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18523:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18515:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18515:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18507:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18507:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18004:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18350:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18373:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18355:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18397:0:0"
									},
									"scope": 771,
									"src": "18341:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18923:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18956:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18948:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18948:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18937:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18933:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18960:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19008:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19000:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19000:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19000:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18981:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18981:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18974:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19056:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19048:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19048:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19060:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19031:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19031:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18555:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18876:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18890:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18882:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18881:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18923:0:0"
									},
									"scope": 771,
									"src": "18867:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19683:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19702:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19718:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19693:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19693:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19693:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19079:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19618:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19635:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19627:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19650:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19642:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19667:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19659:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19626:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19683:0:0"
									},
									"scope": 771,
									"src": "19609:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20682:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20696:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20705:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20705:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20696:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20692:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20717:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20767:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20759:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20759:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20759:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20738:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20738:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20731:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20805:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20805:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20794:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20790:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20817:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20866:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20858:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20858:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20858:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20838:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20838:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20831:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20889:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20901:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20889:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20889:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20919:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20889:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20889:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20938:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20934:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20949:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20977:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20984:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20993:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20968:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20968:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20963:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19743:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20593:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20610:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20602:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20634:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20654:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20649:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20649:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20601:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20682:0:0"
									},
									"scope": 771,
									"src": "20584:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21387:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21405:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21397:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21434:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21441:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21424:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21424:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21397:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21463:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21487:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21487:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21482:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21482:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21496:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21482:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21463:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21459:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21501:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21519:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21538:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21519:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21515:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21545:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21597:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21606:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21624:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21570:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21570:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21563:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21658:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21695:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21702:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21711:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21730:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21711:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21737:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21686:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21686:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21686:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21022:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21307:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21346:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21338:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21363:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21355:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21322:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21387:0:0"
									},
									"scope": 771,
									"src": "21298:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1498,
							"src": "12008:9768:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21946:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22218:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22218:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22218:7:0"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC20",
										"nameLocations": [
											"22227:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22227:5:0"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "22227:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21974:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Burnable",
							"nameLocation": "22201:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "22397:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 784,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22413:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22413:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "22427:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22407:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22407:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "22407:26:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22239:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "22362:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22366:15:0"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22397:0:0"
									},
									"scope": 812,
									"src": "22353:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "22821:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 800,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22856:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22856:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "22831:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22831:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "22831:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22901:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22886:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22886:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "22886:21:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "22446:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22765:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22773:32:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22821:0:0"
									},
									"scope": 812,
									"src": "22756:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1498,
							"src": "22183:733:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23042:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 815,
										"name": "Context",
										"nameLocations": [
											"23586:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "23586:7:0"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "23586:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "23069:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957,
								129
							],
							"name": "Ownable",
							"nameLocation": "23575:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 818,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23616:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "23600:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23600:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "23629:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 823,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "23725:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "23752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23751:17:0"
									},
									"src": "23719:50:0"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "23775:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 828,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23868:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23896:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23888:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23887:15:0"
									},
									"src": "23862:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 834,
									"name": "OwnershipTransferred",
									"nameLocation": "23915:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23952:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23936:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23983:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23967:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23935:57:0"
									},
									"src": "23909:84:0"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "24153:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "24167:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24191:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24183:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24183:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24167:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "24163:95:0",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "24195:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24244:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24236:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24236:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24236:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "24216:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24216:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "24209:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "24286:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 855,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "24267:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24267:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "24267:32:0"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "23999:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "24139:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24131:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24130:22:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24153:0:0"
									},
									"scope": 957,
									"src": "24119:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "24415:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "24425:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24425:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24425:13:0"
											},
											{
												"id": 866,
												"nodeType": "PlaceholderStatement",
												"src": "24448:1:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "24312:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 868,
									"name": "onlyOwner",
									"nameLocation": "24403:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24412:2:0"
									},
									"src": "24394:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "24587:30:0",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "24604:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "24597:13:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "24462:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "24541:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24546:2:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "24578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24577:9:0"
									},
									"scope": 957,
									"src": "24532:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "24735:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "24749:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24749:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "24760:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24760:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24749:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "24745:101:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "24774:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 887,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "24822:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24822:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "24795:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24795:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "24788:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "24623:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "24699:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24710:2:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24735:0:0"
									},
									"scope": 957,
									"src": "24690:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "25241:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25270:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 901,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25270:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25270:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 900,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25251:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25251:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "25251:30:0"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "24858:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 897,
												"name": "onlyOwner",
												"nameLocations": [
													"25231:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25231:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25231:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "25196:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25213:2:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25241:0:0"
									},
									"scope": 957,
									"src": "25187:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "25507:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "25521:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25541:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25533:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25533:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25521:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "25517:91:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "25545:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25594:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25586:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25586:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25586:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "25566:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25566:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "25559:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "25636:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 931,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25617:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25617:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "25617:28:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "25294:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 914,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 913,
												"name": "onlyOwner",
												"nameLocations": [
													"25497:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25497:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25497:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "25446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "25464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25463:18:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25507:0:0"
									},
									"scope": 957,
									"src": "25437:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "25869:124:0",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25887:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "25879:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 942,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25879:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"id": 944,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "25898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25879:25:0"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25914:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 947,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "25923:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25914:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "25914:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 951,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "25967:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "25977:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 950,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "25946:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25946:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "EmitStatement",
												"src": "25941:45:0"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "25658:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25815:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "25834:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25833:18:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25869:0:0"
									},
									"scope": 957,
									"src": "25806:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1498,
							"src": "23557:2438:0",
							"usedErrors": [
								823,
								828
							],
							"usedEvents": [
								834
							]
						},
						{
							"id": 958,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26127:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 960,
										"name": "Context",
										"nameLocations": [
											"26623:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "26623:7:0"
									},
									"id": 961,
									"nodeType": "InheritanceSpecifier",
									"src": "26623:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 959,
								"nodeType": "StructuredDocumentation",
								"src": "26153:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1063,
							"linearizedBaseContracts": [
								1063,
								129
							],
							"name": "Pausable",
							"nameLocation": "26611:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "26637:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 966,
									"name": "Paused",
									"nameLocation": "26721:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26736:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "26728:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26727:17:0"
									},
									"src": "26715:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "26751:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 971,
									"name": "Unpaused",
									"nameLocation": "26832:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "26841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26840:17:0"
									},
									"src": "26826:32:0"
								},
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "26877:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1063,
									"src": "26864:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 972,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "26864:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "26977:32:0",
										"statements": [
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "26987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "26987:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "26987:15:0"
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "26891:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 982,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26974:2:0"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26977:0:0"
									},
									"scope": 1063,
									"src": "26963:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "27220:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 985,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "27230:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27230:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "27230:19:0"
											},
											{
												"id": 988,
												"nodeType": "PlaceholderStatement",
												"src": "27259:1:0"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "27015:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 990,
									"name": "whenNotPaused",
									"nameLocation": "27204:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27217:2:0"
									},
									"src": "27195:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "27467:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "27477:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27477:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "27477:16:0"
											},
											{
												"id": 996,
												"nodeType": "PlaceholderStatement",
												"src": "27503:1:0"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "27273:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 998,
									"name": "whenPaused",
									"nameLocation": "27454:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27464:2:0"
									},
									"src": "27445:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "27659:31:0",
										"statements": [
											{
												"expression": {
													"id": 1004,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 973,
													"src": "27676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1005,
												"nodeType": "Return",
												"src": "27669:14:0"
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "27517:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "27615:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27621:2:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "27653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27652:6:0"
									},
									"scope": 1063,
									"src": "27606:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "27809:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "27827:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1012,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "27828:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27828:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27838:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27819:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "27819:38:0"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "27696:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "27767:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27784:2:0"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27809:0:0"
									},
									"scope": 1063,
									"src": "27758:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "27984:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1024,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "28002:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28002:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28012:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27994:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "27994:41:0"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "27870:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "27945:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27959:2:0"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27984:0:0"
									},
									"scope": 1063,
									"src": "27936:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "28226:66:0",
										"statements": [
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "28236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28246:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "28236:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "28236:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1041,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "28272:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28272:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1040,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "28265:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28265:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "28260:25:0"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "28048:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1034,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1033,
												"name": "whenNotPaused",
												"nameLocations": [
													"28212:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 990,
												"src": "28212:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28212:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "28186:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28192:2:0"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28226:0:0"
									},
									"scope": 1063,
									"src": "28177:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "28472:69:0",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "28482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28492:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "28482:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "28482:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1057,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "28521:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28521:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1056,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "28512:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28512:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "EmitStatement",
												"src": "28507:27:0"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "28298:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "whenPaused",
												"nameLocations": [
													"28461:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 998,
												"src": "28461:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28461:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "28433:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28441:2:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28472:0:0"
									},
									"scope": 1063,
									"src": "28424:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1498,
							"src": "26593:1950:0",
							"usedErrors": [],
							"usedEvents": [
								966,
								971
							]
						},
						{
							"id": 1064,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28665:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1065,
								"nodeType": "StructuredDocumentation",
								"src": "28691:284:0",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1084,
							"linearizedBaseContracts": [
								1084
							],
							"name": "Errors",
							"nameLocation": "28984:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "28997:94:0",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1072,
									"name": "InsufficientBalance",
									"nameLocation": "29102:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "29130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "29122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "29147:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "29139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29121:33:0"
									},
									"src": "29096:59:0"
								},
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "29161:89:0",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1075,
									"name": "FailedCall",
									"nameLocation": "29261:10:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29271:2:0"
									},
									"src": "29255:19:0"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "29280:46:0",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1078,
									"name": "FailedDeployment",
									"nameLocation": "29337:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29353:2:0"
									},
									"src": "29331:25:0"
								},
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "29362:58:0",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1083,
									"name": "MissingPrecompile",
									"nameLocation": "29431:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "29449:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29448:9:0"
									},
									"src": "29425:33:0"
								}
							],
							"scope": 1498,
							"src": "28976:484:0",
							"usedErrors": [
								1072,
								1075,
								1078,
								1083
							],
							"usedEvents": []
						},
						{
							"id": 1085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29584:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1086,
								"nodeType": "StructuredDocumentation",
								"src": "29611:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1341,
							"linearizedBaseContracts": [
								1341
							],
							"name": "Address",
							"nameLocation": "29687:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "29701:75:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1091,
									"name": "AddressEmptyCode",
									"nameLocation": "29787:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "29812:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "29804:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29803:16:0"
									},
									"src": "29781:39:0"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "30807:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1101,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30829:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1341",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1341",
																		"typeString": "library Address"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1099,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30821:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30821:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30835:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "30821:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1104,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "30845:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30821:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "30817:125:0",
												"trueBody": {
													"id": 1117,
													"nodeType": "Block",
													"src": "30853:89:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1111,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "30909:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1341",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1341",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "30901:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "30901:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30901:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30915:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "30901:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "30924:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1106,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "30874:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1084_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30881:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1072,
																	"src": "30874:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30874:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1116,
															"nodeType": "RevertStatement",
															"src": "30867:64:0"
														}
													]
												}
											},
											{
												"assignments": [
													1120,
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "30958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "30953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1119,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "30953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "30980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "30967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1121,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "30967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31024:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1123,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "30994:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31004:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "30994:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "31016:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "30994:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30994:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30952:75:0"
											},
											{
												"condition": {
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31041:8:0",
													"subExpression": {
														"id": 1130,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "31042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "IfStatement",
												"src": "31037:58:0",
												"trueBody": {
													"id": 1136,
													"nodeType": "Block",
													"src": "31051:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1133,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "31073:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1132,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "31065:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31065:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1135,
															"nodeType": "ExpressionStatement",
															"src": "31065:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "29826:905:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "30745:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "30771:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "30755:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30755:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "30782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30754:43:0"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30807:0:0"
									},
									"scope": 1341,
									"src": "30736:365:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "32035:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1150,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "32074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "32082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32088:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1149,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "32052:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32052:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1154,
												"nodeType": "Return",
												"src": "32045:45:0"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "31107:834:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "31955:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "31976:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "31968:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31997:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "31984:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31984:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31967:35:0"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "32021:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32021:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32020:14:0"
									},
									"scope": 1341,
									"src": "31946:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "32534:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1170,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32556:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1341",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1341",
																		"typeString": "library Address"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32548:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32548:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32548:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32562:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "32548:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1173,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "32572:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32548:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "32544:123:0",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "32579:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1180,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "32635:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1341",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1341",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "32627:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1178,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "32627:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32627:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32641:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "32627:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1183,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "32650:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1175,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "32600:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1084_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32607:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1072,
																	"src": "32600:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32600:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1185,
															"nodeType": "RevertStatement",
															"src": "32593:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													1189,
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "32682:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "32677:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1188,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "32677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "32704:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "32691:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1190,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "32691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"arguments": [
														{
															"id": 1196,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "32744:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1192,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "32718:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32725:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "32718:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1194,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "32737:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "32718:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32718:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32676:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "32793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "32801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1202,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "32810:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1199,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "32766:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32766:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1204,
												"nodeType": "Return",
												"src": "32759:62:0"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "32103:313:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "32430:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "32460:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "32452:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "32468:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "32487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32451:50:0"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "32520:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32520:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32519:14:0"
									},
									"scope": 1341,
									"src": "32421:407:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "33067:154:0",
										"statements": [
											{
												"assignments": [
													1217,
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "33083:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "33078:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1216,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "33078:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "33105:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "33092:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1218,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "33092:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"arguments": [
														{
															"id": 1222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "33137:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "33119:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33126:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "33119:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33119:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33077:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "33186:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "33194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "33203:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1225,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "33159:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33159:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1230,
												"nodeType": "Return",
												"src": "33152:62:0"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "32834:128:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "32976:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "33003:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "32995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "33024:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "33011:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32994:35:0"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "33053:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33053:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33052:14:0"
									},
									"scope": 1341,
									"src": "32967:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "33459:156:0",
										"statements": [
											{
												"assignments": [
													1243,
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "33475:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "33470:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1242,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "33470:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "33497:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "33484:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1244,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "33484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"id": 1248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "33531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "33511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33518:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "33511:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33511:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33469:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "33580:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "33588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1254,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "33597:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1251,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "33553:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33553:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1241,
												"id": 1256,
												"nodeType": "Return",
												"src": "33546:62:0"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "33227:130:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "33371:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "33400:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "33392:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "33421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "33408:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33391:35:0"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "33445:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33445:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33444:14:0"
									},
									"scope": 1341,
									"src": "33362:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "34041:424:0",
										"statements": [
											{
												"condition": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "34055:8:0",
													"subExpression": {
														"id": 1270,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "34056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "34115:344:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1277,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "34303:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34314:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "34303:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34324:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "34303:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1281,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "34329:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "34336:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "34329:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "34341:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "34329:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34351:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "34329:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "34303:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1292,
															"nodeType": "IfStatement",
															"src": "34299:119:0",
															"trueBody": {
																"id": 1291,
																"nodeType": "Block",
																"src": "34354:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1288,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "34396:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1287,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1091,
																				"src": "34379:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34379:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1290,
																		"nodeType": "RevertStatement",
																		"src": "34372:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1293,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "34438:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1269,
															"id": 1294,
															"nodeType": "Return",
															"src": "34431:17:0"
														}
													]
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "34051:408:0",
												"trueBody": {
													"id": 1276,
													"nodeType": "Block",
													"src": "34065:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1273,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "34087:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1272,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "34079:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34079:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1275,
															"nodeType": "ExpressionStatement",
															"src": "34079:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "33621:257:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "33892:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "33936:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "33928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "33957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "33952:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "33987:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "33974:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33974:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33918:85:0"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "34027:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34027:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34026:14:0"
									},
									"scope": 1341,
									"src": "33883:582:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "34769:122:0",
										"statements": [
											{
												"condition": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "34783:8:0",
													"subExpression": {
														"id": 1308,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "34784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "34843:42:0",
													"statements": [
														{
															"expression": {
																"id": 1315,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "34864:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1307,
															"id": 1316,
															"nodeType": "Return",
															"src": "34857:17:0"
														}
													]
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "34779:106:0",
												"trueBody": {
													"id": 1314,
													"nodeType": "Block",
													"src": "34793:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1311,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "34815:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1310,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "34807:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34807:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1313,
															"nodeType": "ExpressionStatement",
															"src": "34807:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "34471:191:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "34676:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "34698:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "34693:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34693:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "34720:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "34707:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34692:39:0"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "34755:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34755:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34754:14:0"
									},
									"scope": 1341,
									"src": "34667:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "35060:432:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1326,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "35136:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35147:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "35136:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35156:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35136:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "35435:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1332,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "35456:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1084_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "35463:10:0",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1075,
																	"src": "35456:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35456:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1336,
															"nodeType": "RevertStatement",
															"src": "35449:26:0"
														}
													]
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "35132:354:0",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "35159:270:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "35286:133:0",
																"nodeType": "YulBlock",
																"src": "35286:133:0",
																"statements": [
																	{
																		"nativeSrc": "35304:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "35304:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "35333:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "35333:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "35327:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "35327:5:0"
																			},
																			"nativeSrc": "35327:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "35327:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "35308:15:0",
																				"nodeType": "YulTypedName",
																				"src": "35308:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "35372:2:0",
																							"nodeType": "YulLiteral",
																							"src": "35372:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "35376:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "35376:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "35368:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "35368:3:0"
																					},
																					"nativeSrc": "35368:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "35368:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "35389:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "35389:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "35361:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "35361:6:0"
																			},
																			"nativeSrc": "35361:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "35361:44:0"
																		},
																		"nativeSrc": "35361:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "35361:44:0"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1323,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "35333:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1323,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "35376:10:0",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1330,
															"nodeType": "InlineAssembly",
															"src": "35261:158:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "34897:103:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "35014:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "35035:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "35022:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35022:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35021:25:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35060:0:0"
									},
									"scope": 1341,
									"src": "35005:487:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1498,
							"src": "29679:5815:0",
							"usedErrors": [
								1091
							],
							"usedEvents": []
						},
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "35519:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1343,
										"name": "ERC20",
										"nameLocations": [
											"35570:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "35570:5:0"
									},
									"id": 1344,
									"nodeType": "InheritanceSpecifier",
									"src": "35570:5:0"
								},
								{
									"baseName": {
										"id": 1345,
										"name": "ERC20Burnable",
										"nameLocations": [
											"35577:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "35577:13:0"
									},
									"id": 1346,
									"nodeType": "InheritanceSpecifier",
									"src": "35577:13:0"
								},
								{
									"baseName": {
										"id": 1347,
										"name": "Pausable",
										"nameLocations": [
											"35592:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "35592:8:0"
									},
									"id": 1348,
									"nodeType": "InheritanceSpecifier",
									"src": "35592:8:0"
								},
								{
									"baseName": {
										"id": 1349,
										"name": "Ownable",
										"nameLocations": [
											"35602:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "35602:7:0"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "35602:7:0"
								}
							],
							"canonicalName": "TOLCOIN",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1497,
							"linearizedBaseContracts": [
								1497,
								957,
								1063,
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "TOLCOIN",
							"nameLocation": "35559:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1353,
									"libraryName": {
										"id": 1351,
										"name": "Address",
										"nameLocations": [
											"35622:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1341,
										"src": "35622:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "35616:26:0",
									"typeName": {
										"id": 1352,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "35634:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 1360,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "35672:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1497,
									"src": "35648:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "35648:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000000"
										},
										"id": 1359,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f3030305f303030",
											"id": 1355,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "35685:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000_by_1",
												"typeString": "int_const 1000000000000"
											},
											"value": "1_000_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1358,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1356,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "35705:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1357,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "35711:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "35705:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "35685:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a702e8d",
									"id": 1363,
									"mutability": "mutable",
									"name": "transferDelay",
									"nameLocation": "35734:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1497,
									"src": "35719:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "35719:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "35750:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1367,
									"mutability": "mutable",
									"name": "_lastTransferTimestamp",
									"nameLocation": "35822:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1497,
									"src": "35786:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1366,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35794:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "35786:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1365,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35805:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5d5b29c1",
									"id": 1371,
									"mutability": "mutable",
									"name": "isExcludedFromAntiBot",
									"nameLocation": "35882:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1497,
									"src": "35850:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1370,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1368,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35858:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "35850:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1369,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "35869:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "35972:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1383,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35988:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35992:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35988:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1385,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "36000:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "35982:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35982:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "35982:29:0"
											},
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1388,
															"name": "isExcludedFromAntiBot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "36021:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1391,
														"indexExpression": {
															"expression": {
																"id": 1389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "36043:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "36047:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "36043:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36021:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36057:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "36021:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "36021:40:0"
											}
										]
									},
									"id": 1396,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "544f4c434f494e",
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35930:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bb87c7ce00b3573269385cd5c3611e504dd78541dd59246db4483beada7dd018",
														"typeString": "literal_string \"TOLCOIN\""
													},
													"value": "TOLCOIN"
												},
												{
													"hexValue": "544f4c434f494e",
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35941:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bb87c7ce00b3573269385cd5c3611e504dd78541dd59246db4483beada7dd018",
														"typeString": "literal_string \"TOLCOIN\""
													},
													"value": "TOLCOIN"
												}
											],
											"id": 1376,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1373,
												"name": "ERC20",
												"nameLocations": [
													"35924:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "35924:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35924:27:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1378,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "35960:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "35964:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "35960:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1380,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1377,
												"name": "Ownable",
												"nameLocations": [
													"35952:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "35952:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35952:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35921:2:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35972:0:0"
									},
									"scope": 1497,
									"src": "35910:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "36108:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1401,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "36118:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36118:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "36118:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1398,
												"name": "onlyOwner",
												"nameLocations": [
													"36098:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "36098:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36098:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "36083:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36088:2:0"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36108:0:0"
									},
									"scope": 1497,
									"src": "36074:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "36175:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1410,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "36185:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36185:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "36185:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1407,
												"name": "onlyOwner",
												"nameLocations": [
													"36165:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "36165:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36165:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "36148:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36155:2:0"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36175:0:0"
									},
									"scope": 1497,
									"src": "36139:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "36287:58:0",
										"statements": [
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1423,
															"name": "isExcludedFromAntiBot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "36297:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1425,
														"indexExpression": {
															"id": 1424,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "36319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36297:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1426,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "36330:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36297:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "36297:41:0"
											}
										]
									},
									"functionSelector": "cfc06e0b",
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1420,
												"name": "onlyOwner",
												"nameLocations": [
													"36277:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "36277:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36277:9:0"
										}
									],
									"name": "excludeFromAntiBot",
									"nameLocation": "36217:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "36244:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "36236:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "36258:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "36253:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36253:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36235:32:0"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36287:0:0"
									},
									"scope": 1497,
									"src": "36208:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "36420:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1438,
																"name": "delayInSeconds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "36438:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "333030",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36456:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "36438:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44656c617920746f6f206c6f6e67",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36461:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf58a3f4f4878719bce24746f213876fed76b17067041b1a1eac3575dcd3260d",
																"typeString": "literal_string \"Delay too long\""
															},
															"value": "Delay too long"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf58a3f4f4878719bce24746f213876fed76b17067041b1a1eac3575dcd3260d",
																"typeString": "literal_string \"Delay too long\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36430:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "36430:48:0"
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "transferDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "36488:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1445,
														"name": "delayInSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "36504:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36488:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "36488:30:0"
											}
										]
									},
									"functionSelector": "36e8c9b3",
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1434,
												"name": "onlyOwner",
												"nameLocations": [
													"36410:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "36410:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36410:9:0"
										}
									],
									"name": "setTransferDelay",
									"nameLocation": "36360:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "delayInSeconds",
												"nameLocation": "36385:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "36377:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36376:24:0"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36420:0:0"
									},
									"scope": 1497,
									"src": "36351:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "36734:388:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1459,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "36752:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36752:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36764:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36744:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "36744:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36822:28:0",
														"subExpression": {
															"baseExpression": {
																"id": 1465,
																"name": "isExcludedFromAntiBot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "36823:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1467,
															"indexExpression": {
																"id": 1466,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "36845:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36823:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36854:26:0",
														"subExpression": {
															"baseExpression": {
																"id": 1469,
																"name": "isExcludedFromAntiBot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "36855:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1471,
															"indexExpression": {
																"id": 1470,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "36877:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36855:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36822:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "36818:298:0",
												"trueBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "36882:234:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1475,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "36921:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "36927:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "36921:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1477,
																					"name": "_lastTransferTimestamp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1367,
																					"src": "36939:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1479,
																				"indexExpression": {
																					"id": 1478,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1451,
																					"src": "36962:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36939:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36921:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1481,
																			"name": "transferDelay",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "36971:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36921:63:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416e74692d626f743a205472616e7366657220746f6f20736f6f6e",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37002:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_03c939792ff02e765f9608f8715264791f8b46ccb65170e8055e53c7ab573ace",
																			"typeString": "literal_string \"Anti-bot: Transfer too soon\""
																		},
																		"value": "Anti-bot: Transfer too soon"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_03c939792ff02e765f9608f8715264791f8b46ccb65170e8055e53c7ab573ace",
																			"typeString": "literal_string \"Anti-bot: Transfer too soon\""
																		}
																	],
																	"id": 1474,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36896:149:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "36896:149:0"
														},
														{
															"expression": {
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1486,
																		"name": "_lastTransferTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "37059:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1488,
																	"indexExpression": {
																		"id": 1487,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "37082:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "37059:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1489,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "37090:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "37096:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "37090:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37059:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "37059:46:0"
														}
													]
												}
											}
										]
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "36642:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36671:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36663:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36685:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36677:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36689:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36662:42:0"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36734:0:0"
									},
									"scope": 1497,
									"src": "36633:489:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1498,
							"src": "35550:1574:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								823,
								828
							],
							"usedEvents": [
								11,
								20,
								834,
								966,
								971
							]
						}
					],
					"src": "166:36959:0"
				},
				"id": 0
			}
		}
	}
}